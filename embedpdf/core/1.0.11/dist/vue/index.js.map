{"version":3,"file":"index.js","sources":["../../src/vue/context.ts","../../src/vue/composables/use-registry.ts","../../src/vue/composables/use-core-state.ts","../../src/vue/composables/use-plugin.ts","../../src/vue/composables/use-capability.ts","../../src/vue/composables/use-store-state.ts","../../src/vue/components/embed-pdf.vue"],"sourcesContent":["import { InjectionKey, Ref, ShallowRef } from 'vue';\nimport type { PluginRegistry } from '@embedpdf/core';\n\nexport interface PDFContextState {\n  registry: ShallowRef<PluginRegistry | null>;\n  isInitializing: Ref<boolean>;\n  pluginsReady: Ref<boolean>;\n}\n\nexport const pdfKey: InjectionKey<PDFContextState> = Symbol('pdfKey');\n","import { inject } from 'vue';\nimport { pdfKey } from '../context';\n\nexport function useRegistry() {\n  const ctx = inject(pdfKey);\n  if (!ctx) throw new Error('useRegistry must be used inside <EmbedPDF>');\n  return ctx;\n}\n","import { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { arePropsEqual, type CoreState } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\nexport function useCoreState() {\n  const { registry } = useRegistry();\n  const core = ref<CoreState>();\n\n  onMounted(() => {\n    const store = registry.value!.getStore();\n    core.value = store.getState().core;\n\n    const unsub = store.subscribe((action, newSt, oldSt) => {\n      if (store.isCoreAction(action) && !arePropsEqual(newSt.core, oldSt.core)) {\n        core.value = newSt.core;\n      }\n    });\n    onBeforeUnmount(unsub);\n  });\n\n  return core;\n}\n","import { shallowRef, ref, onMounted, watch, type ShallowRef, type Ref } from 'vue';\nimport type { BasePlugin } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\nexport interface PluginState<T extends BasePlugin> {\n  plugin: ShallowRef<T | null>;\n  isLoading: Ref<boolean>;\n  ready: Ref<Promise<void>>;\n}\n\nexport function usePlugin<T extends BasePlugin>(pluginId: T['id']): PluginState<T> {\n  const { registry } = useRegistry();\n\n  const plugin = shallowRef(null) as ShallowRef<T | null>;\n\n  const isLoading = ref(true);\n  const ready = ref<Promise<void>>(new Promise(() => {}));\n\n  const load = () => {\n    if (!registry.value) return;\n\n    const p = registry.value.getPlugin<T>(pluginId);\n    if (!p) throw new Error(`Plugin ${pluginId} not found`);\n\n    plugin.value = p;\n    isLoading.value = false;\n    ready.value = p.ready?.() ?? Promise.resolve();\n  };\n\n  onMounted(load);\n  watch(registry, load);\n\n  return { plugin, isLoading, ready };\n}\n","import type { BasePlugin } from '@embedpdf/core';\nimport { computed, type Ref } from 'vue';\nimport { usePlugin } from './use-plugin';\n\nexport interface CapabilityState<C> {\n  provides: Ref<C | null>;\n  isLoading: Ref<boolean>;\n  ready: Ref<Promise<void>>;\n}\n\n/**\n * Access the public capability exposed by a plugin.\n *\n * @example\n * const { provides: zoom } = useCapability<ZoomPlugin>(ZoomPlugin.id);\n * zoom.value?.zoomIn();\n */\nexport function useCapability<T extends BasePlugin>(\n  pluginId: T['id'],\n): CapabilityState<ReturnType<NonNullable<T['provides']>>> {\n  const { plugin, isLoading, ready } = usePlugin<T>(pluginId);\n\n  const provides = computed(() => {\n    if (!plugin.value) return null;\n    if (!plugin.value.provides) {\n      throw new Error(`Plugin ${pluginId} does not implement provides()`);\n    }\n    return plugin.value.provides() as ReturnType<NonNullable<T['provides']>>;\n  });\n\n  return { provides, isLoading, ready };\n}\n","import { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport type { CoreState, StoreState } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\n/**\n * Reactive getter for the *entire* global store.\n * Re‑emits whenever any slice changes.\n *\n * @example\n * const state = useStoreState();              // Ref<StoreState<CoreState>>\n * console.log(state.value.core.scale);\n */\nexport function useStoreState<T = CoreState>() {\n  const { registry } = useRegistry();\n  const state = ref<StoreState<T>>();\n\n  function attach() {\n    if (!registry.value) return () => {};\n\n    // initial snapshot\n    state.value = registry.value.getStore().getState() as StoreState<T>;\n\n    // live updates\n    return registry.value\n      .getStore()\n      .subscribe((_action, newState) => (state.value = newState as StoreState<T>));\n  }\n\n  /* attach now and re‑attach if registry instance ever changes */\n  let unsubscribe = attach();\n  watch(registry, () => {\n    unsubscribe?.();\n    unsubscribe = attach();\n  });\n\n  onBeforeUnmount(() => unsubscribe?.());\n\n  return state;\n}\n","<script setup lang=\"ts\">\nimport { ref, provide, onMounted, onBeforeUnmount, shallowRef } from 'vue';\nimport { PluginRegistry, PluginBatchRegistration } from '@embedpdf/core';\nimport { PdfEngine } from '@embedpdf/models';\nimport { pdfKey, PDFContextState } from '../context';\n\nconst props = defineProps<{\n  engine: PdfEngine;\n  plugins: PluginBatchRegistration<any, any>[];\n  onInitialized?: (registry: PluginRegistry) => Promise<void>;\n}>();\n\n/* reactive state */\nconst registry = shallowRef<PluginRegistry | null>(null);\nconst isInit     = ref(true);\nconst pluginsOk  = ref(false);\n\n/* expose to children */\nprovide<PDFContextState>(pdfKey, { registry, isInitializing: isInit, pluginsReady: pluginsOk });\n\nonMounted(async () => {\n  const reg = new PluginRegistry(props.engine);\n  reg.registerPluginBatch(props.plugins);\n  await reg.initialize();\n  await props.onInitialized?.(reg);\n\n  registry.value = reg;\n  isInit.value   = false;\n\n  reg.pluginsReady().then(() => (pluginsOk.value = true));\n});\n\nonBeforeUnmount(() => registry.value?.destroy());\n</script>\n\n<template>\n  <!-- scoped slot keeps API parity with React version -->\n  <slot :registry=\"registry\"\n        :isInitializing=\"isInit\"\n        :pluginsReady=\"pluginsOk\" />\n</template>"],"names":["pdfKey","useRegistry","ctx","inject","useCoreState","registry","core","ref","onMounted","store","unsub","action","newSt","oldSt","arePropsEqual","onBeforeUnmount","usePlugin","pluginId","plugin","shallowRef","isLoading","ready","load","p","_a","watch","useCapability","computed","useStoreState","state","attach","_action","newState","unsubscribe","props","__props","isInit","pluginsOk","provide","reg","PluginRegistry","_renderSlot","_ctx"],"mappings":"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"}