{"version":3,"file":"index.cjs","sources":["../../src/vue/context.ts","../../src/vue/composables/use-registry.ts","../../src/vue/composables/use-core-state.ts","../../src/vue/composables/use-plugin.ts","../../src/vue/composables/use-capability.ts","../../src/vue/composables/use-store-state.ts","../../src/vue/components/embed-pdf.vue"],"sourcesContent":["import { InjectionKey, Ref, ShallowRef } from 'vue';\nimport type { PluginRegistry } from '@embedpdf/core';\n\nexport interface PDFContextState {\n  registry: ShallowRef<PluginRegistry | null>;\n  isInitializing: Ref<boolean>;\n  pluginsReady: Ref<boolean>;\n}\n\nexport const pdfKey: InjectionKey<PDFContextState> = Symbol('pdfKey');\n","import { inject } from 'vue';\nimport { pdfKey } from '../context';\n\nexport function useRegistry() {\n  const ctx = inject(pdfKey);\n  if (!ctx) throw new Error('useRegistry must be used inside <EmbedPDF>');\n  return ctx;\n}\n","import { ref, onMounted, onBeforeUnmount } from 'vue';\nimport { arePropsEqual, type CoreState } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\nexport function useCoreState() {\n  const { registry } = useRegistry();\n  const core = ref<CoreState>();\n\n  onMounted(() => {\n    const store = registry.value!.getStore();\n    core.value = store.getState().core;\n\n    const unsub = store.subscribe((action, newSt, oldSt) => {\n      if (store.isCoreAction(action) && !arePropsEqual(newSt.core, oldSt.core)) {\n        core.value = newSt.core;\n      }\n    });\n    onBeforeUnmount(unsub);\n  });\n\n  return core;\n}\n","import { shallowRef, ref, onMounted, watch, type ShallowRef, type Ref } from 'vue';\nimport type { BasePlugin } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\nexport interface PluginState<T extends BasePlugin> {\n  plugin: ShallowRef<T | null>;\n  isLoading: Ref<boolean>;\n  ready: Ref<Promise<void>>;\n}\n\nexport function usePlugin<T extends BasePlugin>(pluginId: T['id']): PluginState<T> {\n  const { registry } = useRegistry();\n\n  const plugin = shallowRef(null) as ShallowRef<T | null>;\n\n  const isLoading = ref(true);\n  const ready = ref<Promise<void>>(new Promise(() => {}));\n\n  const load = () => {\n    if (!registry.value) return;\n\n    const p = registry.value.getPlugin<T>(pluginId);\n    if (!p) throw new Error(`Plugin ${pluginId} not found`);\n\n    plugin.value = p;\n    isLoading.value = false;\n    ready.value = p.ready?.() ?? Promise.resolve();\n  };\n\n  onMounted(load);\n  watch(registry, load);\n\n  return { plugin, isLoading, ready };\n}\n","import type { BasePlugin } from '@embedpdf/core';\nimport { computed, type Ref } from 'vue';\nimport { usePlugin } from './use-plugin';\n\nexport interface CapabilityState<C> {\n  provides: Ref<C | null>;\n  isLoading: Ref<boolean>;\n  ready: Ref<Promise<void>>;\n}\n\n/**\n * Access the public capability exposed by a plugin.\n *\n * @example\n * const { provides: zoom } = useCapability<ZoomPlugin>(ZoomPlugin.id);\n * zoom.value?.zoomIn();\n */\nexport function useCapability<T extends BasePlugin>(\n  pluginId: T['id'],\n): CapabilityState<ReturnType<NonNullable<T['provides']>>> {\n  const { plugin, isLoading, ready } = usePlugin<T>(pluginId);\n\n  const provides = computed(() => {\n    if (!plugin.value) return null;\n    if (!plugin.value.provides) {\n      throw new Error(`Plugin ${pluginId} does not implement provides()`);\n    }\n    return plugin.value.provides() as ReturnType<NonNullable<T['provides']>>;\n  });\n\n  return { provides, isLoading, ready };\n}\n","import { ref, onMounted, onBeforeUnmount, watch } from 'vue';\nimport type { CoreState, StoreState } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\n/**\n * Reactive getter for the *entire* global store.\n * Re‑emits whenever any slice changes.\n *\n * @example\n * const state = useStoreState();              // Ref<StoreState<CoreState>>\n * console.log(state.value.core.scale);\n */\nexport function useStoreState<T = CoreState>() {\n  const { registry } = useRegistry();\n  const state = ref<StoreState<T>>();\n\n  function attach() {\n    if (!registry.value) return () => {};\n\n    // initial snapshot\n    state.value = registry.value.getStore().getState() as StoreState<T>;\n\n    // live updates\n    return registry.value\n      .getStore()\n      .subscribe((_action, newState) => (state.value = newState as StoreState<T>));\n  }\n\n  /* attach now and re‑attach if registry instance ever changes */\n  let unsubscribe = attach();\n  watch(registry, () => {\n    unsubscribe?.();\n    unsubscribe = attach();\n  });\n\n  onBeforeUnmount(() => unsubscribe?.());\n\n  return state;\n}\n","<script setup lang=\"ts\">\nimport { ref, provide, onMounted, onBeforeUnmount, shallowRef } from 'vue';\nimport { PluginRegistry, PluginBatchRegistration } from '@embedpdf/core';\nimport { PdfEngine } from '@embedpdf/models';\nimport { pdfKey, PDFContextState } from '../context';\n\nconst props = defineProps<{\n  engine: PdfEngine;\n  plugins: PluginBatchRegistration<any, any>[];\n  onInitialized?: (registry: PluginRegistry) => Promise<void>;\n}>();\n\n/* reactive state */\nconst registry = shallowRef<PluginRegistry | null>(null);\nconst isInit     = ref(true);\nconst pluginsOk  = ref(false);\n\n/* expose to children */\nprovide<PDFContextState>(pdfKey, { registry, isInitializing: isInit, pluginsReady: pluginsOk });\n\nonMounted(async () => {\n  const reg = new PluginRegistry(props.engine);\n  reg.registerPluginBatch(props.plugins);\n  await reg.initialize();\n  await props.onInitialized?.(reg);\n\n  registry.value = reg;\n  isInit.value   = false;\n\n  reg.pluginsReady().then(() => (pluginsOk.value = true));\n});\n\nonBeforeUnmount(() => registry.value?.destroy());\n</script>\n\n<template>\n  <!-- scoped slot keeps API parity with React version -->\n  <slot :registry=\"registry\"\n        :isInitializing=\"isInit\"\n        :pluginsReady=\"pluginsOk\" />\n</template>"],"names":["pdfKey","useRegistry","ctx","inject","useCoreState","registry","core","ref","onMounted","store","unsub","action","newSt","oldSt","arePropsEqual","onBeforeUnmount","usePlugin","pluginId","plugin","shallowRef","isLoading","ready","load","p","_a","watch","useCapability","computed","useStoreState","state","attach","_action","newState","unsubscribe","props","__props","isInit","pluginsOk","provide","reg","PluginRegistry","_renderSlot","_ctx"],"mappings":"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"}