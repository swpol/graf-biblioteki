{"version":3,"file":"pdfium-direct-engine.js","sources":["../src/lib/pdfium/helper.ts","../src/lib/pdfium/cache.ts","../src/lib/pdfium/engine.ts","../src/lib/pdfium/web/direct-engine.ts"],"sourcesContent":["import { PdfiumRuntimeMethods, PdfiumModule } from '@embedpdf/pdfium';\n\n/**\n * Read string from WASM heap\n * @param wasmModule - pdfium wasm module instance\n * @param readChars - function to read chars\n * @param parseChars - function to parse chars\n * @param defaultLength - default length of chars that needs to read\n * @returns string from the heap\n *\n * @public\n */\nexport function readString(\n  wasmModule: PdfiumRuntimeMethods & PdfiumModule,\n  readChars: (buffer: number, bufferLength: number) => number,\n  parseChars: (buffer: number) => string,\n  defaultLength: number = 100,\n): string {\n  let buffer = wasmModule.wasmExports.malloc(defaultLength);\n  for (let i = 0; i < defaultLength; i++) {\n    wasmModule.HEAP8[buffer + i] = 0;\n  }\n  const actualLength = readChars(buffer, defaultLength);\n  let str: string;\n  if (actualLength > defaultLength) {\n    wasmModule.wasmExports.free(buffer);\n    buffer = wasmModule.wasmExports.malloc(actualLength);\n    for (let i = 0; i < actualLength; i++) {\n      wasmModule.HEAP8[buffer + i] = 0;\n    }\n    readChars(buffer, actualLength);\n    str = parseChars(buffer);\n  } else {\n    str = parseChars(buffer);\n  }\n  wasmModule.wasmExports.free(buffer);\n\n  return str;\n}\n/**\n * Read arraybyffer from WASM heap\n * @param wasmModule - pdfium wasm module instance\n * @param readChars - function to read chars\n * @returns arraybuffer from the heap\n *\n * @public\n */\nexport function readArrayBuffer(\n  wasmModule: PdfiumRuntimeMethods & PdfiumModule,\n  readChars: (buffer: number, bufferLength: number) => number,\n): ArrayBuffer {\n  const bufferSize = readChars(0, 0);\n\n  const bufferPtr = wasmModule.wasmExports.malloc(bufferSize);\n\n  readChars(bufferPtr, bufferSize);\n\n  const arrayBuffer = new ArrayBuffer(bufferSize);\n  const view = new DataView(arrayBuffer);\n\n  for (let i = 0; i < bufferSize; i++) {\n    view.setInt8(i, wasmModule.getValue(bufferPtr + i, 'i8'));\n  }\n\n  wasmModule.wasmExports.free(bufferPtr);\n\n  return arrayBuffer;\n}\n","import { WrappedPdfiumModule } from '@embedpdf/pdfium';\n\nexport class PdfCache {\n  private readonly docs = new Map<string, DocumentContext>();\n\n  constructor(private readonly pdfium: WrappedPdfiumModule) {}\n\n  /** Open (or re-use) a document */\n  setDocument(id: string, filePtr: number, docPtr: number) {\n    let ctx = this.docs.get(id);\n    if (!ctx) {\n      ctx = new DocumentContext(filePtr, docPtr, this.pdfium);\n      this.docs.set(id, ctx);\n    }\n  }\n\n  /** Retrieve the DocumentContext for a given PdfDocumentObject */\n  getContext(docId: string): DocumentContext | undefined {\n    return this.docs.get(docId);\n  }\n\n  /** Close & fully release a document and all its pages */\n  closeDocument(docId: string): boolean {\n    const ctx = this.docs.get(docId);\n    if (!ctx) return false;\n    ctx.dispose(); // tears down pages first, then FPDF_CloseDocument, free()\n    this.docs.delete(docId);\n    return true;\n  }\n}\n\nexport class DocumentContext {\n  private readonly pageCache: PageCache;\n\n  constructor(\n    public readonly filePtr: number,\n    public readonly docPtr: number,\n    pdfium: WrappedPdfiumModule,\n  ) {\n    this.pageCache = new PageCache(pdfium, docPtr);\n  }\n\n  /** Main accessor for pages */\n  acquirePage(pageIdx: number): PageContext {\n    return this.pageCache.acquire(pageIdx);\n  }\n\n  /** Tear down all pages + this document */\n  dispose(): void {\n    // 1️⃣ release all pages (with their TTL or immediate)\n    this.pageCache.forceReleaseAll();\n\n    // 2️⃣ close the PDFium document\n    this.pageCache.pdf.FPDF_CloseDocument(this.docPtr);\n\n    // 3️⃣ free the file handle\n    this.pageCache.pdf.pdfium.wasmExports.free(this.filePtr);\n  }\n}\n\nexport class PageCache {\n  private readonly cache = new Map<number, PageContext>();\n\n  constructor(\n    public readonly pdf: WrappedPdfiumModule,\n    private readonly docPtr: number,\n  ) {}\n\n  acquire(pageIdx: number): PageContext {\n    let ctx = this.cache.get(pageIdx);\n    if (!ctx) {\n      const pagePtr = this.pdf.FPDF_LoadPage(this.docPtr, pageIdx);\n      ctx = new PageContext(this.pdf, this.docPtr, pageIdx, pagePtr, () => {\n        this.cache.delete(pageIdx);\n      });\n      this.cache.set(pageIdx, ctx);\n    }\n    ctx.clearExpiryTimer(); // cancel any pending teardown\n    ctx.bumpRefCount(); // bump ref‐count\n    return ctx;\n  }\n\n  forceReleaseAll(): void {\n    for (const ctx of this.cache.values()) {\n      ctx.disposeImmediate();\n    }\n    this.cache.clear();\n  }\n}\n\nconst PAGE_TTL = 5000; // 5 seconds\n\nexport class PageContext {\n  private refCount = 0;\n  private expiryTimer?: ReturnType<typeof setTimeout>;\n  private disposed = false;\n\n  // lazy helpers\n  private textPagePtr?: number;\n  private formInfoPtr?: number;\n  private formHandle?: number;\n\n  constructor(\n    private readonly pdf: WrappedPdfiumModule,\n    public readonly docPtr: number,\n    public readonly pageIdx: number,\n    public readonly pagePtr: number,\n    private readonly onFinalDispose: () => void,\n  ) {}\n\n  /** Called by PageCache.acquire() */\n  bumpRefCount() {\n    if (this.disposed) throw new Error('Context already disposed');\n    this.refCount++;\n  }\n\n  /** Called by PageCache.acquire() */\n  clearExpiryTimer() {\n    if (this.expiryTimer) {\n      clearTimeout(this.expiryTimer);\n      this.expiryTimer = undefined;\n    }\n  }\n\n  /** Called by PageCache.release() internally */\n  release() {\n    if (this.disposed) return;\n    this.refCount--;\n    if (this.refCount === 0) {\n      // schedule the one-and-only timer for the page\n      this.expiryTimer = setTimeout(() => this.disposeImmediate(), PAGE_TTL);\n    }\n  }\n\n  /** Tear down _all_ sub-pointers & the page. */\n  disposeImmediate() {\n    if (this.disposed) return;\n    this.disposed = true;\n\n    // 2️⃣ close text-page if opened\n    if (this.textPagePtr !== undefined) {\n      this.pdf.FPDFText_ClosePage(this.textPagePtr);\n    }\n\n    // 3️⃣ close form-fill if opened\n    if (this.formHandle !== undefined) {\n      this.pdf.FORM_OnBeforeClosePage(this.pagePtr, this.formHandle);\n      this.pdf.PDFiumExt_ExitFormFillEnvironment(this.formHandle);\n    }\n    if (this.formInfoPtr !== undefined) {\n      this.pdf.PDFiumExt_CloseFormFillInfo(this.formInfoPtr);\n    }\n\n    // 4️⃣ finally close the page itself\n    this.pdf.FPDF_ClosePage(this.pagePtr);\n\n    // 5️⃣ remove from the cache\n    this.onFinalDispose();\n  }\n\n  // ── public helpers ──\n\n  /** Always safe: opens (once) and returns the text-page ptr. */\n  getTextPage(): number {\n    this.ensureAlive();\n    if (this.textPagePtr === undefined) {\n      this.textPagePtr = this.pdf.FPDFText_LoadPage(this.pagePtr);\n    }\n    return this.textPagePtr;\n  }\n\n  /** Always safe: opens (once) and returns the form-fill handle. */\n  getFormHandle(): number {\n    this.ensureAlive();\n    if (this.formHandle === undefined) {\n      this.formInfoPtr = this.pdf.PDFiumExt_OpenFormFillInfo();\n      this.formHandle = this.pdf.PDFiumExt_InitFormFillEnvironment(this.docPtr, this.formInfoPtr);\n      this.pdf.FORM_OnAfterLoadPage(this.pagePtr, this.formHandle);\n    }\n    return this.formHandle;\n  }\n\n  /**\n   * Safely execute `fn` with an annotation pointer.\n   * Pointer is ALWAYS closed afterwards.\n   */\n  withAnnotation<T>(annotIdx: number, fn: (annotPtr: number) => T): T {\n    this.ensureAlive();\n    const annotPtr = this.pdf.FPDFPage_GetAnnot(this.pagePtr, annotIdx);\n    try {\n      return fn(annotPtr);\n    } finally {\n      this.pdf.FPDFPage_CloseAnnot(annotPtr);\n    }\n  }\n\n  private ensureAlive() {\n    if (this.disposed) throw new Error('PageContext already disposed');\n  }\n}\n","import {\n  PdfActionObject,\n  PdfAnnotationObject,\n  PdfTextRectObject,\n  PdfAnnotationSubtype,\n  PdfLinkAnnoObject,\n  PdfWidgetAnnoObject,\n  PdfLinkTarget,\n  PdfZoomMode,\n  Logger,\n  NoopLogger,\n  SearchResult,\n  SearchTarget,\n  MatchFlag,\n  PdfDestinationObject,\n  PdfBookmarkObject,\n  PdfDocumentObject,\n  PdfEngine,\n  PdfPageObject,\n  PdfActionType,\n  Rotation,\n  PDF_FORM_FIELD_FLAG,\n  PDF_FORM_FIELD_TYPE,\n  PdfWidgetAnnoOption,\n  PdfFileAttachmentAnnoObject,\n  Rect,\n  PdfAttachmentObject,\n  PdfUnsupportedAnnoObject,\n  PdfTextAnnoObject,\n  PdfSignatureObject,\n  PdfRenderOptions,\n  PdfInkAnnoObject,\n  PdfInkListObject,\n  Position,\n  PdfStampAnnoObject,\n  PdfCircleAnnoObject,\n  PdfSquareAnnoObject,\n  PdfFreeTextAnnoObject,\n  PdfCaretAnnoObject,\n  PdfSquigglyAnnoObject,\n  PdfStrikeOutAnnoObject,\n  PdfUnderlineAnnoObject,\n  transformSize,\n  PdfFile,\n  PdfAnnotationTransformation,\n  PdfSegmentObject,\n  AppearanceMode,\n  PdfImageObject,\n  PdfPageObjectType,\n  PdfPathObject,\n  PdfFormObject,\n  PdfPolygonAnnoObject,\n  PdfPolylineAnnoObject,\n  PdfLineAnnoObject,\n  PdfHighlightAnnoObject,\n  PdfStampAnnoObjectContents,\n  PdfWidgetAnnoField,\n  PdfTransformMatrix,\n  FormFieldValue,\n  PdfErrorCode,\n  PdfTaskHelper,\n  PdfPageFlattenFlag,\n  PdfPageFlattenResult,\n  PdfTask,\n  PdfFileLoader,\n  transformRect,\n  SearchAllPagesResult,\n  PdfUrlOptions,\n  PdfFileUrl,\n  Task,\n  PdfErrorReason,\n  TextContext,\n  PdfGlyphObject,\n  PdfPageGeometry,\n  PdfRun,\n  toIntRect,\n  toIntSize,\n  Quad,\n  PdfAlphaColor,\n  PdfAnnotationState,\n  PdfAnnotationStateModel,\n  quadToRect,\n  PdfImage,\n  ImageConversionTypes,\n  PdfAnnotationObjectBase,\n  PageTextSlice,\n  stripPdfUnwantedMarkers,\n  webAlphaColorToPdfAlphaColor,\n  pdfAlphaColorToWebAlphaColor,\n  rectToQuad,\n  WebAlphaColor,\n  dateToPdfDate,\n  pdfDateToDate,\n  PdfAnnotationColorType,\n  PdfAnnotationBorderStyle,\n  flagsToNames,\n  PdfAnnotationFlagName,\n  makeMatrix,\n} from '@embedpdf/models';\nimport { readArrayBuffer, readString } from './helper';\nimport { WrappedPdfiumModule } from '@embedpdf/pdfium';\nimport { DocumentContext, PageContext, PdfCache } from './cache';\n\n/**\n * Format of bitmap\n */\nexport enum BitmapFormat {\n  Bitmap_Gray = 1,\n  Bitmap_BGR = 2,\n  Bitmap_BGRx = 3,\n  Bitmap_BGRA = 4,\n}\n\n/**\n * Pdf rendering flag\n */\nexport enum RenderFlag {\n  ANNOT = 0x01, // Set if annotations are to be rendered.\n  LCD_TEXT = 0x02, // Set if using text rendering optimized for LCD display.\n  NO_NATIVETEXT = 0x04, // Don't use the native text output available on some platforms\n  GRAYSCALE = 0x08, // Grayscale output.\n  DEBUG_INFO = 0x80, // Set if you want to get some debug info. Please discuss with Foxit first if you need to collect debug info.\n  NO_CATCH = 0x100, // Set if you don't want to catch exception.\n  RENDER_LIMITEDIMAGECACHE = 0x200, // Limit image cache size.\n  RENDER_FORCEHALFTONE = 0x400, // Always use halftone for image stretching.\n  PRINTING = 0x800, // Render for printing.\n  REVERSE_BYTE_ORDER = 0x10, // Set whether render in a reverse Byte order, this flag only.\n}\n\nconst LOG_SOURCE = 'PDFiumEngine';\nconst LOG_CATEGORY = 'Engine';\n\n/**\n * Context used for searching\n */\nexport interface SearchContext {\n  /**\n   * search target\n   */\n  target: SearchTarget;\n  /**\n   * current page index\n   */\n  currPageIndex: number;\n  /**\n   * index of text in the current pdf page,  -1 means reach the end\n   */\n  startIndex: number;\n}\n\n/**\n * Error code of pdfium library\n */\nexport enum PdfiumErrorCode {\n  Success = 0,\n  Unknown = 1,\n  File = 2,\n  Format = 3,\n  Password = 4,\n  Security = 5,\n  Page = 6,\n  XFALoad = 7,\n  XFALayout = 8,\n}\n\n/**\n * Function type for converting ImageData to Blob\n * In browser: uses OffscreenCanvas\n * In Node.js: can use Sharp or other image processing libraries\n */\nexport type ImageDataConverter<T = Blob> = (\n  imageData: PdfImage,\n  imageType?: ImageConversionTypes,\n) => Promise<T>;\n\nexport const browserImageDataToBlobConverter: ImageDataConverter<Blob> = (\n  pdfImageData: PdfImage,\n  imageType: ImageConversionTypes = 'image/webp',\n): Promise<Blob> => {\n  // Check if we're in a browser environment\n  if (typeof OffscreenCanvas === 'undefined') {\n    throw new Error(\n      'OffscreenCanvas is not available in this environment. ' +\n        'This converter is intended for browser use only. ' +\n        'Please use createNodeImageDataToBlobConverter() or createNodeCanvasImageDataToBlobConverter() for Node.js.',\n    );\n  }\n\n  const imageData = new ImageData(pdfImageData.data, pdfImageData.width, pdfImageData.height);\n  const off = new OffscreenCanvas(imageData.width, imageData.height);\n  off.getContext('2d')!.putImageData(imageData, 0, 0);\n  return off.convertToBlob({ type: imageType });\n};\n\n/**\n * Pdf engine that based on pdfium wasm\n */\nexport class PdfiumEngine<T = Blob> implements PdfEngine<T> {\n  /**\n   * pdf documents that opened\n   */\n  private readonly cache: PdfCache;\n\n  /**\n   * Create an instance of PdfiumEngine\n   * @param wasmModule - pdfium wasm module\n   * @param logger - logger instance\n   * @param imageDataToBlobConverter - function to convert ImageData to Blob\n   */\n  constructor(\n    private pdfiumModule: WrappedPdfiumModule,\n    private logger: Logger = new NoopLogger(),\n    private imageDataConverter: ImageDataConverter<T> = browserImageDataToBlobConverter as ImageDataConverter<T>,\n  ) {\n    this.cache = new PdfCache(this.pdfiumModule);\n  }\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.initialize}\n   *\n   * @public\n   */\n  initialize() {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'initialize');\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Initialize`, 'Begin', 'General');\n    this.pdfiumModule.PDFiumExt_Init();\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Initialize`, 'End', 'General');\n    return PdfTaskHelper.resolve(true);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.destroy}\n   *\n   * @public\n   */\n  destroy() {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'destroy');\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Destroy`, 'Begin', 'General');\n    this.pdfiumModule.FPDF_DestroyLibrary();\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Destroy`, 'End', 'General');\n    return PdfTaskHelper.resolve(true);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.openDocumentUrl}\n   *\n   * @public\n   */\n  public openDocumentUrl(file: PdfFileUrl, options?: PdfUrlOptions) {\n    const mode = options?.mode ?? 'auto';\n    const password = options?.password ?? '';\n\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'openDocumentUrl called', file.url, mode);\n\n    // We'll create a task to wrap asynchronous steps\n    const task = PdfTaskHelper.create<PdfDocumentObject>();\n\n    // Start an async procedure\n    (async () => {\n      try {\n        // Decide on approach\n        if (mode === 'full-fetch') {\n          const fetchFullTask = await this.fetchFullAndOpen(file, password);\n          fetchFullTask.wait(\n            (doc) => task.resolve(doc),\n            (err) => task.reject(err.reason),\n          );\n        } else if (mode === 'range-request') {\n          const openDocumentWithRangeRequestTask = await this.openDocumentWithRangeRequest(\n            file,\n            password,\n          );\n          openDocumentWithRangeRequestTask.wait(\n            (doc) => task.resolve(doc),\n            (err) => task.reject(err.reason),\n          );\n        } else {\n          // mode: 'auto'\n          const { supportsRanges, fileLength, content } = await this.checkRangeSupport(file.url);\n          if (supportsRanges) {\n            const openDocumentWithRangeRequestTask = await this.openDocumentWithRangeRequest(\n              file,\n              password,\n              fileLength,\n            );\n            openDocumentWithRangeRequestTask.wait(\n              (doc) => task.resolve(doc),\n              (err) => task.reject(err.reason),\n            );\n          } else if (content) {\n            // If we already have the content from the range check, use it\n            const pdfFile: PdfFile = { id: file.id, content };\n            this.openDocumentFromBuffer(pdfFile, password).wait(\n              (doc) => task.resolve(doc),\n              (err) => task.reject(err.reason),\n            );\n          } else {\n            const fetchFullTask = await this.fetchFullAndOpen(file, password);\n            fetchFullTask.wait(\n              (doc) => task.resolve(doc),\n              (err) => task.reject(err.reason),\n            );\n          }\n        }\n      } catch (err) {\n        this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'openDocumentUrl error', err);\n        task.reject({\n          code: PdfErrorCode.Unknown,\n          message: String(err),\n        });\n      }\n    })();\n\n    return task;\n  }\n\n  /**\n   * Check if the server supports range requests:\n   * Sends a HEAD request and sees if 'Accept-Ranges: bytes'.\n   */\n  private async checkRangeSupport(\n    url: string,\n  ): Promise<{ supportsRanges: boolean; fileLength: number; content: ArrayBuffer | null }> {\n    try {\n      this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'checkRangeSupport', url);\n\n      // First try HEAD request\n      const headResponse = await fetch(url, { method: 'HEAD' });\n      const fileLength = headResponse.headers.get('Content-Length');\n      const acceptRanges = headResponse.headers.get('Accept-Ranges');\n\n      // If server explicitly supports ranges, we're done\n      if (acceptRanges === 'bytes') {\n        return {\n          supportsRanges: true,\n          fileLength: parseInt(fileLength ?? '0'),\n          content: null,\n        };\n      }\n\n      // Test actual range request support\n      const testResponse = await fetch(url, {\n        headers: { Range: 'bytes=0-1' },\n      });\n\n      // If we get 200 instead of 206, server doesn't support ranges\n      // Return the full content since we'll need it anyway\n      if (testResponse.status === 200) {\n        const content = await testResponse.arrayBuffer();\n        return {\n          supportsRanges: false,\n          fileLength: parseInt(fileLength ?? '0'),\n          content: content,\n        };\n      }\n\n      // 206 Partial Content indicates range support\n      return {\n        supportsRanges: testResponse.status === 206,\n        fileLength: parseInt(fileLength ?? '0'),\n        content: null,\n      };\n    } catch (e) {\n      this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'checkRangeSupport failed', e);\n      throw new Error('Failed to check range support: ' + e);\n    }\n  }\n\n  /**\n   * Fully fetch the file (using fetch) into an ArrayBuffer,\n   * then call openDocumentFromBuffer.\n   */\n  private async fetchFullAndOpen(file: PdfFileUrl, password: string) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'fetchFullAndOpen', file.url);\n\n    // 1. fetch entire PDF as array buffer\n    const response = await fetch(file.url);\n    if (!response.ok) {\n      throw new Error(`Could not fetch PDF: ${response.statusText}`);\n    }\n    const arrayBuf = await response.arrayBuffer();\n\n    // 2. create a PdfFile object\n    const pdfFile: PdfFile = {\n      id: file.id,\n      content: arrayBuf,\n    };\n\n    // 3. call openDocumentFromBuffer (the method you already have)\n    //    that returns a PdfTask, but let's wrap it in a Promise\n    return this.openDocumentFromBuffer(pdfFile, password);\n  }\n\n  /**\n   * Use your synchronous partial-loading approach:\n   * - In your snippet, it's done via `openDocumentFromLoader`.\n   * - We'll do a synchronous XHR read callback that pulls\n   *   the desired byte ranges.\n   */\n  private async openDocumentWithRangeRequest(\n    file: PdfFileUrl,\n    password: string,\n    knownFileLength?: number,\n  ) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'openDocumentWithRangeRequest', file.url);\n\n    // We first do a HEAD or a partial fetch to get the fileLength:\n    const fileLength = knownFileLength ?? (await this.retrieveFileLength(file.url)).fileLength;\n\n    // 2. define the callback function used by openDocumentFromLoader\n    const callback = (offset: number, length: number) => {\n      // Perform synchronous XHR:\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', file.url, false); // note: block in the Worker\n      xhr.overrideMimeType('text/plain; charset=x-user-defined');\n      xhr.setRequestHeader('Range', `bytes=${offset}-${offset + length - 1}`);\n      xhr.send(null);\n\n      if (xhr.status === 206 || xhr.status === 200) {\n        return this.convertResponseToUint8Array(xhr.responseText);\n      }\n      throw new Error(`Range request failed with status ${xhr.status}`);\n    };\n\n    // 3. call `openDocumentFromLoader`\n    return this.openDocumentFromLoader(\n      {\n        id: file.id,\n        fileLength,\n        callback,\n      },\n      password,\n    );\n  }\n\n  /**\n   * Helper to do a HEAD request or partial GET to find file length.\n   */\n  private async retrieveFileLength(url: string): Promise<{ fileLength: number }> {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'retrieveFileLength', url);\n\n    // We'll do a HEAD request to get Content-Length\n    const resp = await fetch(url, { method: 'HEAD' });\n    if (!resp.ok) {\n      throw new Error(`Failed HEAD request for file length: ${resp.statusText}`);\n    }\n    const lenStr = resp.headers.get('Content-Length') || '0';\n    const fileLength = parseInt(lenStr, 10) || 0;\n    if (!fileLength) {\n      throw new Error(`Content-Length not found or zero.`);\n    }\n    return { fileLength };\n  }\n\n  /**\n   * Convert response text (x-user-defined) to a Uint8Array\n   * for partial data.\n   */\n  private convertResponseToUint8Array(text: string): Uint8Array {\n    const array = new Uint8Array(text.length);\n    for (let i = 0; i < text.length; i++) {\n      // & 0xff ensures we only get the lower 8 bits\n      array[i] = text.charCodeAt(i) & 0xff;\n    }\n    return array;\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.openDocument}\n   *\n   * @public\n   */\n  openDocumentFromBuffer(file: PdfFile, password: string = '') {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'openDocumentFromBuffer', file, password);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromBuffer`, 'Begin', file.id);\n    const array = new Uint8Array(file.content);\n    const length = array.length;\n    const filePtr = this.malloc(length);\n    this.pdfiumModule.pdfium.HEAPU8.set(array, filePtr);\n\n    const docPtr = this.pdfiumModule.FPDF_LoadMemDocument(filePtr, length, password);\n\n    if (!docPtr) {\n      const lastError = this.pdfiumModule.FPDF_GetLastError();\n      this.logger.error(LOG_SOURCE, LOG_CATEGORY, `FPDF_LoadMemDocument failed with ${lastError}`);\n      this.free(filePtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromBuffer`, 'End', file.id);\n\n      return PdfTaskHelper.reject<PdfDocumentObject>({\n        code: lastError,\n        message: `FPDF_LoadMemDocument failed`,\n      });\n    }\n\n    const pageCount = this.pdfiumModule.FPDF_GetPageCount(docPtr);\n\n    const pages: PdfPageObject[] = [];\n    const sizePtr = this.malloc(8);\n    for (let index = 0; index < pageCount; index++) {\n      const result = this.pdfiumModule.FPDF_GetPageSizeByIndexF(docPtr, index, sizePtr);\n      if (!result) {\n        const lastError = this.pdfiumModule.FPDF_GetLastError();\n        this.logger.error(\n          LOG_SOURCE,\n          LOG_CATEGORY,\n          `FPDF_GetPageSizeByIndexF failed with ${lastError}`,\n        );\n        this.free(sizePtr);\n        this.pdfiumModule.FPDF_CloseDocument(docPtr);\n        this.free(filePtr);\n        this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromBuffer`, 'End', file.id);\n        return PdfTaskHelper.reject<PdfDocumentObject>({\n          code: lastError,\n          message: `FPDF_GetPageSizeByIndexF failed`,\n        });\n      }\n\n      const page = {\n        index,\n        size: {\n          width: this.pdfiumModule.pdfium.getValue(sizePtr, 'float'),\n          height: this.pdfiumModule.pdfium.getValue(sizePtr + 4, 'float'),\n        },\n      };\n\n      pages.push(page);\n    }\n    this.free(sizePtr);\n\n    const pdfDoc = {\n      id: file.id,\n      pageCount,\n      pages,\n    };\n\n    this.cache.setDocument(file.id, filePtr, docPtr);\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromBuffer`, 'End', file.id);\n\n    return PdfTaskHelper.resolve(pdfDoc);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.openDocumentFromLoader}\n   *\n   * @public\n   */\n  openDocumentFromLoader(fileLoader: PdfFileLoader, password: string = '') {\n    const { fileLength, callback, ...file } = fileLoader;\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'openDocumentFromLoader', file, password);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromLoader`, 'Begin', file.id);\n\n    const readBlock = (\n      _pThis: number, // Pointer to the FPDF_FILEACCESS structure\n      offset: number, // Pointer to a buffer to receive the data\n      pBuf: number, // Offset position from the beginning of the file\n      length: number, // Number of bytes to read\n    ): number => {\n      try {\n        this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'readBlock', offset, length, pBuf);\n\n        if (offset < 0 || offset >= fileLength) {\n          this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'Offset out of bounds:', offset);\n          return 0;\n        }\n\n        // Get data chunk using the callback\n        const data = callback(offset, length);\n\n        // Copy the data to PDFium's buffer\n        const dest = new Uint8Array(this.pdfiumModule.pdfium.HEAPU8.buffer, pBuf, data.length);\n        dest.set(data);\n\n        return data.length;\n      } catch (error) {\n        this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'ReadBlock error:', error);\n        return 0;\n      }\n    };\n\n    const callbackPtr = this.pdfiumModule.pdfium.addFunction(readBlock, 'iiiii');\n\n    // Create FPDF_FILEACCESS struct\n    const structSize = 12;\n    const fileAccessPtr = this.malloc(structSize);\n\n    // Set up struct fields\n    this.pdfiumModule.pdfium.setValue(fileAccessPtr, fileLength, 'i32');\n    this.pdfiumModule.pdfium.setValue(fileAccessPtr + 4, callbackPtr, 'i32');\n    this.pdfiumModule.pdfium.setValue(fileAccessPtr + 8, 0, 'i32');\n\n    // Load document\n    const docPtr = this.pdfiumModule.FPDF_LoadCustomDocument(fileAccessPtr, password);\n\n    if (!docPtr) {\n      const lastError = this.pdfiumModule.FPDF_GetLastError();\n      this.logger.error(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `FPDF_LoadCustomDocument failed with ${lastError}`,\n      );\n      this.free(fileAccessPtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromLoader`, 'End', file.id);\n\n      return PdfTaskHelper.reject<PdfDocumentObject>({\n        code: lastError,\n        message: `FPDF_LoadCustomDocument failed`,\n      });\n    }\n\n    const pageCount = this.pdfiumModule.FPDF_GetPageCount(docPtr);\n\n    const pages: PdfPageObject[] = [];\n    const sizePtr = this.malloc(8);\n    for (let index = 0; index < pageCount; index++) {\n      const result = this.pdfiumModule.FPDF_GetPageSizeByIndexF(docPtr, index, sizePtr);\n      if (!result) {\n        const lastError = this.pdfiumModule.FPDF_GetLastError();\n        this.logger.error(\n          LOG_SOURCE,\n          LOG_CATEGORY,\n          `FPDF_GetPageSizeByIndexF failed with ${lastError}`,\n        );\n        this.free(sizePtr);\n        this.pdfiumModule.FPDF_CloseDocument(docPtr);\n        this.free(fileAccessPtr);\n        this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromLoader`, 'End', file.id);\n        return PdfTaskHelper.reject<PdfDocumentObject>({\n          code: lastError,\n          message: `FPDF_GetPageSizeByIndexF failed`,\n        });\n      }\n\n      const page = {\n        index,\n        size: {\n          width: this.pdfiumModule.pdfium.getValue(sizePtr, 'float'),\n          height: this.pdfiumModule.pdfium.getValue(sizePtr + 4, 'float'),\n        },\n      };\n\n      pages.push(page);\n    }\n    this.free(sizePtr);\n\n    const pdfDoc = {\n      id: file.id,\n      pageCount,\n      pages,\n    };\n    this.cache.setDocument(file.id, fileAccessPtr, docPtr);\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `OpenDocumentFromLoader`, 'End', file.id);\n\n    return PdfTaskHelper.resolve(pdfDoc);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getMetadata}\n   *\n   * @public\n   */\n  getMetadata(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getMetadata', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetMetadata`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetMetadata`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const metadata = {\n      title: this.readMetaText(ctx.docPtr, 'Title'),\n      author: this.readMetaText(ctx.docPtr, 'Author'),\n      subject: this.readMetaText(ctx.docPtr, 'Subject'),\n      keywords: this.readMetaText(ctx.docPtr, 'Keywords'),\n      producer: this.readMetaText(ctx.docPtr, 'Producer'),\n      creator: this.readMetaText(ctx.docPtr, 'Creator'),\n      creationDate: this.readMetaText(ctx.docPtr, 'CreationDate'),\n      modificationDate: this.readMetaText(ctx.docPtr, 'ModDate'),\n    };\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetMetadata`, 'End', doc.id);\n\n    return PdfTaskHelper.resolve(metadata);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getDocPermissions}\n   *\n   * @public\n   */\n  getDocPermissions(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getDocPermissions', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `getDocPermissions`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `getDocPermissions`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const permissions = this.pdfiumModule.FPDF_GetDocPermissions(ctx.docPtr);\n\n    return PdfTaskHelper.resolve(permissions);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getDocUserPermissions}\n   *\n   * @public\n   */\n  getDocUserPermissions(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getDocUserPermissions', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `getDocUserPermissions`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `getDocUserPermissions`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const permissions = this.pdfiumModule.FPDF_GetDocUserPermissions(ctx.docPtr);\n\n    return PdfTaskHelper.resolve(permissions);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getSignatures}\n   *\n   * @public\n   */\n  getSignatures(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getSignatures', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetSignatures`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetSignatures`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const signatures: PdfSignatureObject[] = [];\n\n    const count = this.pdfiumModule.FPDF_GetSignatureCount(ctx.docPtr);\n    for (let i = 0; i < count; i++) {\n      const signatureObjPtr = this.pdfiumModule.FPDF_GetSignatureObject(ctx.docPtr, i);\n\n      const contents = readArrayBuffer(this.pdfiumModule.pdfium, (buffer, bufferSize) => {\n        return this.pdfiumModule.FPDFSignatureObj_GetContents(signatureObjPtr, buffer, bufferSize);\n      });\n\n      const byteRange = readArrayBuffer(this.pdfiumModule.pdfium, (buffer, bufferSize) => {\n        return (\n          this.pdfiumModule.FPDFSignatureObj_GetByteRange(signatureObjPtr, buffer, bufferSize) * 4\n        );\n      });\n\n      const subFilter = readArrayBuffer(this.pdfiumModule.pdfium, (buffer, bufferSize) => {\n        return this.pdfiumModule.FPDFSignatureObj_GetSubFilter(signatureObjPtr, buffer, bufferSize);\n      });\n\n      const reason = readString(\n        this.pdfiumModule.pdfium,\n        (buffer, bufferLength) => {\n          return this.pdfiumModule.FPDFSignatureObj_GetReason(\n            signatureObjPtr,\n            buffer,\n            bufferLength,\n          );\n        },\n        this.pdfiumModule.pdfium.UTF16ToString,\n      );\n\n      const time = readString(\n        this.pdfiumModule.pdfium,\n        (buffer, bufferLength) => {\n          return this.pdfiumModule.FPDFSignatureObj_GetTime(signatureObjPtr, buffer, bufferLength);\n        },\n        this.pdfiumModule.pdfium.UTF8ToString,\n      );\n\n      const docMDP = this.pdfiumModule.FPDFSignatureObj_GetDocMDPPermission(signatureObjPtr);\n\n      signatures.push({\n        contents,\n        byteRange,\n        subFilter,\n        reason,\n        time,\n        docMDP,\n      });\n    }\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetSignatures`, 'End', doc.id);\n\n    return PdfTaskHelper.resolve(signatures);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getBookmarks}\n   *\n   * @public\n   */\n  getBookmarks(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getBookmarks', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetBookmarks`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `getBookmarks`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const bookmarks = this.readPdfBookmarks(ctx.docPtr, 0);\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetBookmarks`, 'End', doc.id);\n\n    return PdfTaskHelper.resolve({\n      bookmarks,\n    });\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.renderPage}\n   *\n   * @public\n   */\n  renderPage(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number = 1,\n    rotation: Rotation = Rotation.Degree0,\n    dpr: number = 1,\n    options: PdfRenderOptions = { withAnnotations: false },\n    imageType: ImageConversionTypes = 'image/webp',\n  ): PdfTask<T> {\n    const task = new Task<T, PdfErrorReason>();\n\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'renderPage',\n      doc,\n      page,\n      scaleFactor,\n      rotation,\n      dpr,\n      options,\n    );\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `RenderPage`, 'Begin', `${doc.id}-${page.index}`);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `RenderPage`, 'End', `${doc.id}-${page.index}`);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const imageData = this.renderPageRectToImageData(\n      ctx,\n      page,\n      {\n        origin: { x: 0, y: 0 },\n        size: page.size,\n      },\n      scaleFactor,\n      rotation,\n      dpr,\n      options,\n    );\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `RenderPage`, 'End', `${doc.id}-${page.index}`);\n\n    this.imageDataConverter(imageData, imageType).then((blob) => task.resolve(blob));\n\n    return task;\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.renderPageRect}\n   *\n   * @public\n   */\n  renderPageRect(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n    rect: Rect,\n    options: PdfRenderOptions,\n    imageType: ImageConversionTypes = 'image/webp',\n  ): PdfTask<T> {\n    const task = new Task<T, PdfErrorReason>();\n\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'renderPageRect',\n      doc,\n      page,\n      scaleFactor,\n      rotation,\n      dpr,\n      rect,\n      options,\n    );\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `RenderPageRect`,\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `RenderPageRect`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const imageData = this.renderPageRectToImageData(\n      ctx,\n      page,\n      rect,\n      scaleFactor,\n      rotation,\n      dpr,\n      options,\n    );\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `RenderPageRect`, 'End', `${doc.id}-${page.index}`);\n\n    this.imageDataConverter(imageData, imageType).then((blob) => task.resolve(blob));\n\n    return task;\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getAllAnnotations}\n   *\n   * @public\n   */\n  getAllAnnotations(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getAllAnnotations', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetAllAnnotations`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetAllAnnotations`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const annotations = this.readAllAnnotations(doc, ctx);\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetAllAnnotations`, 'End', doc.id);\n\n    return PdfTaskHelper.resolve(annotations);\n  }\n\n  private readAllAnnotations(\n    doc: PdfDocumentObject,\n    ctx: DocumentContext,\n  ): Record<number, PdfAnnotationObject[]> {\n    const annotationsByPage: Record<number, PdfAnnotationObject[]> = {};\n\n    for (let i = 0; i < doc.pageCount; i++) {\n      const pageAnnotations = this.readPageAnnotations(ctx, doc.pages[i]);\n      annotationsByPage[i] = pageAnnotations;\n    }\n\n    return annotationsByPage;\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getPageAnnotations}\n   *\n   * @public\n   */\n  getPageAnnotations(doc: PdfDocumentObject, page: PdfPageObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getPageAnnotations', doc, page);\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `GetPageAnnotations`,\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `GetPageAnnotations`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const annotations = this.readPageAnnotations(ctx, page);\n\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `GetPageAnnotations`,\n      'End',\n      `${doc.id}-${page.index}`,\n    );\n\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `GetPageAnnotations`,\n      `${doc.id}-${page.index}`,\n      annotations,\n    );\n\n    return PdfTaskHelper.resolve(annotations);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.createPageAnnotation}\n   *\n   * @public\n   */\n  createPageAnnotation(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n  ): PdfTask<number> {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'createPageAnnotation', doc, page, annotation);\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `CreatePageAnnotation`,\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `CreatePageAnnotation`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const pageCtx = ctx.acquirePage(page.index);\n    const annotationPtr = this.pdfiumModule.FPDFPage_CreateAnnot(pageCtx.pagePtr, annotation.type);\n    if (!annotationPtr) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `CreatePageAnnotation`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      pageCtx.release();\n\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantCreateAnnot,\n        message: 'can not create annotation with specified type',\n      });\n    }\n\n    if (!this.setPageAnnoRect(page, pageCtx.pagePtr, annotationPtr, annotation.rect)) {\n      this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n      pageCtx.release();\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `CreatePageAnnotation`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantSetAnnotRect,\n        message: 'can not set the rect of the annotation',\n      });\n    }\n\n    let isSucceed = false;\n    switch (annotation.type) {\n      case PdfAnnotationSubtype.INK:\n        isSucceed = this.addInkStroke(page, pageCtx.pagePtr, annotationPtr, annotation);\n        break;\n      case PdfAnnotationSubtype.STAMP:\n        isSucceed = this.addStampContent(\n          ctx.docPtr,\n          page,\n          pageCtx.pagePtr,\n          annotationPtr,\n          annotation.rect,\n          annotation.contents,\n        );\n        break;\n      case PdfAnnotationSubtype.UNDERLINE:\n      case PdfAnnotationSubtype.STRIKEOUT:\n      case PdfAnnotationSubtype.SQUIGGLY:\n      case PdfAnnotationSubtype.HIGHLIGHT:\n        isSucceed = this.addTextMarkupContent(page, pageCtx.pagePtr, annotationPtr, annotation);\n        break;\n    }\n\n    if (!isSucceed) {\n      this.pdfiumModule.FPDFPage_RemoveAnnot(pageCtx.pagePtr, annotationPtr);\n      pageCtx.release();\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `CreatePageAnnotation`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantSetAnnotContent,\n        message: 'can not add content of the annotation',\n      });\n    }\n\n    if (annotation.blendMode !== undefined) {\n      this.pdfiumModule.EPDFAnnot_GenerateAppearanceWithBlend(annotationPtr, annotation.blendMode);\n    } else {\n      this.pdfiumModule.EPDFAnnot_GenerateAppearance(annotationPtr);\n    }\n\n    this.pdfiumModule.FPDFPage_GenerateContent(pageCtx.pagePtr);\n\n    const annotId = this.pdfiumModule.FPDFPage_GetAnnotIndex(pageCtx.pagePtr, annotationPtr);\n\n    this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n    pageCtx.release();\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `CreatePageAnnotation`,\n      'End',\n      `${doc.id}-${page.index}`,\n    );\n\n    return annotId >= 0\n      ? PdfTaskHelper.resolve<number>(annotId)\n      : PdfTaskHelper.reject<number>({\n          code: PdfErrorCode.CantCreateAnnot,\n          message: 'annotation created but index could not be determined',\n        });\n  }\n\n  /**\n   * Update an existing page annotation in-place\n   *\n   *  • Locates the annot by page-local index (`annotation.id`)\n   *  • Re-writes its /Rect and type-specific payload\n   *  • Calls FPDFPage_GenerateContent so the new appearance is rendered\n   *\n   * @returns PdfTask<boolean>  –  true on success\n   */\n  updatePageAnnotation(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n  ): PdfTask<boolean> {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'updatePageAnnotation', doc, page, annotation);\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'UpdatePageAnnotation',\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        'UpdatePageAnnotation',\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const pageCtx = ctx.acquirePage(page.index);\n    const annotPtr = this.pdfiumModule.FPDFPage_GetAnnot(pageCtx.pagePtr, annotation.id);\n    if (!annotPtr) {\n      pageCtx.release();\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        'UpdatePageAnnotation',\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({ code: PdfErrorCode.NotFound, message: 'annotation not found' });\n    }\n\n    /* 1 ── (re)set bounding-box ────────────────────────────────────────────── */\n    if (!this.setPageAnnoRect(page, pageCtx.pagePtr, annotPtr, annotation.rect)) {\n      this.pdfiumModule.FPDFPage_CloseAnnot(annotPtr);\n      pageCtx.release();\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        'UpdatePageAnnotation',\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantSetAnnotRect,\n        message: 'failed to move annotation',\n      });\n    }\n\n    /* 2 ── wipe previous payload and rebuild fresh one ─────────────────────── */\n    let ok = false;\n    switch (annotation.type) {\n      /* ── Ink ─────────────────────────────────────────────────────────────── */\n      case PdfAnnotationSubtype.INK: {\n        /* clear every existing stroke first */\n        if (!this.pdfiumModule.FPDFAnnot_RemoveInkList(annotPtr)) break;\n        ok = this.addInkStroke(page, pageCtx.pagePtr, annotPtr, annotation);\n        break;\n      }\n\n      /* ── Stamp ───────────────────────────────────────────────────────────── */\n      case PdfAnnotationSubtype.STAMP: {\n        /* drop every page-object inside the annot */\n        for (let i = this.pdfiumModule.FPDFAnnot_GetObjectCount(annotPtr) - 1; i >= 0; i--) {\n          this.pdfiumModule.FPDFAnnot_RemoveObject(annotPtr, i);\n        }\n        ok = this.addStampContent(\n          ctx.docPtr,\n          page,\n          pageCtx.pagePtr,\n          annotPtr,\n          annotation.rect,\n          annotation.contents,\n        );\n        break;\n      }\n\n      /* ── Text-markup family ──────────────────────────────────────────────── */\n      case PdfAnnotationSubtype.HIGHLIGHT:\n      case PdfAnnotationSubtype.UNDERLINE:\n      case PdfAnnotationSubtype.STRIKEOUT:\n      case PdfAnnotationSubtype.SQUIGGLY: {\n        /* replace quad-points / colour / strings in one go */\n        ok = this.addTextMarkupContent(page, pageCtx.pagePtr, annotPtr, annotation);\n        break;\n      }\n\n      /* ── Unsupported edits – fall through to error ───────────────────────── */\n      default:\n        ok = false;\n    }\n\n    /* 3 ── regenerate appearance if payload was changed ───────────────────── */\n    if (ok) {\n      if (annotation.blendMode !== undefined) {\n        this.pdfiumModule.EPDFAnnot_GenerateAppearanceWithBlend(annotPtr, annotation.blendMode);\n      } else {\n        this.pdfiumModule.EPDFAnnot_GenerateAppearance(annotPtr);\n      }\n      this.pdfiumModule.FPDFPage_GenerateContent(pageCtx.pagePtr);\n    }\n\n    /* 4 ── tidy-up native handles ──────────────────────────────────────────── */\n    this.pdfiumModule.FPDFPage_CloseAnnot(annotPtr);\n    pageCtx.release();\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'UpdatePageAnnotation',\n      'End',\n      `${doc.id}-${page.index}`,\n    );\n\n    return ok\n      ? PdfTaskHelper.resolve<boolean>(true)\n      : PdfTaskHelper.reject<boolean>({\n          code: PdfErrorCode.CantSetAnnotContent,\n          message: 'failed to update annotation',\n        });\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.removePageAnnotation}\n   *\n   * @public\n   */\n  removePageAnnotation(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n  ) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'removePageAnnotation', doc, page, annotation);\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `RemovePageAnnotation`,\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `RemovePageAnnotation`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const pageCtx = ctx.acquirePage(page.index);\n    let result = false;\n    result = this.pdfiumModule.FPDFPage_RemoveAnnot(pageCtx.pagePtr, annotation.id);\n    if (!result) {\n      this.logger.error(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `FPDFPage_RemoveAnnot Failed`,\n        `${doc.id}-${page.index}`,\n      );\n    } else {\n      result = this.pdfiumModule.FPDFPage_GenerateContent(pageCtx.pagePtr);\n      if (!result) {\n        this.logger.error(\n          LOG_SOURCE,\n          LOG_CATEGORY,\n          `FPDFPage_GenerateContent Failed`,\n          `${doc.id}-${page.index}`,\n        );\n      }\n    }\n\n    pageCtx.release();\n\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `RemovePageAnnotation`,\n      'End',\n      `${doc.id}-${page.index}`,\n    );\n    return PdfTaskHelper.resolve(result);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getPageTextRects}\n   *\n   * @public\n   */\n  getPageTextRects(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n  ) {\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'getPageTextRects',\n      doc,\n      page,\n      scaleFactor,\n      rotation,\n    );\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `GetPageTextRects`,\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `GetPageTextRects`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const pageCtx = ctx.acquirePage(page.index);\n    const textPagePtr = this.pdfiumModule.FPDFText_LoadPage(pageCtx.pagePtr);\n\n    const textRects = this.readPageTextRects(page, pageCtx.docPtr, pageCtx.pagePtr, textPagePtr);\n\n    this.pdfiumModule.FPDFText_ClosePage(textPagePtr);\n    pageCtx.release();\n\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `GetPageTextRects`,\n      'End',\n      `${doc.id}-${page.index}`,\n    );\n    return PdfTaskHelper.resolve(textRects);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.renderThumbnail}\n   *\n   * @public\n   */\n  renderThumbnail(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n  ): PdfTask<T> {\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'renderThumbnail',\n      doc,\n      page,\n      scaleFactor,\n      rotation,\n      dpr,\n    );\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `RenderThumbnail`,\n      'Begin',\n      `${doc.id}-${page.index}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `RenderThumbnail`,\n        'End',\n        `${doc.id}-${page.index}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    scaleFactor = Math.max(scaleFactor, 0.5);\n    const result = this.renderPage(doc, page, scaleFactor, rotation, dpr, {\n      withAnnotations: true,\n    });\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `RenderThumbnail`, 'End', `${doc.id}-${page.index}`);\n\n    return result;\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getAttachments}\n   *\n   * @public\n   */\n  getAttachments(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getAttachments', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetAttachments`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetAttachments`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const attachments: PdfAttachmentObject[] = [];\n\n    const count = this.pdfiumModule.FPDFDoc_GetAttachmentCount(ctx.docPtr);\n    for (let i = 0; i < count; i++) {\n      const attachment = this.readPdfAttachment(ctx.docPtr, i);\n      attachments.push(attachment);\n    }\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `GetAttachments`, 'End', doc.id);\n    return PdfTaskHelper.resolve(attachments);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.readAttachmentContent}\n   *\n   * @public\n   */\n  readAttachmentContent(doc: PdfDocumentObject, attachment: PdfAttachmentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'readAttachmentContent', doc, attachment);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ReadAttachmentContent`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ReadAttachmentContent`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const attachmentPtr = this.pdfiumModule.FPDFDoc_GetAttachment(ctx.docPtr, attachment.index);\n    const sizePtr = this.malloc(8);\n    if (!this.pdfiumModule.FPDFAttachment_GetFile(attachmentPtr, 0, 0, sizePtr)) {\n      this.free(sizePtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ReadAttachmentContent`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantReadAttachmentSize,\n        message: 'can not read attachment size',\n      });\n    }\n    const size = this.pdfiumModule.pdfium.getValue(sizePtr, 'i64');\n\n    const contentPtr = this.malloc(size);\n    if (!this.pdfiumModule.FPDFAttachment_GetFile(attachmentPtr, contentPtr, size, sizePtr)) {\n      this.free(sizePtr);\n      this.free(contentPtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ReadAttachmentContent`, 'End', doc.id);\n\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantReadAttachmentContent,\n        message: 'can not read attachment content',\n      });\n    }\n\n    const buffer = new ArrayBuffer(size);\n    const view = new DataView(buffer);\n    for (let i = 0; i < size; i++) {\n      view.setInt8(i, this.pdfiumModule.pdfium.getValue(contentPtr + i, 'i8'));\n    }\n\n    this.free(sizePtr);\n    this.free(contentPtr);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ReadAttachmentContent`, 'End', doc.id);\n\n    return PdfTaskHelper.resolve(buffer);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.setFormFieldValue}\n   *\n   * @public\n   */\n  setFormFieldValue(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfWidgetAnnoObject,\n    value: FormFieldValue,\n  ) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'SetFormFieldValue', doc, annotation, value);\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `SetFormFieldValue`,\n      'Begin',\n      `${doc.id}-${annotation.id}`,\n    );\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'SetFormFieldValue', 'document is not opened');\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `SetFormFieldValue`,\n        'End',\n        `${doc.id}-${annotation.id}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const formFillInfoPtr = this.pdfiumModule.PDFiumExt_OpenFormFillInfo();\n    const formHandle = this.pdfiumModule.PDFiumExt_InitFormFillEnvironment(\n      ctx.docPtr,\n      formFillInfoPtr,\n    );\n\n    const pageCtx = ctx.acquirePage(page.index);\n\n    this.pdfiumModule.FORM_OnAfterLoadPage(pageCtx.pagePtr, formHandle);\n\n    const annotationPtr = this.pdfiumModule.FPDFPage_GetAnnot(pageCtx.pagePtr, annotation.id);\n\n    if (!this.pdfiumModule.FORM_SetFocusedAnnot(formHandle, annotationPtr)) {\n      this.logger.debug(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        'SetFormFieldValue',\n        'failed to set focused annotation',\n      );\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `SetFormFieldValue`,\n        'End',\n        `${doc.id}-${annotation.id}`,\n      );\n      this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n      this.pdfiumModule.FORM_OnBeforeClosePage(pageCtx.pagePtr, formHandle);\n      pageCtx.release();\n      this.pdfiumModule.PDFiumExt_ExitFormFillEnvironment(formHandle);\n      this.pdfiumModule.PDFiumExt_CloseFormFillInfo(formFillInfoPtr);\n\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantFocusAnnot,\n        message: 'failed to set focused annotation',\n      });\n    }\n\n    switch (value.kind) {\n      case 'text':\n        {\n          if (!this.pdfiumModule.FORM_SelectAllText(formHandle, pageCtx.pagePtr)) {\n            this.logger.debug(\n              LOG_SOURCE,\n              LOG_CATEGORY,\n              'SetFormFieldValue',\n              'failed to select all text',\n            );\n            this.logger.perf(\n              LOG_SOURCE,\n              LOG_CATEGORY,\n              `SetFormFieldValue`,\n              'End',\n              `${doc.id}-${annotation.id}`,\n            );\n            this.pdfiumModule.FORM_ForceToKillFocus(formHandle);\n            this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n            this.pdfiumModule.FORM_OnBeforeClosePage(pageCtx.pagePtr, formHandle);\n            pageCtx.release();\n            this.pdfiumModule.PDFiumExt_ExitFormFillEnvironment(formHandle);\n            this.pdfiumModule.PDFiumExt_CloseFormFillInfo(formFillInfoPtr);\n\n            return PdfTaskHelper.reject({\n              code: PdfErrorCode.CantSelectText,\n              message: 'failed to select all text',\n            });\n          }\n          const length = 2 * (value.text.length + 1);\n          const textPtr = this.malloc(length);\n          this.pdfiumModule.pdfium.stringToUTF16(value.text, textPtr, length);\n          this.pdfiumModule.FORM_ReplaceSelection(formHandle, pageCtx.pagePtr, textPtr);\n          this.free(textPtr);\n        }\n        break;\n      case 'selection':\n        {\n          if (\n            !this.pdfiumModule.FORM_SetIndexSelected(\n              formHandle,\n              pageCtx.pagePtr,\n              value.index,\n              value.isSelected,\n            )\n          ) {\n            this.logger.debug(\n              LOG_SOURCE,\n              LOG_CATEGORY,\n              'SetFormFieldValue',\n              'failed to set index selected',\n            );\n            this.logger.perf(\n              LOG_SOURCE,\n              LOG_CATEGORY,\n              `SetFormFieldValue`,\n              'End',\n              `${doc.id}-${annotation.id}`,\n            );\n            this.pdfiumModule.FORM_ForceToKillFocus(formHandle);\n            this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n            this.pdfiumModule.FORM_OnBeforeClosePage(pageCtx.pagePtr, formHandle);\n            pageCtx.release();\n            this.pdfiumModule.PDFiumExt_ExitFormFillEnvironment(formHandle);\n            this.pdfiumModule.PDFiumExt_CloseFormFillInfo(formFillInfoPtr);\n\n            return PdfTaskHelper.reject({\n              code: PdfErrorCode.CantSelectOption,\n              message: 'failed to set index selected',\n            });\n          }\n        }\n        break;\n      case 'checked':\n        {\n          const kReturn = 0x0d;\n          if (!this.pdfiumModule.FORM_OnChar(formHandle, pageCtx.pagePtr, kReturn, 0)) {\n            this.logger.debug(\n              LOG_SOURCE,\n              LOG_CATEGORY,\n              'SetFormFieldValue',\n              'failed to set field checked',\n            );\n            this.logger.perf(\n              LOG_SOURCE,\n              LOG_CATEGORY,\n              `SetFormFieldValue`,\n              'End',\n              `${doc.id}-${annotation.id}`,\n            );\n            this.pdfiumModule.FORM_ForceToKillFocus(formHandle);\n            this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n            this.pdfiumModule.FORM_OnBeforeClosePage(pageCtx.pagePtr, formHandle);\n            pageCtx.release();\n            this.pdfiumModule.PDFiumExt_ExitFormFillEnvironment(formHandle);\n            this.pdfiumModule.PDFiumExt_CloseFormFillInfo(formFillInfoPtr);\n\n            return PdfTaskHelper.reject({\n              code: PdfErrorCode.CantCheckField,\n              message: 'failed to set field checked',\n            });\n          }\n        }\n        break;\n    }\n\n    this.pdfiumModule.FORM_ForceToKillFocus(formHandle);\n\n    this.pdfiumModule.FPDFPage_CloseAnnot(annotationPtr);\n    this.pdfiumModule.FORM_OnBeforeClosePage(pageCtx.pagePtr, formHandle);\n    pageCtx.release();\n\n    this.pdfiumModule.PDFiumExt_ExitFormFillEnvironment(formHandle);\n    this.pdfiumModule.PDFiumExt_CloseFormFillInfo(formFillInfoPtr);\n\n    return PdfTaskHelper.resolve<boolean>(true);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.flattenPage}\n   *\n   * @public\n   */\n  flattenPage(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    flag: PdfPageFlattenFlag,\n  ): PdfTask<PdfPageFlattenResult> {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'flattenPage', doc, page, flag);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `flattenPage`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `flattenPage`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const pageCtx = ctx.acquirePage(page.index);\n    const result = this.pdfiumModule.FPDFPage_Flatten(pageCtx.pagePtr, flag);\n    pageCtx.release();\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `flattenPage`, 'End', doc.id);\n\n    return PdfTaskHelper.resolve(result);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.extractPages}\n   *\n   * @public\n   */\n  extractPages(doc: PdfDocumentObject, pageIndexes: number[]) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'extractPages', doc, pageIndexes);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractPages`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractPages`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const newDocPtr = this.pdfiumModule.FPDF_CreateNewDocument();\n    if (!newDocPtr) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractPages`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantCreateNewDoc,\n        message: 'can not create new document',\n      });\n    }\n\n    const pageIndexesPtr = this.malloc(pageIndexes.length * 4);\n    for (let i = 0; i < pageIndexes.length; i++) {\n      this.pdfiumModule.pdfium.setValue(pageIndexesPtr + i * 4, pageIndexes[i], 'i32');\n    }\n\n    if (\n      !this.pdfiumModule.FPDF_ImportPagesByIndex(\n        newDocPtr,\n        ctx.docPtr,\n        pageIndexesPtr,\n        pageIndexes.length,\n        0,\n      )\n    ) {\n      this.pdfiumModule.FPDF_CloseDocument(newDocPtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractPages`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantImportPages,\n        message: 'can not import pages to new document',\n      });\n    }\n\n    const buffer = this.saveDocument(newDocPtr);\n\n    this.pdfiumModule.FPDF_CloseDocument(newDocPtr);\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractPages`, 'End', doc.id);\n    return PdfTaskHelper.resolve(buffer);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.extractText}\n   *\n   * @public\n   */\n  extractText(doc: PdfDocumentObject, pageIndexes: number[]) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'extractText', doc, pageIndexes);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractText`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractText`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const strings: string[] = [];\n    for (let i = 0; i < pageIndexes.length; i++) {\n      const pageCtx = ctx.acquirePage(pageIndexes[i]);\n      const textPagePtr = this.pdfiumModule.FPDFText_LoadPage(pageCtx.pagePtr);\n      const charCount = this.pdfiumModule.FPDFText_CountChars(textPagePtr);\n      const bufferPtr = this.malloc((charCount + 1) * 2);\n      this.pdfiumModule.FPDFText_GetText(textPagePtr, 0, charCount, bufferPtr);\n      const text = this.pdfiumModule.pdfium.UTF16ToString(bufferPtr);\n      this.free(bufferPtr);\n      strings.push(text);\n      this.pdfiumModule.FPDFText_ClosePage(textPagePtr);\n      pageCtx.release();\n    }\n\n    const text = strings.join('\\n\\n');\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `ExtractText`, 'End', doc.id);\n    return PdfTaskHelper.resolve(text);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.getTextSlices}\n   *\n   * @public\n   */\n  getTextSlices(doc: PdfDocumentObject, slices: PageTextSlice[]): PdfTask<string[]> {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getTextSlices', doc, slices);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'GetTextSlices', 'Begin', doc.id);\n\n    /* ⚠︎ 1 — trivial case */\n    if (slices.length === 0) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'GetTextSlices', 'End', doc.id);\n      return PdfTaskHelper.resolve<string[]>([]);\n    }\n\n    /* ⚠︎ 2 — document must be open */\n    const ctx = this.cache.getContext(doc.id);\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'GetTextSlices', 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    try {\n      /* keep caller order */\n      const out = new Array<string>(slices.length);\n\n      /* group → open each page once */\n      const byPage = new Map<number, { slice: PageTextSlice; pos: number }[]>();\n      slices.forEach((s, i) => {\n        (byPage.get(s.pageIndex) ?? byPage.set(s.pageIndex, []).get(s.pageIndex))!.push({\n          slice: s,\n          pos: i,\n        });\n      });\n\n      for (const [pageIdx, list] of byPage) {\n        const pageCtx = ctx.acquirePage(pageIdx);\n        const textPagePtr = pageCtx.getTextPage();\n\n        for (const { slice, pos } of list) {\n          const bufPtr = this.malloc(2 * (slice.charCount + 1)); // UTF-16 + NIL\n          this.pdfiumModule.FPDFText_GetText(textPagePtr, slice.charIndex, slice.charCount, bufPtr);\n          out[pos] = stripPdfUnwantedMarkers(this.pdfiumModule.pdfium.UTF16ToString(bufPtr));\n          this.free(bufPtr);\n        }\n        pageCtx.release();\n      }\n\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'GetTextSlices', 'End', doc.id);\n      return PdfTaskHelper.resolve(out);\n    } catch (e) {\n      this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'getTextSlices error', e);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'GetTextSlices', 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.Unknown,\n        message: String(e),\n      });\n    }\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.merge}\n   *\n   * @public\n   */\n  merge(files: PdfFile[]) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'merge', files);\n    const fileIds = files.map((file) => file.id).join('.');\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Merge`, 'Begin', fileIds);\n\n    const newDocPtr = this.pdfiumModule.FPDF_CreateNewDocument();\n    if (!newDocPtr) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Merge`, 'End', fileIds);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantCreateNewDoc,\n        message: 'can not create new document',\n      });\n    }\n\n    const ptrs: { docPtr: number; filePtr: number }[] = [];\n    for (const file of files.reverse()) {\n      const array = new Uint8Array(file.content);\n      const length = array.length;\n      const filePtr = this.malloc(length);\n      this.pdfiumModule.pdfium.HEAPU8.set(array, filePtr);\n\n      const docPtr = this.pdfiumModule.FPDF_LoadMemDocument(filePtr, length, '');\n      if (!docPtr) {\n        const lastError = this.pdfiumModule.FPDF_GetLastError();\n        this.logger.error(\n          LOG_SOURCE,\n          LOG_CATEGORY,\n          `FPDF_LoadMemDocument failed with ${lastError}`,\n        );\n        this.free(filePtr);\n\n        for (const ptr of ptrs) {\n          this.pdfiumModule.FPDF_CloseDocument(ptr.docPtr);\n          this.free(ptr.filePtr);\n        }\n\n        this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Merge`, 'End', fileIds);\n        return PdfTaskHelper.reject<PdfFile>({\n          code: lastError,\n          message: `FPDF_LoadMemDocument failed`,\n        });\n      }\n      ptrs.push({ filePtr, docPtr });\n\n      if (!this.pdfiumModule.FPDF_ImportPages(newDocPtr, docPtr, '', 0)) {\n        this.pdfiumModule.FPDF_CloseDocument(newDocPtr);\n\n        for (const ptr of ptrs) {\n          this.pdfiumModule.FPDF_CloseDocument(ptr.docPtr);\n          this.free(ptr.filePtr);\n        }\n\n        this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Merge`, 'End', fileIds);\n        return PdfTaskHelper.reject({\n          code: PdfErrorCode.CantImportPages,\n          message: 'can not import pages to new document',\n        });\n      }\n    }\n    const buffer = this.saveDocument(newDocPtr);\n\n    this.pdfiumModule.FPDF_CloseDocument(newDocPtr);\n\n    for (const ptr of ptrs) {\n      this.pdfiumModule.FPDF_CloseDocument(ptr.docPtr);\n      this.free(ptr.filePtr);\n    }\n\n    const file: PdfFile = {\n      id: `${Math.random()}`,\n      content: buffer,\n    };\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `Merge`, 'End', fileIds);\n    return PdfTaskHelper.resolve(file);\n  }\n\n  /**\n   * Merges specific pages from multiple PDF documents in a custom order\n   *\n   * @param mergeConfigs Array of configurations specifying which pages to merge from which documents\n   * @returns A PdfTask that resolves with the merged PDF file\n   * @public\n   */\n  mergePages(mergeConfigs: Array<{ docId: string; pageIndices: number[] }>) {\n    const configIds = mergeConfigs\n      .map((config) => `${config.docId}:${config.pageIndices.join(',')}`)\n      .join('|');\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'mergePages', mergeConfigs);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `MergePages`, 'Begin', configIds);\n\n    // Create a new document to import pages into\n    const newDocPtr = this.pdfiumModule.FPDF_CreateNewDocument();\n    if (!newDocPtr) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `MergePages`, 'End', configIds);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantCreateNewDoc,\n        message: 'Cannot create new document',\n      });\n    }\n\n    try {\n      // Process each merge configuration in reverse order (since we're inserting at position 0)\n      // This ensures the final document has pages in the order specified by the user\n      for (const config of [...mergeConfigs].reverse()) {\n        // Check if the document is open\n        const ctx = this.cache.getContext(config.docId);\n\n        if (!ctx) {\n          this.logger.warn(\n            LOG_SOURCE,\n            LOG_CATEGORY,\n            `Document ${config.docId} is not open, skipping`,\n          );\n          continue;\n        }\n\n        // Get the page count for this document\n        const pageCount = this.pdfiumModule.FPDF_GetPageCount(ctx.docPtr);\n\n        // Filter out invalid page indices\n        const validPageIndices = config.pageIndices.filter(\n          (index) => index >= 0 && index < pageCount,\n        );\n\n        if (validPageIndices.length === 0) {\n          continue; // No valid pages to import\n        }\n\n        // Convert 0-based indices to 1-based for PDFium and join with commas\n        const pageString = validPageIndices.map((index) => index + 1).join(',');\n\n        try {\n          // Import all specified pages at once from this document\n          if (\n            !this.pdfiumModule.FPDF_ImportPages(\n              newDocPtr,\n              ctx.docPtr,\n              pageString,\n              0, // Insert at the beginning\n            )\n          ) {\n            throw new Error(`Failed to import pages ${pageString} from document ${config.docId}`);\n          }\n        } finally {\n        }\n      }\n\n      // Save the new document to buffer\n      const buffer = this.saveDocument(newDocPtr);\n\n      const file: PdfFile = {\n        id: `${Math.random()}`,\n        content: buffer,\n      };\n\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `MergePages`, 'End', configIds);\n      return PdfTaskHelper.resolve(file);\n    } catch (error) {\n      this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'mergePages failed', error);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `MergePages`, 'End', configIds);\n\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.CantImportPages,\n        message: error instanceof Error ? error.message : 'Failed to merge pages',\n      });\n    } finally {\n      // Clean up the new document\n      if (newDocPtr) {\n        this.pdfiumModule.FPDF_CloseDocument(newDocPtr);\n      }\n    }\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.saveAsCopy}\n   *\n   * @public\n   */\n  saveAsCopy(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'saveAsCopy', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SaveAsCopy`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SaveAsCopy`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    const buffer = this.saveDocument(ctx.docPtr);\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SaveAsCopy`, 'End', doc.id);\n    return PdfTaskHelper.resolve(buffer);\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.closeDocument}\n   *\n   * @public\n   */\n  closeDocument(doc: PdfDocumentObject) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'closeDocument', doc);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `CloseDocument`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `CloseDocument`, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    ctx.dispose();\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `CloseDocument`, 'End', doc.id);\n    return PdfTaskHelper.resolve(true);\n  }\n\n  /**\n   * Memory allocation\n   * @param size - size of memory space\n   * @returns pointer to memory space\n   *\n   * @public\n   */\n  malloc(size: number) {\n    const ptr = this.pdfiumModule.pdfium.wasmExports.malloc(size);\n    for (let i = 0; i < size; i++) {\n      this.pdfiumModule.pdfium.HEAP8[ptr + i] = 0;\n    }\n\n    return ptr;\n  }\n\n  /**\n   * Free memory space\n   * @param ptr pointer to memory space\n   *\n   * @public\n   */\n  free(ptr: number) {\n    this.pdfiumModule.pdfium.wasmExports.free(ptr);\n  }\n\n  /**\n   * Set the rect of specified annotation\n   * @param page - page info that the annotation is belonged to\n   * @param pagePtr - pointer of page object\n   * @param annotationPtr - pointer to annotation object\n   * @param inkList - ink lists that added to the annotation\n   * @returns whether the ink lists is setted\n   *\n   * @private\n   */\n  addInkStroke(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    annotation: PdfInkAnnoObject,\n  ) {\n    if (\n      !this.setBorderStyle(annotationPtr, PdfAnnotationBorderStyle.SOLID, annotation.strokeWidth)\n    ) {\n      return false;\n    }\n    if (!this.setPageAnnoRect(page, pagePtr, annotationPtr, annotation.rect)) {\n      return false;\n    }\n    if (!this.setInkList(page, annotationPtr, annotation.inkList)) {\n      return false;\n    }\n    if (!this.setAnnotString(annotationPtr, 'T', annotation.author || '')) {\n      return false;\n    }\n    if (!this.setAnnotString(annotationPtr, 'M', dateToPdfDate(annotation.modified))) {\n      return false;\n    }\n    if (\n      !this.setAnnotationColor(\n        annotationPtr,\n        {\n          color: annotation.color ?? '#FFFF00',\n          opacity: annotation.opacity ?? 1,\n        },\n        PdfAnnotationColorType.Color,\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Add highlight content to annotation\n   * @param page - page info\n   * @param annotationPtr - pointer to highlight annotation\n   * @param annotation - highlight annotation\n   * @returns whether highlight content is added to annotation\n   *\n   * @private\n   */\n  addTextMarkupContent(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    annotation:\n      | PdfHighlightAnnoObject\n      | PdfUnderlineAnnoObject\n      | PdfStrikeOutAnnoObject\n      | PdfSquigglyAnnoObject,\n  ) {\n    if (!this.setPageAnnoRect(page, pagePtr, annotationPtr, annotation.rect)) {\n      return false;\n    }\n    if (!this.syncQuadPointsAnno(page, annotationPtr, annotation.segmentRects)) {\n      return false;\n    }\n    if (!this.setAnnotString(annotationPtr, 'Contents', annotation.contents ?? '')) {\n      return false;\n    }\n    if (!this.setAnnotString(annotationPtr, 'T', annotation.author || '')) {\n      return false;\n    }\n    if (!this.setAnnotString(annotationPtr, 'M', dateToPdfDate(annotation.modified))) {\n      return false;\n    }\n    if (\n      !this.setAnnotationColor(\n        annotationPtr,\n        {\n          color: annotation.color ?? '#FFFF00',\n          opacity: annotation.opacity ?? 1,\n        },\n        PdfAnnotationColorType.Color,\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Add contents to stamp annotation\n   * @param docPtr - pointer to pdf document object\n   * @param page - page info\n   * @param pagePtr - pointer to page object\n   * @param annotationPtr - pointer to stamp annotation\n   * @param rect - rect of stamp annotation\n   * @param contents - contents of stamp annotation\n   * @returns whether contents is added to annotation\n   *\n   * @private\n   */\n  addStampContent(\n    docPtr: number,\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    rect: Rect,\n    contents: PdfStampAnnoObjectContents,\n  ) {\n    for (const content of contents) {\n      switch (content.type) {\n        case PdfPageObjectType.IMAGE:\n          return this.addImageObject(\n            docPtr,\n            page,\n            pagePtr,\n            annotationPtr,\n            rect.origin,\n            content.imageData,\n          );\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Add image object to annotation\n   * @param docPtr - pointer to pdf document object\n   * @param page - page info\n   * @param pagePtr - pointer to page object\n   * @param annotationPtr - pointer to stamp annotation\n   * @param position - position of image\n   * @param imageData - data of image\n   * @returns whether image is added to annotation\n   *\n   * @private\n   */\n  addImageObject(\n    docPtr: number,\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    position: Position,\n    imageData: ImageData,\n  ) {\n    const bytesPerPixel = 4;\n    const pixelCount = imageData.width * imageData.height;\n\n    const bitmapBufferPtr = this.malloc(bytesPerPixel * pixelCount);\n    if (!bitmapBufferPtr) {\n      return false;\n    }\n\n    for (let i = 0; i < pixelCount; i++) {\n      const red = imageData.data[i * bytesPerPixel];\n      const green = imageData.data[i * bytesPerPixel + 1];\n      const blue = imageData.data[i * bytesPerPixel + 2];\n      const alpha = imageData.data[i * bytesPerPixel + 3];\n\n      this.pdfiumModule.pdfium.setValue(bitmapBufferPtr + i * bytesPerPixel, blue, 'i8');\n      this.pdfiumModule.pdfium.setValue(bitmapBufferPtr + i * bytesPerPixel + 1, green, 'i8');\n      this.pdfiumModule.pdfium.setValue(bitmapBufferPtr + i * bytesPerPixel + 2, red, 'i8');\n      this.pdfiumModule.pdfium.setValue(bitmapBufferPtr + i * bytesPerPixel + 3, alpha, 'i8');\n    }\n\n    const format = BitmapFormat.Bitmap_BGRA;\n    const bitmapPtr = this.pdfiumModule.FPDFBitmap_CreateEx(\n      imageData.width,\n      imageData.height,\n      format,\n      bitmapBufferPtr,\n      0,\n    );\n    if (!bitmapPtr) {\n      this.free(bitmapBufferPtr);\n      return false;\n    }\n\n    const imageObjectPtr = this.pdfiumModule.FPDFPageObj_NewImageObj(docPtr);\n    if (!imageObjectPtr) {\n      this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n      this.free(bitmapBufferPtr);\n      return false;\n    }\n\n    if (!this.pdfiumModule.FPDFImageObj_SetBitmap(pagePtr, 0, imageObjectPtr, bitmapPtr)) {\n      this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n      this.pdfiumModule.FPDFPageObj_Destroy(imageObjectPtr);\n      this.free(bitmapBufferPtr);\n      return false;\n    }\n\n    const matrixPtr = this.malloc(6 * 4);\n    this.pdfiumModule.pdfium.setValue(matrixPtr, imageData.width, 'float');\n    this.pdfiumModule.pdfium.setValue(matrixPtr + 4, 0, 'float');\n    this.pdfiumModule.pdfium.setValue(matrixPtr + 8, 0, 'float');\n    this.pdfiumModule.pdfium.setValue(matrixPtr + 12, imageData.height, 'float');\n    this.pdfiumModule.pdfium.setValue(matrixPtr + 16, 0, 'float');\n    this.pdfiumModule.pdfium.setValue(matrixPtr + 20, 0, 'float');\n    if (!this.pdfiumModule.FPDFPageObj_SetMatrix(imageObjectPtr, matrixPtr)) {\n      this.free(matrixPtr);\n      this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n      this.pdfiumModule.FPDFPageObj_Destroy(imageObjectPtr);\n      this.free(bitmapBufferPtr);\n      return false;\n    }\n    this.free(matrixPtr);\n\n    this.pdfiumModule.FPDFPageObj_Transform(imageObjectPtr, 1, 0, 0, 1, position.x, position.y);\n\n    if (!this.pdfiumModule.FPDFAnnot_AppendObject(annotationPtr, imageObjectPtr)) {\n      this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n      this.pdfiumModule.FPDFPageObj_Destroy(imageObjectPtr);\n      this.free(bitmapBufferPtr);\n      return false;\n    }\n\n    this.pdfiumModule.FPDFPage_GenerateContent(pagePtr);\n    this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n    this.free(bitmapBufferPtr);\n\n    return true;\n  }\n\n  /**\n   * Save document to array buffer\n   * @param docPtr - pointer to pdf document\n   * @returns array buffer contains the pdf content\n   *\n   * @private\n   */\n  saveDocument(docPtr: number) {\n    const writerPtr = this.pdfiumModule.PDFiumExt_OpenFileWriter();\n    this.pdfiumModule.PDFiumExt_SaveAsCopy(docPtr, writerPtr);\n    const size = this.pdfiumModule.PDFiumExt_GetFileWriterSize(writerPtr);\n    const dataPtr = this.malloc(size);\n    this.pdfiumModule.PDFiumExt_GetFileWriterData(writerPtr, dataPtr, size);\n    const buffer = new ArrayBuffer(size);\n    const view = new DataView(buffer);\n    for (let i = 0; i < size; i++) {\n      view.setInt8(i, this.pdfiumModule.pdfium.getValue(dataPtr + i, 'i8'));\n    }\n    this.free(dataPtr);\n    this.pdfiumModule.PDFiumExt_CloseFileWriter(writerPtr);\n\n    return buffer;\n  }\n\n  /**\n   * Read metadata from pdf document\n   * @param docPtr - pointer to pdf document\n   * @param key - key of metadata field\n   * @returns metadata value\n   *\n   * @private\n   */\n  readMetaText(docPtr: number, key: string) {\n    return readString(\n      this.pdfiumModule.pdfium,\n      (buffer, bufferLength) => {\n        return this.pdfiumModule.FPDF_GetMetaText(docPtr, key, buffer, bufferLength);\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n  }\n\n  /**\n   * Read bookmarks in the pdf document\n   * @param docPtr - pointer to pdf document\n   * @param rootBookmarkPtr - pointer to root bookmark\n   * @returns bookmarks in the pdf document\n   *\n   * @private\n   */\n  readPdfBookmarks(docPtr: number, rootBookmarkPtr = 0) {\n    let bookmarkPtr = this.pdfiumModule.FPDFBookmark_GetFirstChild(docPtr, rootBookmarkPtr);\n\n    const bookmarks: PdfBookmarkObject[] = [];\n    while (bookmarkPtr) {\n      const bookmark = this.readPdfBookmark(docPtr, bookmarkPtr);\n      bookmarks.push(bookmark);\n\n      const nextBookmarkPtr = this.pdfiumModule.FPDFBookmark_GetNextSibling(docPtr, bookmarkPtr);\n\n      bookmarkPtr = nextBookmarkPtr;\n    }\n\n    return bookmarks;\n  }\n\n  /**\n   * Read bookmark in the pdf document\n   * @param docPtr - pointer to pdf document\n   * @param bookmarkPtr - pointer to bookmark object\n   * @returns pdf bookmark object\n   *\n   * @private\n   */\n  private readPdfBookmark(docPtr: number, bookmarkPtr: number): PdfBookmarkObject {\n    const title = readString(\n      this.pdfiumModule.pdfium,\n      (buffer, bufferLength) => {\n        return this.pdfiumModule.FPDFBookmark_GetTitle(bookmarkPtr, buffer, bufferLength);\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n\n    const bookmarks = this.readPdfBookmarks(docPtr, bookmarkPtr);\n\n    const target = this.readPdfBookmarkTarget(\n      docPtr,\n      () => {\n        return this.pdfiumModule.FPDFBookmark_GetAction(bookmarkPtr);\n      },\n      () => {\n        return this.pdfiumModule.FPDFBookmark_GetDest(docPtr, bookmarkPtr);\n      },\n    );\n\n    return {\n      title,\n      target,\n      children: bookmarks,\n    };\n  }\n\n  /**\n   * Read text rects in pdf page\n   * @param page - pdf page info\n   * @param docPtr - pointer to pdf document\n   * @param pagePtr - pointer to pdf page\n   * @param textPagePtr - pointer to pdf text page\n   * @returns text rects in the pdf page\n   *\n   * @public\n   */\n  private readPageTextRects(\n    page: PdfPageObject,\n    docPtr: number,\n    pagePtr: number,\n    textPagePtr: number,\n  ) {\n    const rectsCount = this.pdfiumModule.FPDFText_CountRects(textPagePtr, 0, -1);\n\n    const textRects: PdfTextRectObject[] = [];\n    for (let i = 0; i < rectsCount; i++) {\n      const topPtr = this.malloc(8);\n      const leftPtr = this.malloc(8);\n      const rightPtr = this.malloc(8);\n      const bottomPtr = this.malloc(8);\n      const isSucceed = this.pdfiumModule.FPDFText_GetRect(\n        textPagePtr,\n        i,\n        leftPtr,\n        topPtr,\n        rightPtr,\n        bottomPtr,\n      );\n      if (!isSucceed) {\n        this.free(leftPtr);\n        this.free(topPtr);\n        this.free(rightPtr);\n        this.free(bottomPtr);\n        continue;\n      }\n\n      const left = this.pdfiumModule.pdfium.getValue(leftPtr, 'double');\n      const top = this.pdfiumModule.pdfium.getValue(topPtr, 'double');\n      const right = this.pdfiumModule.pdfium.getValue(rightPtr, 'double');\n      const bottom = this.pdfiumModule.pdfium.getValue(bottomPtr, 'double');\n\n      this.free(leftPtr);\n      this.free(topPtr);\n      this.free(rightPtr);\n      this.free(bottomPtr);\n\n      const deviceXPtr = this.malloc(4);\n      const deviceYPtr = this.malloc(4);\n      this.pdfiumModule.FPDF_PageToDevice(\n        pagePtr,\n        0,\n        0,\n        page.size.width,\n        page.size.height,\n        0,\n        left,\n        top,\n        deviceXPtr,\n        deviceYPtr,\n      );\n      const x = this.pdfiumModule.pdfium.getValue(deviceXPtr, 'i32');\n      const y = this.pdfiumModule.pdfium.getValue(deviceYPtr, 'i32');\n      this.free(deviceXPtr);\n      this.free(deviceYPtr);\n\n      const rect = {\n        origin: {\n          x,\n          y,\n        },\n        size: {\n          width: Math.ceil(Math.abs(right - left)),\n          height: Math.ceil(Math.abs(top - bottom)),\n        },\n      };\n\n      const utf16Length = this.pdfiumModule.FPDFText_GetBoundedText(\n        textPagePtr,\n        left,\n        top,\n        right,\n        bottom,\n        0,\n        0,\n      );\n      const bytesCount = (utf16Length + 1) * 2; // include NIL\n      const textBuffer = this.malloc(bytesCount);\n      this.pdfiumModule.FPDFText_GetBoundedText(\n        textPagePtr,\n        left,\n        top,\n        right,\n        bottom,\n        textBuffer,\n        utf16Length,\n      );\n      const content = this.pdfiumModule.pdfium.UTF16ToString(textBuffer);\n      this.free(textBuffer);\n\n      const charIndex = this.pdfiumModule.FPDFText_GetCharIndexAtPos(textPagePtr, left, top, 2, 2);\n      let fontFamily = '';\n      let fontSize = rect.size.height;\n      if (charIndex >= 0) {\n        fontSize = this.pdfiumModule.FPDFText_GetFontSize(textPagePtr, charIndex);\n\n        const fontNameLength = this.pdfiumModule.FPDFText_GetFontInfo(\n          textPagePtr,\n          charIndex,\n          0,\n          0,\n          0,\n        );\n\n        const bytesCount = fontNameLength + 1; // include NIL\n        const textBufferPtr = this.malloc(bytesCount);\n        const flagsPtr = this.malloc(4);\n        this.pdfiumModule.FPDFText_GetFontInfo(\n          textPagePtr,\n          charIndex,\n          textBufferPtr,\n          bytesCount,\n          flagsPtr,\n        );\n        fontFamily = this.pdfiumModule.pdfium.UTF8ToString(textBufferPtr);\n        this.free(textBufferPtr);\n        this.free(flagsPtr);\n      }\n\n      const textRect: PdfTextRectObject = {\n        content,\n        rect,\n        font: {\n          family: fontFamily,\n          size: fontSize,\n        },\n      };\n\n      textRects.push(textRect);\n    }\n\n    return textRects;\n  }\n\n  /**\n   * Return geometric + logical text layout for one page\n   * (glyph-only implementation, no FPDFText_GetRect).\n   *\n   * @public\n   */\n  getPageGeometry(doc: PdfDocumentObject, page: PdfPageObject): PdfTask<PdfPageGeometry> {\n    const label = 'getPageGeometry';\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, label, 'Begin', doc.id);\n\n    /* ── guards ───────────────────────────────────────────── */\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, label, 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    /* ── native handles ──────────────────────────────────── */\n    const pageCtx = ctx.acquirePage(page.index);\n    const textPagePtr = pageCtx.getTextPage();\n\n    /* ── 1. read ALL glyphs in logical order ─────────────── */\n    const glyphCount = this.pdfiumModule.FPDFText_CountChars(textPagePtr);\n    const glyphs: PdfGlyphObject[] = [];\n\n    for (let i = 0; i < glyphCount; i++) {\n      const g = this.readGlyphInfo(page, pageCtx.pagePtr, textPagePtr, i);\n      glyphs.push(g);\n    }\n\n    /* ── 2. build visual runs from glyph stream ───────────── */\n    const runs: PdfRun[] = this.buildRunsFromGlyphs(glyphs, textPagePtr);\n\n    /* ── 3. cleanup & resolve task ───────────────────────── */\n    pageCtx.release();\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, label, 'End', doc.id);\n    return PdfTaskHelper.resolve({ runs });\n  }\n\n  /**\n   * Group consecutive glyphs that belong to the same CPDF_TextObject\n   * using FPDFText_GetTextObject(), and calculate rotation from glyph positions.\n   */\n  private buildRunsFromGlyphs(glyphs: PdfGlyphObject[], textPagePtr: number): PdfRun[] {\n    const runs: PdfRun[] = [];\n    let current: PdfRun | null = null;\n    let curObjPtr: number | null = null;\n    let bounds: { minX: number; minY: number; maxX: number; maxY: number } | null = null;\n\n    /** ── main loop ──────────────────────────────────────────── */\n    for (let i = 0; i < glyphs.length; i++) {\n      const g = glyphs[i];\n\n      /* 1 — find the CPDF_TextObject this glyph belongs to */\n      const objPtr = this.pdfiumModule.FPDFText_GetTextObject(textPagePtr, i) as number;\n\n      /* 2 — start a new run when the text object changes */\n      if (objPtr !== curObjPtr) {\n        curObjPtr = objPtr;\n        current = {\n          rect: {\n            x: g.origin.x,\n            y: g.origin.y,\n            width: g.size.width,\n            height: g.size.height,\n          },\n          charStart: i,\n          glyphs: [],\n        };\n        bounds = {\n          minX: g.origin.x,\n          minY: g.origin.y,\n          maxX: g.origin.x + g.size.width,\n          maxY: g.origin.y + g.size.height,\n        };\n        runs.push(current);\n      }\n\n      /* 3 — append the slim glyph record */\n      current!.glyphs.push({\n        x: g.origin.x,\n        y: g.origin.y,\n        width: g.size.width,\n        height: g.size.height,\n        flags: g.isEmpty ? 2 : g.isSpace ? 1 : 0,\n      });\n\n      /* 4 — expand the run's bounding rect */\n      if (g.isEmpty) {\n        continue;\n      }\n\n      const right = g.origin.x + g.size.width;\n      const bottom = g.origin.y + g.size.height;\n\n      // Update bounds\n      bounds!.minX = Math.min(bounds!.minX, g.origin.x);\n      bounds!.minY = Math.min(bounds!.minY, g.origin.y);\n      bounds!.maxX = Math.max(bounds!.maxX, right);\n      bounds!.maxY = Math.max(bounds!.maxY, bottom);\n\n      // Calculate final rect from bounds\n      current!.rect.x = bounds!.minX;\n      current!.rect.y = bounds!.minY;\n      current!.rect.width = bounds!.maxX - bounds!.minX;\n      current!.rect.height = bounds!.maxY - bounds!.minY;\n    }\n\n    return runs;\n  }\n\n  /**\n   * Extract glyph geometry + metadata for `charIndex`\n   *\n   * Returns device–space coordinates:\n   *   x,y  → **top-left** corner (integer-pixels)\n   *   w,h  → width / height (integer-pixels, ≥ 1)\n   *\n   * And two flags:\n   *   isSpace → true if the glyph's Unicode code-point is U+0020\n   */\n  private readGlyphInfo(\n    page: PdfPageObject,\n    pagePtr: number,\n    textPagePtr: number,\n    charIndex: number,\n  ): PdfGlyphObject {\n    // ── native stack temp pointers ──────────────────────────────\n    const dx1Ptr = this.malloc(4);\n    const dy1Ptr = this.malloc(4);\n    const dx2Ptr = this.malloc(4);\n    const dy2Ptr = this.malloc(4);\n    const rectPtr = this.malloc(16); // 4 floats = 16 bytes\n\n    let x = 0,\n      y = 0,\n      width = 0,\n      height = 0,\n      isSpace = false;\n\n    // ── 1) raw glyph bbox in                      page-user-space\n    if (this.pdfiumModule.FPDFText_GetLooseCharBox(textPagePtr, charIndex, rectPtr)) {\n      const left = this.pdfiumModule.pdfium.getValue(rectPtr, 'float');\n      const top = this.pdfiumModule.pdfium.getValue(rectPtr + 4, 'float');\n      const right = this.pdfiumModule.pdfium.getValue(rectPtr + 8, 'float');\n      const bottom = this.pdfiumModule.pdfium.getValue(rectPtr + 12, 'float');\n\n      if (left === right || top === bottom) {\n        return {\n          origin: { x: 0, y: 0 },\n          size: { width: 0, height: 0 },\n          isEmpty: true,\n        };\n      }\n\n      // ── 2) map 2 opposite corners to            device-space\n      this.pdfiumModule.FPDF_PageToDevice(\n        pagePtr,\n        0,\n        0,\n        page.size.width,\n        page.size.height,\n        /*rotate=*/ 0,\n        left,\n        top,\n        dx1Ptr,\n        dy1Ptr,\n      );\n      this.pdfiumModule.FPDF_PageToDevice(\n        pagePtr,\n        0,\n        0,\n        page.size.width,\n        page.size.height,\n        /*rotate=*/ 0,\n        right,\n        bottom,\n        dx2Ptr,\n        dy2Ptr,\n      );\n\n      const x1 = this.pdfiumModule.pdfium.getValue(dx1Ptr, 'i32');\n      const y1 = this.pdfiumModule.pdfium.getValue(dy1Ptr, 'i32');\n      const x2 = this.pdfiumModule.pdfium.getValue(dx2Ptr, 'i32');\n      const y2 = this.pdfiumModule.pdfium.getValue(dy2Ptr, 'i32');\n\n      x = Math.min(x1, x2);\n      y = Math.min(y1, y2);\n      width = Math.max(1, Math.abs(x2 - x1));\n      height = Math.max(1, Math.abs(y2 - y1));\n\n      // ── 3) extra flags ───────────────────────────────────────\n      const uc = this.pdfiumModule.FPDFText_GetUnicode(textPagePtr, charIndex);\n      isSpace = uc === 32;\n    }\n\n    // ── free tmps ───────────────────────────────────────────────\n    [rectPtr, dx1Ptr, dy1Ptr, dx2Ptr, dy2Ptr].forEach((p) => this.free(p));\n\n    return {\n      origin: { x, y },\n      size: { width, height },\n      ...(isSpace && { isSpace }),\n    };\n  }\n\n  /**\n   * Geometry-only text extraction\n   * ------------------------------------------\n   * Returns every glyph on the requested page\n   * in the logical order delivered by PDFium.\n   *\n   * The promise resolves to an array of objects:\n   *   {\n   *     idx:     number;            // glyph index on the page (0…n-1)\n   *     origin:  { x: number; y: number };\n   *     size:    { width: number;  height: number };\n   *     angle:   number;            // degrees, counter-clock-wise\n   *     isSpace: boolean;           // true  → U+0020\n   *   }\n   *\n   * No Unicode is included; front-end decides whether to hydrate it.\n   */\n  public getPageGlyphs(doc: PdfDocumentObject, page: PdfPageObject): PdfTask<PdfGlyphObject[]> {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'getPageGlyphs', doc, page);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'getPageGlyphs', 'Begin', doc.id);\n\n    // ── 1) safety: document handle must be alive ───────────────\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'getPageGlyphs', 'End', doc.id);\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    // ── 2) load page + text page handles ───────────────────────\n    const pageCtx = ctx.acquirePage(page.index);\n    const textPagePtr = pageCtx.getTextPage();\n\n    // ── 3) iterate all glyphs in logical order ─────────────────\n    const total = this.pdfiumModule.FPDFText_CountChars(textPagePtr);\n    const glyphs = new Array(total);\n\n    for (let i = 0; i < total; i++) {\n      const g = this.readGlyphInfo(page, pageCtx.pagePtr, textPagePtr, i);\n\n      if (g.isEmpty) {\n        continue;\n      }\n\n      glyphs[i] = { ...g };\n    }\n\n    // ── 4) clean-up native handles ─────────────────────────────\n    pageCtx.release();\n\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'getPageGlyphs', 'End', doc.id);\n\n    return PdfTaskHelper.resolve(glyphs);\n  }\n\n  private readCharBox(\n    page: PdfPageObject,\n    pagePtr: number,\n    textPagePtr: number,\n    charIndex: number,\n  ): Rect {\n    const topPtr = this.malloc(8);\n    const leftPtr = this.malloc(8);\n    const bottomPtr = this.malloc(8);\n    const rightPtr = this.malloc(8);\n    let x = 0;\n    let y = 0;\n    let width = 0;\n    let height = 0;\n    if (\n      this.pdfiumModule.FPDFText_GetCharBox(\n        textPagePtr,\n        charIndex,\n        leftPtr,\n        rightPtr,\n        bottomPtr,\n        topPtr,\n      )\n    ) {\n      const top = this.pdfiumModule.pdfium.getValue(topPtr, 'double');\n      const left = this.pdfiumModule.pdfium.getValue(leftPtr, 'double');\n      const bottom = this.pdfiumModule.pdfium.getValue(bottomPtr, 'double');\n      const right = this.pdfiumModule.pdfium.getValue(rightPtr, 'double');\n\n      const deviceXPtr = this.malloc(4);\n      const deviceYPtr = this.malloc(4);\n      this.pdfiumModule.FPDF_PageToDevice(\n        pagePtr,\n        0,\n        0,\n        page.size.width,\n        page.size.height,\n        0,\n        left,\n        top,\n        deviceXPtr,\n        deviceYPtr,\n      );\n      x = this.pdfiumModule.pdfium.getValue(deviceXPtr, 'i32');\n      y = this.pdfiumModule.pdfium.getValue(deviceYPtr, 'i32');\n      this.free(deviceXPtr);\n      this.free(deviceYPtr);\n\n      width = Math.ceil(Math.abs(right - left));\n      height = Math.ceil(Math.abs(top - bottom));\n    }\n    this.free(topPtr);\n    this.free(leftPtr);\n    this.free(bottomPtr);\n    this.free(rightPtr);\n\n    return {\n      origin: {\n        x,\n        y,\n      },\n      size: {\n        width,\n        height,\n      },\n    };\n  }\n\n  /**\n   * Read page annotations\n   * @param page - page info\n   * @param docPtr - pointer to pdf document\n   * @param pagePtr - pointer to pdf page\n   * @param textPagePtr - pointe to pdf text page\n   * @param scaleFactor - scale factor\n   * @param rotation - rotation angle\n   * @returns annotations on the pdf page\n   *\n   * @private\n   */\n  private readPageAnnotations(ctx: DocumentContext, page: PdfPageObject) {\n    const pageCtx = ctx.acquirePage(page.index);\n    const annotationCount = this.pdfiumModule.FPDFPage_GetAnnotCount(pageCtx.pagePtr);\n\n    const annotations: PdfAnnotationObject[] = [];\n    for (let i = 0; i < annotationCount; i++) {\n      pageCtx.withAnnotation(i, (annotPtr) => {\n        const annotation = this.readPageAnnotation(page, pageCtx, annotPtr, i);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      });\n    }\n\n    return annotations;\n  }\n\n  /**\n   * Read pdf annotation from pdf document\n   * @param page  - pdf page infor\n   * @param docPtr - pointer to pdf document object\n   * @param pagePtr - pointer to pdf page object\n   * @param  textPagePtr - pointer to pdf text page object\n   * @param formHandle - form handle\n   * @param index - index of annotation in the pdf page\n   * @param scaleFactor  - factor of scalling\n   * @param rotation  - rotation angle\n   * @returns pdf annotation\n   *\n   * @private\n   */\n  private readPageAnnotation(\n    page: PdfPageObject,\n    pageCtx: PageContext,\n    annotationPtr: number,\n    index: number,\n  ) {\n    const subType = this.pdfiumModule.FPDFAnnot_GetSubtype(\n      annotationPtr,\n    ) as PdfAnnotationObject['type'];\n    let annotation: PdfAnnotationObject | undefined;\n    switch (subType) {\n      case PdfAnnotationSubtype.TEXT:\n        {\n          annotation = this.readPdfTextAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.FREETEXT:\n        {\n          annotation = this.readPdfFreeTextAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.LINK:\n        {\n          annotation = this.readPdfLinkAnno(\n            page,\n            pageCtx.docPtr,\n            pageCtx.pagePtr,\n            pageCtx.getTextPage(),\n            annotationPtr,\n            index,\n          );\n        }\n        break;\n      case PdfAnnotationSubtype.WIDGET:\n        {\n          annotation = this.readPdfWidgetAnno(\n            page,\n            pageCtx.pagePtr,\n            annotationPtr,\n            pageCtx.getFormHandle(),\n            index,\n          );\n        }\n        break;\n      case PdfAnnotationSubtype.FILEATTACHMENT:\n        {\n          annotation = this.readPdfFileAttachmentAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.INK:\n        {\n          annotation = this.readPdfInkAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.POLYGON:\n        {\n          annotation = this.readPdfPolygonAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.POLYLINE:\n        {\n          annotation = this.readPdfPolylineAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.LINE:\n        {\n          annotation = this.readPdfLineAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.HIGHLIGHT:\n        annotation = this.readPdfHighlightAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        break;\n      case PdfAnnotationSubtype.STAMP:\n        {\n          annotation = this.readPdfStampAnno(\n            pageCtx.docPtr,\n            page,\n            pageCtx.pagePtr,\n            annotationPtr,\n            index,\n          );\n        }\n        break;\n      case PdfAnnotationSubtype.SQUARE:\n        {\n          annotation = this.readPdfSquareAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.CIRCLE:\n        {\n          annotation = this.readPdfCircleAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.UNDERLINE:\n        {\n          annotation = this.readPdfUnderlineAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.SQUIGGLY:\n        {\n          annotation = this.readPdfSquigglyAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.STRIKEOUT:\n        {\n          annotation = this.readPdfStrikeOutAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      case PdfAnnotationSubtype.CARET:\n        {\n          annotation = this.readPdfCaretAnno(page, pageCtx.pagePtr, annotationPtr, index);\n        }\n        break;\n      default:\n        {\n          annotation = this.readPdfAnno(page, pageCtx.pagePtr, subType, annotationPtr, index);\n        }\n        break;\n    }\n\n    return annotation;\n  }\n\n  /**\n   * Return the colour stored directly in the annotation dictionary's `/C` entry.\n   *\n   * Most PDFs created by Acrobat, Microsoft Office, LaTeX, etc. include this entry.\n   * When the key is absent (common in macOS Preview, Chrome, Drawboard) the call\n   * fails and the function returns `undefined`.\n   *\n   * @param annotationPtr - pointer to an `FPDF_ANNOTATION`\n   * @returns An RGBA tuple (0-255 channels) or `undefined` if no `/C` entry exists\n   *\n   * @private\n   */\n  private readAnnotationColor(\n    annotationPtr: number,\n    colorType: PdfAnnotationColorType = PdfAnnotationColorType.Color,\n  ): PdfAlphaColor | undefined {\n    const rPtr = this.malloc(4);\n    const gPtr = this.malloc(4);\n    const bPtr = this.malloc(4);\n    const aPtr = this.malloc(4);\n\n    // colourType 0 = \"colour\" (stroke/fill); other types are interior/border\n    const ok = this.pdfiumModule.EPDFAnnot_GetColor(\n      annotationPtr,\n      colorType,\n      rPtr,\n      gPtr,\n      bPtr,\n      aPtr,\n    );\n\n    let colour: PdfAlphaColor | undefined;\n\n    if (ok) {\n      colour = {\n        red: this.pdfiumModule.pdfium.getValue(rPtr, 'i32') & 0xff,\n        green: this.pdfiumModule.pdfium.getValue(gPtr, 'i32') & 0xff,\n        blue: this.pdfiumModule.pdfium.getValue(bPtr, 'i32') & 0xff,\n        alpha: this.pdfiumModule.pdfium.getValue(aPtr, 'i32') & 0xff, // 0 = transparent, 255 = opaque\n      };\n    }\n\n    this.free(rPtr);\n    this.free(gPtr);\n    this.free(bPtr);\n    this.free(aPtr);\n\n    return colour;\n  }\n\n  /* --------------------------------------------------------------------------- */\n  /**\n   * Resolve the visible fill colour for **Highlight / Underline / StrikeOut /\n   * Squiggly** markup annotations.\n   *\n   * Resolution order (first non-`undefined` wins):\n   *  1. `/C` dictionary entry – fast, present in Acrobat / Office PDFs\n   *  2. Appearance-stream objects – drills into paths & nested forms\n   *  3. Hard-coded fallback (Acrobat-style opaque yellow)\n   *\n   * @param annotationPtr - pointer to an `FPDF_ANNOTATION`\n   * @param fallback      - colour to use when the PDF stores no tint at all\n   * @returns WebAlphaColor with hex color and opacity (0-1)\n   *\n   * @private\n   */\n  private resolveAnnotationColor(\n    annotationPtr: number,\n    colorType: PdfAnnotationColorType = PdfAnnotationColorType.Color,\n    fallback: PdfAlphaColor = { red: 255, green: 245, blue: 155, alpha: 255 },\n  ): WebAlphaColor {\n    const pdfColor = this.readAnnotationColor(annotationPtr, colorType) ?? fallback;\n\n    return pdfAlphaColorToWebAlphaColor(pdfColor);\n  }\n\n  /**\n   * Set the fill/stroke colour for a **Highlight / Underline / StrikeOut / Squiggly** markup annotation.\n   *\n   * @param annotationPtr - pointer to the annotation whose colour is being set\n   * @param webAlphaColor - WebAlphaColor with hex color and opacity (0-1)\n   * @param shouldClearAP - whether to clear the /AP entry\n   * @param which - which colour to set (0 = fill, 1 = stroke)\n   * @returns `true` if the operation was successful\n   *\n   * @private\n   */\n  private setAnnotationColor(\n    annotationPtr: number,\n    webAlphaColor: WebAlphaColor,\n    colorType: PdfAnnotationColorType = PdfAnnotationColorType.Color,\n  ): boolean {\n    const pdfAlphaColor = webAlphaColorToPdfAlphaColor(webAlphaColor);\n\n    return this.pdfiumModule.EPDFAnnot_SetColor(\n      annotationPtr,\n      colorType,\n      pdfAlphaColor.red & 0xff,\n      pdfAlphaColor.green & 0xff,\n      pdfAlphaColor.blue & 0xff,\n      (pdfAlphaColor.alpha ?? 255) & 0xff,\n    );\n  }\n\n  /**\n   * Border‐style + width helper\n   *\n   * Tries the new PDFium helper `EPDFAnnot_GetBorderStyle()` (patch series\n   * 9 July 2025).\n   *\n   * @param  annotationPtr  pointer to an `FPDF_ANNOTATION`\n   * @returns `{ ok, style, width }`\n   *          • `ok`     – `true` when the call succeeded\n   *          • `style`  – `PdfAnnotationBorderStyle` enum\n   *          • `width`  – stroke-width in points (defaults to 0 pt)\n   */\n  private getBorderStyle(annotationPtr: number): {\n    ok: boolean;\n    style: PdfAnnotationBorderStyle;\n    width: number;\n  } {\n    /* 1 ── allocate tmp storage for the returned width ─────────────── */\n    const widthPtr = this.malloc(4);\n    let width = 0;\n    let style: PdfAnnotationBorderStyle = PdfAnnotationBorderStyle.UNKNOWN;\n    let ok = false;\n\n    style = this.pdfiumModule.EPDFAnnot_GetBorderStyle(annotationPtr, widthPtr);\n    width = this.pdfiumModule.pdfium.getValue(widthPtr, 'float');\n    ok = style !== PdfAnnotationBorderStyle.UNKNOWN;\n    this.free(widthPtr);\n    return { ok, style, width };\n  }\n\n  private setBorderStyle(\n    annotationPtr: number,\n    style: PdfAnnotationBorderStyle,\n    width: number,\n  ): boolean {\n    return this.pdfiumModule.EPDFAnnot_SetBorderStyle(annotationPtr, style, width);\n  }\n\n  /**\n   * Border-effect (“cloudy”) helper\n   *\n   * Calls the new PDFium function `EPDFAnnot_GetBorderEffect()` (July 2025).\n   *\n   * @param  annotationPtr  pointer to an `FPDF_ANNOTATION`\n   * @returns `{ ok, intensity }`\n   *          • `ok`        – `true` when the annotation *does* have a\n   *                          valid cloudy-border effect\n   *          • `intensity` – radius/intensity value (0 when `ok` is false)\n   */\n  private getBorderEffect(annotationPtr: number): { ok: boolean; intensity: number } {\n    const intensityPtr = this.malloc(4);\n\n    const ok = !!this.pdfiumModule.EPDFAnnot_GetBorderEffect(annotationPtr, intensityPtr);\n\n    const intensity = ok ? this.pdfiumModule.pdfium.getValue(intensityPtr, 'float') : 0;\n\n    this.free(intensityPtr);\n    return { ok, intensity };\n  }\n\n  /**\n   * Rectangle-differences helper ( /RD array on Square / Circle annots )\n   *\n   * Calls `EPDFAnnot_GetRectangleDifferences()` introduced in July 2025.\n   *\n   * @param  annotationPtr  pointer to an `FPDF_ANNOTATION`\n   * @returns `{ ok, left, top, right, bottom }`\n   *          • `ok`     – `true` when the annotation *has* an /RD entry\n   *          • the four floats are 0 when `ok` is false\n   */\n  private getRectangleDifferences(annotationPtr: number): {\n    ok: boolean;\n    left: number;\n    top: number;\n    right: number;\n    bottom: number;\n  } {\n    /* tmp storage ─────────────────────────────────────────── */\n    const lPtr = this.malloc(4);\n    const tPtr = this.malloc(4);\n    const rPtr = this.malloc(4);\n    const bPtr = this.malloc(4);\n\n    const ok = !!this.pdfiumModule.EPDFAnnot_GetRectangleDifferences(\n      annotationPtr,\n      lPtr,\n      tPtr,\n      rPtr,\n      bPtr,\n    );\n\n    const pdf = this.pdfiumModule.pdfium;\n    const left = pdf.getValue(lPtr, 'float');\n    const top = pdf.getValue(tPtr, 'float');\n    const right = pdf.getValue(rPtr, 'float');\n    const bottom = pdf.getValue(bPtr, 'float');\n\n    /* cleanup ─────────────────────────────────────────────── */\n    this.free(lPtr);\n    this.free(tPtr);\n    this.free(rPtr);\n    this.free(bPtr);\n\n    return { ok, left, top, right, bottom };\n  }\n\n  /**\n   * Dash-pattern helper ( /BS → /D array, dashed borders only )\n   *\n   * Uses the two new PDFium helpers:\n   *   • `EPDFAnnot_GetBorderDashPatternCount`\n   *   • `EPDFAnnot_GetBorderDashPattern`\n   *\n   * @param  annotationPtr  pointer to an `FPDF_ANNOTATION`\n   * @returns `{ ok, pattern }`\n   *          • `ok`       – `true` when the annot is dashed *and* the array\n   *                          was retrieved successfully\n   *          • `pattern`  – numeric array of dash/space lengths (empty when `ok` is false)\n   */\n  private getBorderDashPattern(annotationPtr: number): { ok: boolean; pattern: number[] } {\n    const count = this.pdfiumModule.EPDFAnnot_GetBorderDashPatternCount(annotationPtr);\n    if (count === 0) {\n      return { ok: false, pattern: [] };\n    }\n\n    /* allocate `count` floats on the WASM heap */\n    const arrPtr = this.malloc(4 * count);\n    const okNative = !!this.pdfiumModule.EPDFAnnot_GetBorderDashPattern(\n      annotationPtr,\n      arrPtr,\n      count,\n    );\n\n    /* copy out */\n    const pattern: number[] = [];\n    if (okNative) {\n      const pdf = this.pdfiumModule.pdfium;\n      for (let i = 0; i < count; i++) {\n        pattern.push(pdf.getValue(arrPtr + 4 * i, 'float'));\n      }\n    }\n\n    this.free(arrPtr);\n    return { ok: okNative, pattern };\n  }\n\n  /**\n   * Read `/QuadPoints` from any annotation and convert each quadrilateral to\n   * device-space coordinates.\n   *\n   * The four points are returned in natural reading order:\n   *   `p1 → p2` (top edge) and `p4 → p3` (bottom edge).\n   * This preserves the true shape for rotated / skewed text, whereas callers\n   * that only need axis-aligned boxes can collapse each quad themselves.\n   *\n   * @param page          - logical page info object (`PdfPageObject`)\n   * @param annotationPtr - pointer to the annotation whose quads are needed\n   * @returns Array of `Rect` objects (`[]` if the annotation has no quads)\n   *\n   * @private\n   */\n  private getQuadPointsAnno(page: PdfPageObject, annotationPtr: number): Rect[] {\n    const quadCount = this.pdfiumModule.FPDFAnnot_CountAttachmentPoints(annotationPtr);\n    if (quadCount === 0) return [];\n\n    const FS_QUADPOINTSF_SIZE = 8 * 4; // eight floats, 32 bytes\n    const quads: Quad[] = [];\n\n    for (let qi = 0; qi < quadCount; qi++) {\n      const quadPtr = this.malloc(FS_QUADPOINTSF_SIZE);\n\n      const ok = this.pdfiumModule.FPDFAnnot_GetAttachmentPoints(annotationPtr, qi, quadPtr);\n\n      if (ok) {\n        // read the eight floats\n        const xs: number[] = [];\n        const ys: number[] = [];\n        for (let i = 0; i < 4; i++) {\n          const base = quadPtr + i * 8; // 8 bytes per point (x+y)\n          xs.push(this.pdfiumModule.pdfium.getValue(base, 'float'));\n          ys.push(this.pdfiumModule.pdfium.getValue(base + 4, 'float'));\n        }\n\n        // convert to device-space\n        const p1 = this.convertPagePointToDevicePoint(page, { x: xs[0], y: ys[0] });\n        const p2 = this.convertPagePointToDevicePoint(page, { x: xs[1], y: ys[1] });\n        const p3 = this.convertPagePointToDevicePoint(page, { x: xs[2], y: ys[2] });\n        const p4 = this.convertPagePointToDevicePoint(page, { x: xs[3], y: ys[3] });\n\n        quads.push({ p1, p2, p3, p4 });\n      }\n\n      this.free(quadPtr);\n    }\n\n    return quads.map(quadToRect);\n  }\n\n  /**\n   * Set the quadrilaterals for a **Highlight / Underline / StrikeOut / Squiggly** markup annotation.\n   *\n   * @param page          - logical page info object (`PdfPageObject`)\n   * @param annotationPtr - pointer to the annotation whose quads are needed\n   * @param rects         - array of `Rect` objects (`[]` if the annotation has no quads)\n   * @returns `true` if the operation was successful\n   *\n   * @private\n   */\n  private syncQuadPointsAnno(page: PdfPageObject, annotPtr: number, rects: Rect[]): boolean {\n    const FS_QUADPOINTSF_SIZE = 8 * 4; // eight floats, 32 bytes\n    const pdf = this.pdfiumModule.pdfium;\n    const count = this.pdfiumModule.FPDFAnnot_CountAttachmentPoints(annotPtr);\n    const buf = this.malloc(FS_QUADPOINTSF_SIZE);\n\n    /** write one quad into `buf` in annotation space */\n    const writeQuad = (r: Rect) => {\n      const q = rectToQuad(r); // TL, TR, BR, BL\n      const p1 = this.convertDevicePointToPagePoint(page, q.p1);\n      const p2 = this.convertDevicePointToPagePoint(page, q.p2);\n      const p3 = this.convertDevicePointToPagePoint(page, q.p3); // BR\n      const p4 = this.convertDevicePointToPagePoint(page, q.p4); // BL\n\n      // PDF QuadPoints order: BL, BR, TL, TR (bottom-left, bottom-right, top-left, top-right)\n      pdf.setValue(buf + 0, p1.x, 'float'); // BL (bottom-left)\n      pdf.setValue(buf + 4, p1.y, 'float');\n\n      pdf.setValue(buf + 8, p2.x, 'float'); // BR (bottom-right)\n      pdf.setValue(buf + 12, p2.y, 'float');\n\n      pdf.setValue(buf + 16, p4.x, 'float'); // TL (top-left)\n      pdf.setValue(buf + 20, p4.y, 'float');\n\n      pdf.setValue(buf + 24, p3.x, 'float'); // TR (top-right)\n      pdf.setValue(buf + 28, p3.y, 'float');\n    };\n\n    /* ----------------------------------------------------------------------- */\n    /* 1. overwrite the quads that already exist                               */\n    const min = Math.min(count, rects.length);\n    for (let i = 0; i < min; i++) {\n      writeQuad(rects[i]);\n      if (!this.pdfiumModule.FPDFAnnot_SetAttachmentPoints(annotPtr, i, buf)) {\n        this.free(buf);\n        return false;\n      }\n    }\n\n    /* 2. append new quads if rects.length > count                             */\n    for (let i = count; i < rects.length; i++) {\n      writeQuad(rects[i]);\n      if (!this.pdfiumModule.FPDFAnnot_AppendAttachmentPoints(annotPtr, buf)) {\n        this.free(buf);\n        return false;\n      }\n    }\n\n    this.free(buf);\n    return true;\n  }\n\n  /**\n   * Read ink list from annotation\n   * @param page  - logical page info object (`PdfPageObject`)\n   * @param annotationPtr - pointer to the annotation whose ink list is needed\n   * @returns ink list\n   */\n  private getInkList(page: PdfPageObject, annotationPtr: number): PdfInkListObject[] {\n    const inkList: PdfInkListObject[] = [];\n\n    const count = this.pdfiumModule.FPDFAnnot_GetInkListCount(annotationPtr);\n    for (let i = 0; i < count; i++) {\n      const points: Position[] = [];\n      const pointsCount = this.pdfiumModule.FPDFAnnot_GetInkListPath(annotationPtr, i, 0, 0);\n      if (pointsCount > 0) {\n        const pointMemorySize = 8;\n        const pointsPtr = this.malloc(pointsCount * pointMemorySize);\n        this.pdfiumModule.FPDFAnnot_GetInkListPath(annotationPtr, i, pointsPtr, pointsCount);\n\n        for (let j = 0; j < pointsCount; j++) {\n          const pointX = this.pdfiumModule.pdfium.getValue(pointsPtr + j * 8, 'float');\n          const pointY = this.pdfiumModule.pdfium.getValue(pointsPtr + j * 8 + 4, 'float');\n          const { x, y } = this.convertPagePointToDevicePoint(page, {\n            x: pointX,\n            y: pointY,\n          });\n          points.push({ x, y });\n        }\n\n        this.free(pointsPtr);\n      }\n\n      inkList.push({ points });\n    }\n\n    return inkList;\n  }\n\n  /**\n   * Add ink list to annotation\n   * @param page  - logical page info object (`PdfPageObject`)\n   * @param annotationPtr - pointer to the annotation whose ink list is needed\n   * @param annotation - annotation object (`PdfInkAnnoObject`)\n   * @returns `true` if the operation was successful\n   */\n  private setInkList(\n    page: PdfPageObject,\n    annotationPtr: number,\n    inkList: PdfInkListObject[],\n  ): boolean {\n    for (const inkStroke of inkList) {\n      const inkPointsCount = inkStroke.points.length;\n      const inkPointsPtr = this.malloc(inkPointsCount * 8);\n      for (let i = 0; i < inkPointsCount; i++) {\n        const point = inkStroke.points[i];\n        const { x, y } = this.convertDevicePointToPagePoint(page, point);\n\n        this.pdfiumModule.pdfium.setValue(inkPointsPtr + i * 8, x, 'float');\n        this.pdfiumModule.pdfium.setValue(inkPointsPtr + i * 8 + 4, y, 'float');\n      }\n\n      if (\n        this.pdfiumModule.FPDFAnnot_AddInkStroke(annotationPtr, inkPointsPtr, inkPointsCount) === -1\n      ) {\n        this.free(inkPointsPtr);\n        return false;\n      }\n\n      this.free(inkPointsPtr);\n    }\n\n    return true;\n  }\n\n  /**\n   * Read pdf text annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf text annotation\n   *\n   * @private\n   */\n  private readPdfTextAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfTextAnnoObject | undefined {\n    const annoRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, annoRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n\n    const contents = this.getAnnotString(annotationPtr, 'Contents') || '';\n    const state = this.getAnnotString(annotationPtr, 'State') as PdfAnnotationState;\n    const stateModel = this.getAnnotString(annotationPtr, 'StateModel') as PdfAnnotationStateModel;\n    const webAlphaColor = this.resolveAnnotationColor(annotationPtr);\n    const inReplyToId = this.getInReplyToId(pagePtr, annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.TEXT,\n      contents,\n      ...webAlphaColor,\n      rect,\n      inReplyToId,\n      author,\n      modified,\n      state,\n      stateModel,\n    };\n  }\n\n  /**\n   * Read pdf freetext annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf freetext annotation\n   *\n   * @private\n   */\n  private readPdfFreeTextAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfFreeTextAnnoObject | undefined {\n    const annoRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, annoRect);\n    const contents = this.getAnnotString(annotationPtr, 'Contents') || '';\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const richContent = this.getAnnotRichContent(annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.FREETEXT,\n      richContent,\n      contents,\n      author,\n      modified,\n      rect,\n    };\n  }\n\n  /**\n   * Read pdf link annotation from pdf document\n   * @param page  - pdf page infor\n   * @param docPtr - pointer to pdf document object\n   * @param pagePtr - pointer to pdf page object\n   * @param  textPagePtr - pointer to pdf text page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf link annotation\n   *\n   * @private\n   */\n  private readPdfLinkAnno(\n    page: PdfPageObject,\n    docPtr: number,\n    pagePtr: number,\n    textPagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfLinkAnnoObject | undefined {\n    const linkPtr = this.pdfiumModule.FPDFAnnot_GetLink(annotationPtr);\n    if (!linkPtr) {\n      return;\n    }\n\n    const annoRect = this.readPageAnnoRect(annotationPtr);\n    const { left, top, right, bottom } = annoRect;\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, annoRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n\n    const utf16Length = this.pdfiumModule.FPDFText_GetBoundedText(\n      textPagePtr,\n      left,\n      top,\n      right,\n      bottom,\n      0,\n      0,\n    );\n    const bytesCount = (utf16Length + 1) * 2; // include NIL\n    const textBufferPtr = this.malloc(bytesCount);\n    this.pdfiumModule.FPDFText_GetBoundedText(\n      textPagePtr,\n      left,\n      top,\n      right,\n      bottom,\n      textBufferPtr,\n      utf16Length,\n    );\n    const text = this.pdfiumModule.pdfium.UTF16ToString(textBufferPtr);\n    this.free(textBufferPtr);\n\n    const target = this.readPdfLinkAnnoTarget(\n      docPtr,\n      () => {\n        return this.pdfiumModule.FPDFLink_GetAction(linkPtr);\n      },\n      () => {\n        return this.pdfiumModule.FPDFLink_GetDest(docPtr, linkPtr);\n      },\n    );\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.LINK,\n      text,\n      target,\n      rect,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf widget annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param formHandle - form handle\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf widget annotation\n   *\n   * @private\n   */\n  private readPdfWidgetAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    formHandle: number,\n    index: number,\n  ): PdfWidgetAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n\n    const field = this.readPdfWidgetAnnoField(formHandle, annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.WIDGET,\n      rect,\n      field,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf file attachment annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf file attachment annotation\n   *\n   * @private\n   */\n  private readPdfFileAttachmentAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfFileAttachmentAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.FILEATTACHMENT,\n      rect,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf ink annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf ink annotation\n   *\n   * @private\n   */\n  private readPdfInkAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfInkAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const webAlphaColor = this.resolveAnnotationColor(annotationPtr);\n    const { width: strokeWidth } = this.getBorderStyle(annotationPtr);\n    const inkList = this.getInkList(page, annotationPtr);\n    const blendMode = this.pdfiumModule.EPDFAnnot_GetBlendMode(annotationPtr);\n    const intent = this.getAnnotIntent(annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.INK,\n      ...(intent && { intent }),\n      blendMode,\n      ...webAlphaColor,\n      strokeWidth,\n      rect,\n      inkList,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf polygon annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf polygon annotation\n   *\n   * @private\n   */\n  private readPdfPolygonAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfPolygonAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const vertices = this.readPdfAnnoVertices(page, pagePtr, annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.POLYGON,\n      rect,\n      vertices,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf polyline annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf polyline annotation\n   *\n   * @private\n   */\n  private readPdfPolylineAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfPolylineAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const vertices = this.readPdfAnnoVertices(page, pagePtr, annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.POLYLINE,\n      rect,\n      vertices,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf line annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf line annotation\n   *\n   * @private\n   */\n  private readPdfLineAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfLineAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const startPointPtr = this.malloc(8);\n    const endPointPtr = this.malloc(8);\n\n    this.pdfiumModule.FPDFAnnot_GetLine(annotationPtr, startPointPtr, endPointPtr);\n\n    const startPointX = this.pdfiumModule.pdfium.getValue(startPointPtr, 'float');\n    const startPointY = this.pdfiumModule.pdfium.getValue(startPointPtr + 4, 'float');\n    const startPoint = this.convertPagePointToDevicePoint(page, {\n      x: startPointX,\n      y: startPointY,\n    });\n\n    const endPointX = this.pdfiumModule.pdfium.getValue(endPointPtr, 'float');\n    const endPointY = this.pdfiumModule.pdfium.getValue(endPointPtr + 4, 'float');\n    const endPoint = this.convertPagePointToDevicePoint(page, {\n      x: endPointX,\n      y: endPointY,\n    });\n\n    this.free(startPointPtr);\n    this.free(endPointPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.LINE,\n      rect,\n      startPoint,\n      endPoint,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf highlight annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf highlight annotation\n   *\n   * @private\n   */\n  private readPdfHighlightAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfHighlightAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const segmentRects = this.getQuadPointsAnno(page, annotationPtr);\n    const webAlphaColor = this.resolveAnnotationColor(annotationPtr);\n    const blendMode = this.pdfiumModule.EPDFAnnot_GetBlendMode(annotationPtr);\n\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const contents = this.getAnnotString(annotationPtr, 'Contents') || '';\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      blendMode,\n      type: PdfAnnotationSubtype.HIGHLIGHT,\n      rect,\n      contents,\n      segmentRects,\n      ...webAlphaColor,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf underline annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf underline annotation\n   *\n   * @private\n   */\n  private readPdfUnderlineAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfUnderlineAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const segmentRects = this.getQuadPointsAnno(page, annotationPtr);\n    const contents = this.getAnnotString(annotationPtr, 'Contents') || '';\n    const webAlphaColor = this.resolveAnnotationColor(annotationPtr);\n    const blendMode = this.pdfiumModule.EPDFAnnot_GetBlendMode(annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      blendMode,\n      type: PdfAnnotationSubtype.UNDERLINE,\n      rect,\n      contents,\n      segmentRects,\n      ...webAlphaColor,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read strikeout annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf strikeout annotation\n   *\n   * @private\n   */\n  private readPdfStrikeOutAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfStrikeOutAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const segmentRects = this.getQuadPointsAnno(page, annotationPtr);\n    const contents = this.getAnnotString(annotationPtr, 'Contents') || '';\n    const webAlphaColor = this.resolveAnnotationColor(annotationPtr);\n    const blendMode = this.pdfiumModule.EPDFAnnot_GetBlendMode(annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      blendMode,\n      type: PdfAnnotationSubtype.STRIKEOUT,\n      rect,\n      contents,\n      segmentRects,\n      ...webAlphaColor,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf squiggly annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf squiggly annotation\n   *\n   * @private\n   */\n  private readPdfSquigglyAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfSquigglyAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const segmentRects = this.getQuadPointsAnno(page, annotationPtr);\n    const contents = this.getAnnotString(annotationPtr, 'Contents') || '';\n    const webAlphaColor = this.resolveAnnotationColor(annotationPtr);\n    const blendMode = this.pdfiumModule.EPDFAnnot_GetBlendMode(annotationPtr);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      blendMode,\n      type: PdfAnnotationSubtype.SQUIGGLY,\n      rect,\n      contents,\n      segmentRects,\n      ...webAlphaColor,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf caret annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf caret annotation\n   *\n   * @private\n   */\n  private readPdfCaretAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfCaretAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.CARET,\n      rect,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf stamp annotation\n   * @param docPtr - pointer to pdf document object\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf stamp annotation\n   *\n   * @private\n   */\n  private readPdfStampAnno(\n    docPtr: number,\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfStampAnnoObject | undefined {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const contents: PdfStampAnnoObject['contents'] = [];\n\n    const objectCount = this.pdfiumModule.FPDFAnnot_GetObjectCount(annotationPtr);\n    for (let i = 0; i < objectCount; i++) {\n      const annotationObjectPtr = this.pdfiumModule.FPDFAnnot_GetObject(annotationPtr, i);\n\n      const pageObj = this.readPdfPageObject(annotationObjectPtr);\n      if (pageObj) {\n        contents.push(pageObj);\n      }\n    }\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.STAMP,\n      rect,\n      contents,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Read pdf object in pdf page\n   * @param pageObjectPtr  - pointer to pdf object in page\n   * @returns pdf object in page\n   *\n   * @private\n   */\n  private readPdfPageObject(pageObjectPtr: number) {\n    const type = this.pdfiumModule.FPDFPageObj_GetType(pageObjectPtr) as PdfPageObjectType;\n    switch (type) {\n      case PdfPageObjectType.PATH:\n        return this.readPathObject(pageObjectPtr);\n      case PdfPageObjectType.IMAGE:\n        return this.readImageObject(pageObjectPtr);\n      case PdfPageObjectType.FORM:\n        return this.readFormObject(pageObjectPtr);\n    }\n  }\n\n  /**\n   * Read pdf path object\n   * @param pathObjectPtr  - pointer to pdf path object in page\n   * @returns pdf path object\n   *\n   * @private\n   */\n  private readPathObject(pathObjectPtr: number): PdfPathObject {\n    const segmentCount = this.pdfiumModule.FPDFPath_CountSegments(pathObjectPtr);\n\n    const leftPtr = this.malloc(4);\n    const bottomPtr = this.malloc(4);\n    const rightPtr = this.malloc(4);\n    const topPtr = this.malloc(4);\n    this.pdfiumModule.FPDFPageObj_GetBounds(pathObjectPtr, leftPtr, bottomPtr, rightPtr, topPtr);\n    const left = this.pdfiumModule.pdfium.getValue(leftPtr, 'float');\n    const bottom = this.pdfiumModule.pdfium.getValue(bottomPtr, 'float');\n    const right = this.pdfiumModule.pdfium.getValue(rightPtr, 'float');\n    const top = this.pdfiumModule.pdfium.getValue(topPtr, 'float');\n    const bounds = { left, bottom, right, top };\n    this.free(leftPtr);\n    this.free(bottomPtr);\n    this.free(rightPtr);\n    this.free(topPtr);\n    const segments: PdfSegmentObject[] = [];\n    for (let i = 0; i < segmentCount; i++) {\n      const segment = this.readPdfSegment(pathObjectPtr, i);\n      segments.push(segment);\n    }\n\n    const matrix = this.readPdfPageObjectTransformMatrix(pathObjectPtr);\n\n    return {\n      type: PdfPageObjectType.PATH,\n      bounds,\n      segments,\n      matrix,\n    };\n  }\n\n  /**\n   * Read segment of pdf path object\n   * @param annotationObjectPtr - pointer to pdf path object\n   * @param segmentIndex - index of segment\n   * @returns pdf segment in pdf path\n   *\n   * @private\n   */\n  private readPdfSegment(annotationObjectPtr: number, segmentIndex: number): PdfSegmentObject {\n    const segmentPtr = this.pdfiumModule.FPDFPath_GetPathSegment(annotationObjectPtr, segmentIndex);\n    const segmentType = this.pdfiumModule.FPDFPathSegment_GetType(segmentPtr);\n    const isClosed = this.pdfiumModule.FPDFPathSegment_GetClose(segmentPtr);\n    const pointXPtr = this.malloc(4);\n    const pointYPtr = this.malloc(4);\n    this.pdfiumModule.FPDFPathSegment_GetPoint(segmentPtr, pointXPtr, pointYPtr);\n    const pointX = this.pdfiumModule.pdfium.getValue(pointXPtr, 'float');\n    const pointY = this.pdfiumModule.pdfium.getValue(pointYPtr, 'float');\n    this.free(pointXPtr);\n    this.free(pointYPtr);\n\n    return {\n      type: segmentType,\n      point: { x: pointX, y: pointY },\n      isClosed,\n    };\n  }\n\n  /**\n   * Read pdf image object from pdf document\n   * @param pageObjectPtr  - pointer to pdf image object in page\n   * @returns pdf image object\n   *\n   * @private\n   */\n  private readImageObject(imageObjectPtr: number): PdfImageObject {\n    const bitmapPtr = this.pdfiumModule.FPDFImageObj_GetBitmap(imageObjectPtr);\n    const bitmapBufferPtr = this.pdfiumModule.FPDFBitmap_GetBuffer(bitmapPtr);\n    const bitmapWidth = this.pdfiumModule.FPDFBitmap_GetWidth(bitmapPtr);\n    const bitmapHeight = this.pdfiumModule.FPDFBitmap_GetHeight(bitmapPtr);\n    const format = this.pdfiumModule.FPDFBitmap_GetFormat(bitmapPtr) as BitmapFormat;\n\n    const pixelCount = bitmapWidth * bitmapHeight;\n    const bytesPerPixel = 4;\n    const array = new Uint8ClampedArray(pixelCount * bytesPerPixel);\n    for (let i = 0; i < pixelCount; i++) {\n      switch (format) {\n        case BitmapFormat.Bitmap_BGR:\n          {\n            const blue = this.pdfiumModule.pdfium.getValue(bitmapBufferPtr + i * 3, 'i8');\n            const green = this.pdfiumModule.pdfium.getValue(bitmapBufferPtr + i * 3 + 1, 'i8');\n            const red = this.pdfiumModule.pdfium.getValue(bitmapBufferPtr + i * 3 + 2, 'i8');\n            array[i * bytesPerPixel] = red;\n            array[i * bytesPerPixel + 1] = green;\n            array[i * bytesPerPixel + 2] = blue;\n            array[i * bytesPerPixel + 3] = 100;\n          }\n          break;\n      }\n    }\n\n    const imageData = new ImageData(array, bitmapWidth, bitmapHeight);\n    const matrix = this.readPdfPageObjectTransformMatrix(imageObjectPtr);\n\n    return {\n      type: PdfPageObjectType.IMAGE,\n      imageData,\n      matrix,\n    };\n  }\n\n  /**\n   * Read form object from pdf document\n   * @param formObjectPtr  - pointer to pdf form object in page\n   * @returns pdf form object\n   *\n   * @private\n   */\n  private readFormObject(formObjectPtr: number): PdfFormObject {\n    const objectCount = this.pdfiumModule.FPDFFormObj_CountObjects(formObjectPtr);\n    const objects: (PdfFormObject | PdfImageObject | PdfPathObject)[] = [];\n    for (let i = 0; i < objectCount; i++) {\n      const pageObjectPtr = this.pdfiumModule.FPDFFormObj_GetObject(formObjectPtr, i);\n      const pageObj = this.readPdfPageObject(pageObjectPtr);\n      if (pageObj) {\n        objects.push(pageObj);\n      }\n    }\n    const matrix = this.readPdfPageObjectTransformMatrix(formObjectPtr);\n\n    return {\n      type: PdfPageObjectType.FORM,\n      objects,\n      matrix,\n    };\n  }\n\n  /**\n   * Read pdf object in pdf page\n   * @param pageObjectPtr  - pointer to pdf object in page\n   * @returns pdf object in page\n   *\n   * @private\n   */\n  private readPdfPageObjectTransformMatrix(pageObjectPtr: number): PdfTransformMatrix {\n    const matrixPtr = this.malloc(4 * 6);\n    if (this.pdfiumModule.FPDFPageObj_GetMatrix(pageObjectPtr, matrixPtr)) {\n      const a = this.pdfiumModule.pdfium.getValue(matrixPtr, 'float');\n      const b = this.pdfiumModule.pdfium.getValue(matrixPtr + 4, 'float');\n      const c = this.pdfiumModule.pdfium.getValue(matrixPtr + 8, 'float');\n      const d = this.pdfiumModule.pdfium.getValue(matrixPtr + 12, 'float');\n      const e = this.pdfiumModule.pdfium.getValue(matrixPtr + 16, 'float');\n      const f = this.pdfiumModule.pdfium.getValue(matrixPtr + 20, 'float');\n      this.free(matrixPtr);\n\n      return { a, b, c, d, e, f };\n    }\n\n    this.free(matrixPtr);\n\n    return { a: 1, b: 0, c: 0, d: 1, e: 0, f: 0 };\n  }\n\n  /**\n   * Return the stroke-width declared in the annotation’s /Border or /BS entry.\n   * Falls back to 1 pt when nothing is defined.\n   *\n   * @param annotationPtr - pointer to pdf annotation\n   * @returns stroke-width\n   *\n   * @private\n   */\n  private getStrokeWidth(annotationPtr: number): number {\n    // FPDFAnnot_GetBorder(annot, &hRadius, &vRadius, &borderWidth)\n    const hPtr = this.malloc(4);\n    const vPtr = this.malloc(4);\n    const wPtr = this.malloc(4);\n\n    const ok = this.pdfiumModule.FPDFAnnot_GetBorder(annotationPtr, hPtr, vPtr, wPtr);\n    const width = ok ? this.pdfiumModule.pdfium.getValue(wPtr, 'float') : 1; // default 1 pt\n\n    this.free(hPtr);\n    this.free(vPtr);\n    this.free(wPtr);\n\n    return width;\n  }\n\n  /**\n   * Fetches the `/F` flag bit-field from an annotation.\n   *\n   * @param annotationPtr pointer to an `FPDF_ANNOTATION`\n   * @returns `{ raw, flags }`\n   *          • `raw`   – the 32-bit integer returned by PDFium\n   *          • `flags` – object with individual booleans\n   */\n  private getAnnotationFlags(annotationPtr: number): PdfAnnotationFlagName[] {\n    const rawFlags = this.pdfiumModule.FPDFAnnot_GetFlags(annotationPtr); // number\n\n    return flagsToNames(rawFlags);\n  }\n\n  /**\n   * Read circle annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf circle annotation\n   *\n   * @private\n   */\n  private readPdfCircleAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfCircleAnnoObject {\n    const flags = this.getAnnotationFlags(annotationPtr);\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const { color, opacity } = this.resolveAnnotationColor(\n      annotationPtr,\n      PdfAnnotationColorType.InteriorColor,\n    );\n    const { color: strokeColor } = this.resolveAnnotationColor(annotationPtr);\n    let { style: strokeStyle, width: strokeWidth } = this.getBorderStyle(annotationPtr);\n\n    let cloudyBorderIntensity: number | undefined;\n    let cloudyBorderInset: number[] | undefined;\n    if (\n      strokeStyle === PdfAnnotationBorderStyle.CLOUDY ||\n      strokeStyle === PdfAnnotationBorderStyle.UNKNOWN\n    ) {\n      const { ok: hasEffect, intensity } = this.getBorderEffect(annotationPtr);\n\n      if (hasEffect) {\n        cloudyBorderIntensity = intensity;\n        strokeStyle = PdfAnnotationBorderStyle.CLOUDY;\n        const {\n          ok: hasInset,\n          left,\n          top,\n          right,\n          bottom,\n        } = this.getRectangleDifferences(annotationPtr);\n        if (hasInset) cloudyBorderInset = [left, top, right, bottom];\n      }\n    }\n\n    let strokeDashArray: number[] | undefined;\n    if (strokeStyle === PdfAnnotationBorderStyle.DASHED) {\n      const { ok, pattern } = this.getBorderDashPattern(annotationPtr);\n      if (ok) {\n        strokeDashArray = pattern;\n      }\n    }\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.CIRCLE,\n      flags,\n      color,\n      opacity,\n      strokeWidth,\n      strokeColor,\n      strokeStyle,\n      rect,\n      author,\n      modified,\n      ...(cloudyBorderIntensity !== undefined && { cloudyBorderIntensity }),\n      ...(cloudyBorderInset !== undefined && { cloudyBorderInset }),\n      ...(strokeDashArray !== undefined && { strokeDashArray }),\n    };\n  }\n\n  /**\n   * Read square annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf square annotation\n   *\n   * @private\n   */\n  private readPdfSquareAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n    index: number,\n  ): PdfSquareAnnoObject {\n    const flags = this.getAnnotationFlags(annotationPtr);\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n    const { color, opacity } = this.resolveAnnotationColor(\n      annotationPtr,\n      PdfAnnotationColorType.InteriorColor,\n    );\n    const { color: strokeColor } = this.resolveAnnotationColor(annotationPtr);\n    let { style: strokeStyle, width: strokeWidth } = this.getBorderStyle(annotationPtr);\n\n    let cloudyBorderIntensity: number | undefined;\n    let cloudyBorderInset: number[] | undefined;\n    if (\n      strokeStyle === PdfAnnotationBorderStyle.CLOUDY ||\n      strokeStyle === PdfAnnotationBorderStyle.UNKNOWN\n    ) {\n      const { ok: hasEffect, intensity } = this.getBorderEffect(annotationPtr);\n\n      if (hasEffect) {\n        cloudyBorderIntensity = intensity;\n        strokeStyle = PdfAnnotationBorderStyle.CLOUDY;\n        const {\n          ok: hasInset,\n          left,\n          top,\n          right,\n          bottom,\n        } = this.getRectangleDifferences(annotationPtr);\n        if (hasInset) cloudyBorderInset = [left, top, right, bottom];\n      }\n    }\n\n    let strokeDashArray: number[] | undefined;\n    if (strokeStyle === PdfAnnotationBorderStyle.DASHED) {\n      const { ok, pattern } = this.getBorderDashPattern(annotationPtr);\n      if (ok) {\n        strokeDashArray = pattern;\n      }\n    }\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type: PdfAnnotationSubtype.SQUARE,\n      flags,\n      color,\n      opacity,\n      strokeColor,\n      strokeWidth,\n      strokeStyle,\n      rect,\n      author,\n      modified,\n      ...(cloudyBorderIntensity !== undefined && { cloudyBorderIntensity }),\n      ...(cloudyBorderInset !== undefined && { cloudyBorderInset }),\n      ...(strokeDashArray !== undefined && { strokeDashArray }),\n    };\n  }\n\n  /**\n   * Read basic info of unsupported pdf annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param type - type of annotation\n   * @param annotationPtr - pointer to pdf annotation\n   * @param index  - index of annotation in the pdf page\n   * @returns pdf annotation\n   *\n   * @private\n   */\n  private readPdfAnno(\n    page: PdfPageObject,\n    pagePtr: number,\n    type: PdfUnsupportedAnnoObject['type'],\n    annotationPtr: number,\n    index: number,\n  ): PdfUnsupportedAnnoObject {\n    const pageRect = this.readPageAnnoRect(annotationPtr);\n    const rect = this.convertPageRectToDeviceRect(page, pagePtr, pageRect);\n    const author = this.getAnnotString(annotationPtr, 'T');\n    const modifiedRaw = this.getAnnotString(annotationPtr, 'M');\n    const modified = pdfDateToDate(modifiedRaw);\n\n    return {\n      pageIndex: page.index,\n      id: index,\n      type,\n      rect,\n      author,\n      modified,\n    };\n  }\n\n  /**\n   * Resolve `/IRT` → parent-annotation index on the same page.\n   *\n   * @param pagePtr        - pointer to FPDF_PAGE\n   * @param annotationPtr  - pointer to FPDF_ANNOTATION\n   * @returns index (`0…count-1`) or `undefined` when the annotation is *not* a reply\n   *\n   * @private\n   */\n  private getInReplyToId(pagePtr: number, annotationPtr: number): number | undefined {\n    const parentPtr = this.pdfiumModule.FPDFAnnot_GetLinkedAnnot(annotationPtr, 'IRT');\n    if (!parentPtr) return;\n\n    // PDFium ≥ 5100 – returns −1 when annot not found on page\n    const idx = this.pdfiumModule.FPDFPage_GetAnnotIndex(pagePtr, parentPtr);\n    return idx >= 0 ? idx : undefined;\n  }\n\n  /**\n   * Fetch a string value (`/T`, `/M`, `/State`, …) from an annotation.\n   *\n   * @returns decoded UTF-8 string or `undefined` when the key is absent\n   *\n   * @private\n   */\n  private getAnnotString(annotationPtr: number, key: string): string | undefined {\n    const len = this.pdfiumModule.FPDFAnnot_GetStringValue(annotationPtr, key, 0, 0);\n    if (len === 0) return;\n\n    const bytes = (len + 1) * 2;\n    const ptr = this.malloc(bytes);\n\n    this.pdfiumModule.FPDFAnnot_GetStringValue(annotationPtr, key, ptr, bytes);\n    const value = this.pdfiumModule.pdfium.UTF16ToString(ptr);\n    this.free(ptr);\n\n    return value || undefined;\n  }\n\n  /**\n   * Fetches the /IT (Intent) name from an annotation as a UTF-8 JS string.\n   *\n   * Mirrors getAnnotString(): calls EPDFAnnot_GetIntent twice (length probe + copy).\n   * Returns `undefined` if no intent present.\n   */\n  private getAnnotIntent(annotationPtr: number): string | undefined {\n    const len = this.pdfiumModule.EPDFAnnot_GetIntent(annotationPtr, 0, 0);\n    if (len === 0) return;\n\n    const codeUnits = len + 1;\n    const bytes = codeUnits * 2;\n    const ptr = this.malloc(bytes);\n\n    this.pdfiumModule.EPDFAnnot_GetIntent(annotationPtr, ptr, bytes);\n    const value = this.pdfiumModule.pdfium.UTF16ToString(ptr);\n\n    this.free(ptr);\n\n    return value && value !== 'undefined' ? value : undefined;\n  }\n\n  /**\n   * Returns the rich‑content string stored in the annotation’s `/RC` entry.\n   *\n   * Works like `getAnnotIntent()`: first probe for length, then copy.\n   * `undefined` when the annotation has no rich content.\n   */\n  private getAnnotRichContent(annotationPtr: number): string | undefined {\n    // First call → number of UTF‑16 code units (excluding NUL)\n    const len = this.pdfiumModule.EPDFAnnot_GetRichContent(annotationPtr, 0, 0);\n    if (len === 0) return;\n\n    // +1 for the implicit NUL added by PDFium → bytes = 2 × code units\n    const codeUnits = len + 1;\n    const bytes = codeUnits * 2;\n    const ptr = this.malloc(bytes);\n\n    this.pdfiumModule.EPDFAnnot_GetRichContent(annotationPtr, ptr, bytes);\n    const value = this.pdfiumModule.pdfium.UTF16ToString(ptr);\n\n    this.free(ptr);\n\n    return value || undefined;\n  }\n\n  /**\n   * Set a string value (`/T`, `/M`, `/State`, …) to an annotation.\n   *\n   * @returns `true` if the operation was successful\n   *\n   * @private\n   */\n  private setAnnotString(annotationPtr: number, key: string, value: string): boolean {\n    const bytes = 2 * (value.length + 1);\n    const ptr = this.malloc(bytes);\n    this.pdfiumModule.pdfium.stringToUTF16(value, ptr, bytes);\n    const ok = this.pdfiumModule.FPDFAnnot_SetStringValue(annotationPtr, key, ptr);\n    this.free(ptr);\n    return ok;\n  }\n\n  /**\n   * Read vertices of pdf annotation\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param annotationPtr - pointer to pdf annotation\n   * @returns vertices of pdf annotation\n   *\n   * @private\n   */\n  private readPdfAnnoVertices(\n    page: PdfPageObject,\n    pagePtr: number,\n    annotationPtr: number,\n  ): Position[] {\n    const vertices: Position[] = [];\n    const count = this.pdfiumModule.FPDFAnnot_GetVertices(annotationPtr, 0, 0);\n    const pointMemorySize = 8;\n    const pointsPtr = this.malloc(count * pointMemorySize);\n    this.pdfiumModule.FPDFAnnot_GetVertices(annotationPtr, pointsPtr, count);\n    for (let i = 0; i < count; i++) {\n      const pointX = this.pdfiumModule.pdfium.getValue(pointsPtr + i * pointMemorySize, 'float');\n      const pointY = this.pdfiumModule.pdfium.getValue(\n        pointsPtr + i * pointMemorySize + 4,\n        'float',\n      );\n\n      const { x, y } = this.convertPagePointToDevicePoint(page, {\n        x: pointX,\n        y: pointY,\n      });\n      vertices.push({\n        x,\n        y,\n      });\n    }\n    this.free(pointsPtr);\n\n    return vertices;\n  }\n\n  /**\n   * Read the target of pdf bookmark\n   * @param docPtr - pointer to pdf document object\n   * @param getActionPtr - callback function to retrive the pointer of action\n   * @param getDestinationPtr - callback function to retrive the pointer of destination\n   * @returns target of pdf bookmark\n   *\n   * @private\n   */\n  private readPdfBookmarkTarget(\n    docPtr: number,\n    getActionPtr: () => number,\n    getDestinationPtr: () => number,\n  ): PdfLinkTarget | undefined {\n    const actionPtr = getActionPtr();\n    if (actionPtr) {\n      const action = this.readPdfAction(docPtr, actionPtr);\n\n      return {\n        type: 'action',\n        action,\n      };\n    } else {\n      const destinationPtr = getDestinationPtr();\n      if (destinationPtr) {\n        const destination = this.readPdfDestination(docPtr, destinationPtr);\n\n        return {\n          type: 'destination',\n          destination,\n        };\n      }\n    }\n  }\n\n  /**\n   * Read field of pdf widget annotation\n   * @param formHandle - form handle\n   * @param annotationPtr - pointer to pdf annotation\n   * @returns field of pdf widget annotation\n   *\n   * @private\n   */\n  private readPdfWidgetAnnoField(formHandle: number, annotationPtr: number): PdfWidgetAnnoField {\n    const flag = this.pdfiumModule.FPDFAnnot_GetFormFieldFlags(\n      formHandle,\n      annotationPtr,\n    ) as PDF_FORM_FIELD_FLAG;\n\n    const type = this.pdfiumModule.FPDFAnnot_GetFormFieldType(\n      formHandle,\n      annotationPtr,\n    ) as PDF_FORM_FIELD_TYPE;\n\n    const name = readString(\n      this.pdfiumModule.pdfium,\n      (buffer: number, bufferLength) => {\n        return this.pdfiumModule.FPDFAnnot_GetFormFieldName(\n          formHandle,\n          annotationPtr,\n          buffer,\n          bufferLength,\n        );\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n\n    const alternateName = readString(\n      this.pdfiumModule.pdfium,\n      (buffer: number, bufferLength) => {\n        return this.pdfiumModule.FPDFAnnot_GetFormFieldAlternateName(\n          formHandle,\n          annotationPtr,\n          buffer,\n          bufferLength,\n        );\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n\n    const value = readString(\n      this.pdfiumModule.pdfium,\n      (buffer: number, bufferLength) => {\n        return this.pdfiumModule.FPDFAnnot_GetFormFieldValue(\n          formHandle,\n          annotationPtr,\n          buffer,\n          bufferLength,\n        );\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n\n    const options: PdfWidgetAnnoOption[] = [];\n    if (type === PDF_FORM_FIELD_TYPE.COMBOBOX || type === PDF_FORM_FIELD_TYPE.LISTBOX) {\n      const count = this.pdfiumModule.FPDFAnnot_GetOptionCount(formHandle, annotationPtr);\n      for (let i = 0; i < count; i++) {\n        const label = readString(\n          this.pdfiumModule.pdfium,\n          (buffer: number, bufferLength) => {\n            return this.pdfiumModule.FPDFAnnot_GetOptionLabel(\n              formHandle,\n              annotationPtr,\n              i,\n              buffer,\n              bufferLength,\n            );\n          },\n          this.pdfiumModule.pdfium.UTF16ToString,\n        );\n        const isSelected = this.pdfiumModule.FPDFAnnot_IsOptionSelected(\n          formHandle,\n          annotationPtr,\n          i,\n        );\n        options.push({\n          label,\n          isSelected,\n        });\n      }\n    }\n\n    let isChecked = false;\n    if (type === PDF_FORM_FIELD_TYPE.CHECKBOX || type === PDF_FORM_FIELD_TYPE.RADIOBUTTON) {\n      isChecked = this.pdfiumModule.FPDFAnnot_IsChecked(formHandle, annotationPtr);\n    }\n\n    return {\n      flag,\n      type,\n      name,\n      alternateName,\n      value,\n      isChecked,\n      options,\n    };\n  }\n\n  /**\n   * {@inheritDoc @embedpdf/models!PdfEngine.renderAnnotation}\n   *\n   * @public\n   */\n  renderAnnotation(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number = 1, // device-pixel-ratio (canvas)\n    mode: AppearanceMode = AppearanceMode.Normal,\n    imageType: ImageConversionTypes = 'image/webp',\n  ): PdfTask<T> {\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'renderAnnotation',\n      doc,\n      page,\n      annotation,\n      scaleFactor,\n      rotation,\n      dpr,\n      mode,\n      imageType,\n    );\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `RenderAnnotation`,\n      'Begin',\n      `${doc.id}-${page.index}-${annotation.id}`,\n    );\n    const task = new Task<T, PdfErrorReason>();\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `RenderAnnotation`,\n        'End',\n        `${doc.id}-${page.index}-${annotation.id}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.DocNotOpen,\n        message: 'document does not open',\n      });\n    }\n\n    /* ── 1. grab native handles ───────────────────────────────────────── */\n    const pageCtx = ctx.acquirePage(page.index);\n    const annotPtr = this.pdfiumModule.FPDFPage_GetAnnot(pageCtx.pagePtr, annotation.id);\n    if (!annotPtr) {\n      pageCtx.release();\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `RenderAnnotation`,\n        'End',\n        `${doc.id}-${page.index}-${annotation.id}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.NotFound,\n        message: 'annotation not found',\n      });\n    }\n\n    const finalScale = scaleFactor * dpr;\n    /* ── 2. decide bitmap size (integer pixels) ──────────────────────── */\n    const annotRect = annotation.rect;\n    const bitmapRect = toIntRect(transformRect(page.size, annotRect, rotation, finalScale));\n\n    const format = BitmapFormat.Bitmap_BGRA;\n    const bytesPerPixel = 4;\n    const bitmapHeapLength = bitmapRect.size.width * bitmapRect.size.height * bytesPerPixel;\n    const bitmapHeapPtr = this.malloc(bitmapHeapLength);\n    const bitmapPtr = this.pdfiumModule.FPDFBitmap_CreateEx(\n      bitmapRect.size.width,\n      bitmapRect.size.height,\n      format,\n      bitmapHeapPtr,\n      bitmapRect.size.width * bytesPerPixel,\n    );\n    this.pdfiumModule.FPDFBitmap_FillRect(\n      bitmapPtr,\n      0,\n      0,\n      bitmapRect.size.width,\n      bitmapRect.size.height,\n      0x00000000,\n    );\n\n    const matrix = makeMatrix(annotation.rect, rotation, finalScale);\n\n    // Allocate memory for the matrix on the wasm heap and write to it\n    const matrixSize = 6 * 4;\n    const matrixPtr = this.malloc(matrixSize);\n    const matrixView = new Float32Array(this.pdfiumModule.pdfium.HEAPF32.buffer, matrixPtr, 6);\n    matrixView.set([matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f]);\n\n    /* ── 5. call the native helper with the new matrix ───────────────── */\n    const FLAGS = RenderFlag.REVERSE_BYTE_ORDER;\n    const ok = !!this.pdfiumModule.EPDF_RenderAnnotBitmap(\n      bitmapPtr,\n      pageCtx.pagePtr,\n      annotPtr,\n      mode,\n      matrixPtr,\n      FLAGS,\n    );\n\n    /* ── 6. tear down native resources ───────────────────────────────── */\n    this.free(matrixPtr); // Free the matrix memory\n    this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n    this.pdfiumModule.FPDFPage_CloseAnnot(annotPtr);\n    pageCtx.release();\n\n    if (!ok) {\n      this.free(bitmapHeapPtr);\n      this.logger.perf(\n        LOG_SOURCE,\n        LOG_CATEGORY,\n        `RenderAnnotation`,\n        'End',\n        `${doc.id}-${page.index}-${annotation.id}`,\n      );\n      return PdfTaskHelper.reject({\n        code: PdfErrorCode.Unknown,\n        message: 'EPDF_RenderAnnotBitmap failed',\n      });\n    }\n\n    /* ── 6. copy out + convert to Blob (reuse existing converter) ─────── */\n    const data = this.pdfiumModule.pdfium.HEAPU8.subarray(\n      bitmapHeapPtr,\n      bitmapHeapPtr + bitmapHeapLength,\n    );\n\n    const imageData: PdfImage = {\n      data: new Uint8ClampedArray(data),\n      width: bitmapRect.size.width,\n      height: bitmapRect.size.height,\n    };\n\n    this.free(bitmapHeapPtr);\n\n    this.logger.perf(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      `RenderAnnotation`,\n      'End',\n      `${doc.id}-${page.index}-${annotation.id}`,\n    );\n\n    this.imageDataConverter(imageData, imageType)\n      .then((blob) => task.resolve(blob))\n      .catch((err) => task.reject({ code: PdfErrorCode.Unknown, message: String(err) }));\n\n    return task;\n  }\n\n  /**\n   * render rectangle of pdf page to image\n   * @param docPtr - pointer to pdf document object\n   * @param page  - pdf page infor\n   * @param rect - rectangle info\n   * @param scaleFactor  - factor of scalling\n   * @param rotation  - rotation angle\n   * @param options - render options\n   * @returns image data\n   *\n   * @private\n   */\n  private renderPageRectToImageData(\n    ctx: DocumentContext,\n    page: PdfPageObject,\n    rect: Rect,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n    options: PdfRenderOptions,\n  ) {\n    const format = BitmapFormat.Bitmap_BGRA;\n    const bytesPerPixel = 4;\n\n    // Round the transformed dimensions to whole pixels\n    const rectSize = toIntRect(transformRect(page.size, rect, rotation, scaleFactor * dpr));\n    const pageSize = toIntSize(transformSize(page.size, rotation, scaleFactor * dpr));\n\n    const bitmapHeapLength = rectSize.size.width * rectSize.size.height * bytesPerPixel;\n    const bitmapHeapPtr = this.malloc(bitmapHeapLength);\n    const bitmapPtr = this.pdfiumModule.FPDFBitmap_CreateEx(\n      rectSize.size.width,\n      rectSize.size.height,\n      format,\n      bitmapHeapPtr,\n      rectSize.size.width * bytesPerPixel,\n    );\n\n    this.pdfiumModule.FPDFBitmap_FillRect(\n      bitmapPtr,\n      0,\n      0,\n      rectSize.size.width,\n      rectSize.size.height,\n      0xffffffff,\n    );\n\n    let flags = RenderFlag.REVERSE_BYTE_ORDER;\n    if (options?.withAnnotations) {\n      flags = flags | RenderFlag.ANNOT;\n    }\n\n    const pageCtx = ctx.acquirePage(page.index);\n\n    this.pdfiumModule.FPDF_RenderPageBitmap(\n      bitmapPtr,\n      pageCtx.pagePtr,\n      -rectSize.origin.x,\n      -rectSize.origin.y,\n      pageSize.width,\n      pageSize.height,\n      rotation,\n      flags,\n    );\n\n    this.pdfiumModule.FPDFBitmap_Destroy(bitmapPtr);\n    pageCtx.release();\n\n    const data = this.pdfiumModule.pdfium.HEAPU8.subarray(\n      bitmapHeapPtr,\n      bitmapHeapPtr + bitmapHeapLength,\n    );\n\n    const imageData = {\n      data: new Uint8ClampedArray(data),\n      width: rectSize.size.width,\n      height: rectSize.size.height,\n    };\n\n    this.free(bitmapHeapPtr);\n\n    return imageData;\n  }\n\n  /**\n   * Read the target of pdf link annotation\n   * @param docPtr - pointer to pdf document object\n   * @param getActionPtr - callback function to retrive the pointer of action\n   * @param getDestinationPtr - callback function to retrive the pointer of destination\n   * @returns target of link\n   *\n   * @private\n   */\n  private readPdfLinkAnnoTarget(\n    docPtr: number,\n    getActionPtr: () => number,\n    getDestinationPtr: () => number,\n  ): PdfLinkTarget | undefined {\n    const destinationPtr = getDestinationPtr();\n    if (destinationPtr) {\n      const destination = this.readPdfDestination(docPtr, destinationPtr);\n\n      return {\n        type: 'destination',\n        destination,\n      };\n    } else {\n      const actionPtr = getActionPtr();\n      if (actionPtr) {\n        const action = this.readPdfAction(docPtr, actionPtr);\n\n        return {\n          type: 'action',\n          action,\n        };\n      }\n    }\n  }\n\n  /**\n   * Read pdf action from pdf document\n   * @param docPtr - pointer to pdf document object\n   * @param actionPtr - pointer to pdf action object\n   * @returns pdf action object\n   *\n   * @private\n   */\n  private readPdfAction(docPtr: number, actionPtr: number): PdfActionObject {\n    const actionType = this.pdfiumModule.FPDFAction_GetType(actionPtr) as PdfActionType;\n    let action: PdfActionObject;\n    switch (actionType) {\n      case PdfActionType.Unsupported:\n        action = {\n          type: PdfActionType.Unsupported,\n        };\n        break;\n      case PdfActionType.Goto:\n        {\n          const destinationPtr = this.pdfiumModule.FPDFAction_GetDest(docPtr, actionPtr);\n          if (destinationPtr) {\n            const destination = this.readPdfDestination(docPtr, destinationPtr);\n\n            action = {\n              type: PdfActionType.Goto,\n              destination,\n            };\n          } else {\n            action = {\n              type: PdfActionType.Unsupported,\n            };\n          }\n        }\n        break;\n      case PdfActionType.RemoteGoto:\n        {\n          // In case of remote goto action,\n          // the application should first use FPDFAction_GetFilePath\n          // to get file path, then load that particular document,\n          // and use its document handle to call this\n          action = {\n            type: PdfActionType.Unsupported,\n          };\n        }\n        break;\n      case PdfActionType.URI:\n        {\n          const uri = readString(\n            this.pdfiumModule.pdfium,\n            (buffer, bufferLength) => {\n              return this.pdfiumModule.FPDFAction_GetURIPath(\n                docPtr,\n                actionPtr,\n                buffer,\n                bufferLength,\n              );\n            },\n            this.pdfiumModule.pdfium.UTF8ToString,\n          );\n\n          action = {\n            type: PdfActionType.URI,\n            uri,\n          };\n        }\n        break;\n      case PdfActionType.LaunchAppOrOpenFile:\n        {\n          const path = readString(\n            this.pdfiumModule.pdfium,\n            (buffer, bufferLength) => {\n              return this.pdfiumModule.FPDFAction_GetFilePath(actionPtr, buffer, bufferLength);\n            },\n            this.pdfiumModule.pdfium.UTF8ToString,\n          );\n          action = {\n            type: PdfActionType.LaunchAppOrOpenFile,\n            path,\n          };\n        }\n        break;\n    }\n\n    return action;\n  }\n\n  /**\n   * Read pdf destination object\n   * @param docPtr - pointer to pdf document object\n   * @param destinationPtr - pointer to pdf destination\n   * @returns pdf destination object\n   *\n   * @private\n   */\n  private readPdfDestination(docPtr: number, destinationPtr: number): PdfDestinationObject {\n    const pageIndex = this.pdfiumModule.FPDFDest_GetDestPageIndex(docPtr, destinationPtr);\n    // Every params is a float value\n    const maxParmamsCount = 4;\n    const paramsCountPtr = this.malloc(maxParmamsCount);\n    const paramsPtr = this.malloc(maxParmamsCount * 4);\n    const zoomMode = this.pdfiumModule.FPDFDest_GetView(\n      destinationPtr,\n      paramsCountPtr,\n      paramsPtr,\n    ) as PdfZoomMode;\n    const paramsCount = this.pdfiumModule.pdfium.getValue(paramsCountPtr, 'i32');\n    const view: number[] = [];\n    for (let i = 0; i < paramsCount; i++) {\n      const paramPtr = paramsPtr + i * 4;\n      view.push(this.pdfiumModule.pdfium.getValue(paramPtr, 'float'));\n    }\n    this.free(paramsCountPtr);\n    this.free(paramsPtr);\n\n    if (zoomMode === PdfZoomMode.XYZ) {\n      const hasXPtr = this.malloc(1);\n      const hasYPtr = this.malloc(1);\n      const hasZPtr = this.malloc(1);\n      const xPtr = this.malloc(4);\n      const yPtr = this.malloc(4);\n      const zPtr = this.malloc(4);\n\n      const isSucceed = this.pdfiumModule.FPDFDest_GetLocationInPage(\n        destinationPtr,\n        hasXPtr,\n        hasYPtr,\n        hasZPtr,\n        xPtr,\n        yPtr,\n        zPtr,\n      );\n      if (isSucceed) {\n        const hasX = this.pdfiumModule.pdfium.getValue(hasXPtr, 'i8');\n        const hasY = this.pdfiumModule.pdfium.getValue(hasYPtr, 'i8');\n        const hasZ = this.pdfiumModule.pdfium.getValue(hasZPtr, 'i8');\n\n        const x = hasX ? this.pdfiumModule.pdfium.getValue(xPtr, 'float') : 0;\n        const y = hasY ? this.pdfiumModule.pdfium.getValue(yPtr, 'float') : 0;\n        const zoom = hasZ ? this.pdfiumModule.pdfium.getValue(zPtr, 'float') : 0;\n\n        this.free(hasXPtr);\n        this.free(hasYPtr);\n        this.free(hasZPtr);\n        this.free(xPtr);\n        this.free(yPtr);\n        this.free(zPtr);\n\n        return {\n          pageIndex,\n          zoom: {\n            mode: zoomMode,\n            params: {\n              x,\n              y,\n              zoom,\n            },\n          },\n          view,\n        };\n      }\n\n      this.free(hasXPtr);\n      this.free(hasYPtr);\n      this.free(hasZPtr);\n      this.free(xPtr);\n      this.free(yPtr);\n      this.free(zPtr);\n\n      return {\n        pageIndex,\n        zoom: {\n          mode: zoomMode,\n          params: {\n            x: 0,\n            y: 0,\n            zoom: 0,\n          },\n        },\n        view,\n      };\n    }\n\n    return {\n      pageIndex,\n      zoom: {\n        mode: zoomMode,\n      },\n      view,\n    };\n  }\n\n  /**\n   * Read attachmet from pdf document\n   * @param docPtr - pointer to pdf document object\n   * @param index - index of attachment\n   * @returns attachment content\n   *\n   * @private\n   */\n  private readPdfAttachment(docPtr: number, index: number): PdfAttachmentObject {\n    const attachmentPtr = this.pdfiumModule.FPDFDoc_GetAttachment(docPtr, index);\n    const name = readString(\n      this.pdfiumModule.pdfium,\n      (buffer, bufferLength) => {\n        return this.pdfiumModule.FPDFAttachment_GetName(attachmentPtr, buffer, bufferLength);\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n    const creationDate = readString(\n      this.pdfiumModule.pdfium,\n      (buffer, bufferLength) => {\n        return this.pdfiumModule.FPDFAttachment_GetStringValue(\n          attachmentPtr,\n          'CreationDate',\n          buffer,\n          bufferLength,\n        );\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n    const checksum = readString(\n      this.pdfiumModule.pdfium,\n      (buffer, bufferLength) => {\n        return this.pdfiumModule.FPDFAttachment_GetStringValue(\n          attachmentPtr,\n          'Checksum',\n          buffer,\n          bufferLength,\n        );\n      },\n      this.pdfiumModule.pdfium.UTF16ToString,\n    );\n\n    return {\n      index,\n      name,\n      creationDate,\n      checksum,\n    };\n  }\n\n  /**\n   * Convert coordinate of point from device coordinate to page coordinate\n   * @param page  - pdf page infor\n   * @param position - position of point\n   * @returns converted position\n   *\n   * @private\n   */\n  private convertDevicePointToPagePoint(page: PdfPageObject, position: Position): Position {\n    const x = position.x;\n    const y = page.size.height - position.y;\n\n    return { x, y };\n  }\n\n  /**\n   * Convert coordinate of point from page coordinate to device coordinate\n   * @param page  - pdf page infor\n   * @param position - position of point\n   * @returns converted position\n   *\n   * @private\n   */\n  private convertPagePointToDevicePoint(page: PdfPageObject, position: Position): Position {\n    const x = position.x;\n    const y = page.size.height - position.y;\n\n    return { x, y };\n  }\n\n  /**\n   * Convert coordinate of rectangle from page coordinate to device coordinate\n   * @param page  - pdf page infor\n   * @param pagePtr - pointer to pdf page object\n   * @param pageRect - rectangle that needs to be converted\n   * @returns converted rectangle\n   *\n   * @private\n   */\n  private convertPageRectToDeviceRect(\n    page: PdfPageObject,\n    pagePtr: number,\n    pageRect: {\n      left: number;\n      top: number;\n      right: number;\n      bottom: number;\n    },\n  ): Rect {\n    const { x, y } = this.convertPagePointToDevicePoint(page, {\n      x: pageRect.left,\n      y: pageRect.top,\n    });\n    const rect = {\n      origin: {\n        x,\n        y,\n      },\n      size: {\n        width: Math.abs(pageRect.right - pageRect.left),\n        height: Math.abs(pageRect.top - pageRect.bottom),\n      },\n    };\n\n    return rect;\n  }\n\n  /**\n   * Read the appearance stream of annotation\n   * @param annotationPtr - pointer to pdf annotation\n   * @param mode - appearance mode\n   * @returns appearance stream\n   *\n   * @private\n   */\n  private readPageAnnoAppearanceStreams(annotationPtr: number) {\n    return {\n      normal: this.readPageAnnoAppearanceStream(annotationPtr, AppearanceMode.Normal),\n      rollover: this.readPageAnnoAppearanceStream(annotationPtr, AppearanceMode.Rollover),\n      down: this.readPageAnnoAppearanceStream(annotationPtr, AppearanceMode.Down),\n    };\n  }\n\n  /**\n   * Read the appearance stream of annotation\n   * @param annotationPtr - pointer to pdf annotation\n   * @param mode - appearance mode\n   * @returns appearance stream\n   *\n   * @private\n   */\n  private readPageAnnoAppearanceStream(annotationPtr: number, mode = AppearanceMode.Normal) {\n    const utf16Length = this.pdfiumModule.FPDFAnnot_GetAP(annotationPtr, mode, 0, 0);\n    const bytesCount = (utf16Length + 1) * 2; // include NIL\n    const bufferPtr = this.malloc(bytesCount);\n    this.pdfiumModule.FPDFAnnot_GetAP(annotationPtr, mode, bufferPtr, bytesCount);\n    const ap = this.pdfiumModule.pdfium.UTF16ToString(bufferPtr);\n    this.free(bufferPtr);\n\n    return ap;\n  }\n\n  /**\n   * Change the visible colour (and opacity) of an existing annotation.\n   *\n   * For markup annotations (highlight / underline / strikeout / squiggly) we\n   * first clear the AP dictionary entry, otherwise the stored appearance stream\n   * will override the new tint.  For all other sub-types we keep the existing\n   * AP so custom artwork isn't lost.\n   *\n   * @param doc         logical document object\n   * @param page        logical page object\n   * @param annotation  the annotation we want to recolour\n   * @param colour      RGBA tuple (0-255 per channel)\n   * @param which       0 = stroke/fill colour  (PDFium's \"colourType\" param)\n   *\n   * @returns `true` when the operation succeeded\n   */\n  public updateAnnotationColor(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObjectBase,\n    color: WebAlphaColor,\n    which: number = 0, // 0 → \"colour\" (fill/stroke)\n  ): PdfTask<boolean> {\n    this.logger.debug(\n      LOG_SOURCE,\n      LOG_CATEGORY,\n      'setAnnotationColor',\n      doc,\n      page,\n      annotation,\n      color,\n      which,\n    );\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor', 'Begin', doc.id);\n    const task = PdfTaskHelper.create<boolean>();\n\n    try {\n      /* 1 ── sanity & native handles ────────────────────────────────────────── */\n      const ctx = this.cache.getContext(doc.id);\n      if (!ctx) {\n        this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor', 'End', doc.id);\n        this.logger.warn(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor: doc closed');\n        task.resolve(false);\n        return task;\n      }\n\n      const pageCtx = ctx.acquirePage(page.index);\n      const annotPtr = this.pdfiumModule.FPDFPage_GetAnnot(pageCtx.pagePtr, annotation.id);\n      if (!annotPtr) {\n        this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor', 'End', doc.id);\n        this.logger.warn(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor: annot not found');\n        pageCtx.release();\n        task.resolve(false);\n        return task;\n      }\n\n      const ok = this.setAnnotationColor(annotPtr, color, which);\n\n      /* 4 ── regenerate appearance & clean-up ───────────────────────────────── */\n      if (ok) {\n        this.pdfiumModule.FPDFPage_GenerateContent(pageCtx.pagePtr);\n      }\n\n      this.pdfiumModule.FPDFPage_CloseAnnot(annotPtr);\n      pageCtx.release();\n\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor', 'End', doc.id);\n      task.resolve(!!ok);\n    } catch (error) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor', 'End', doc.id);\n      this.logger.error(LOG_SOURCE, LOG_CATEGORY, 'setAnnotationColor: error', error);\n      task.reject({\n        code: PdfErrorCode.Unknown,\n        message: `Failed to set annotation color: ${error instanceof Error ? error.message : String(error)}`,\n      });\n    }\n\n    return task;\n  }\n\n  /**\n   * Set the rect of specified annotation\n   * @param page - page info that the annotation is belonged to\n   * @param pagePtr - pointer of page object\n   * @param annotationPtr - pointer to annotation object\n   * @param rect - target rectangle\n   * @returns whether the rect is setted\n   *\n   * @private\n   */\n  setPageAnnoRect(page: PdfPageObject, pagePtr: number, annotationPtr: number, rect: Rect) {\n    const pageXPtr = this.malloc(8);\n    const pageYPtr = this.malloc(8);\n    if (\n      !this.pdfiumModule.FPDF_DeviceToPage(\n        pagePtr,\n        0,\n        0,\n        page.size.width,\n        page.size.height,\n        0,\n        rect.origin.x,\n        rect.origin.y,\n        pageXPtr,\n        pageYPtr,\n      )\n    ) {\n      this.free(pageXPtr);\n      this.free(pageYPtr);\n      return false;\n    }\n    const pageX = this.pdfiumModule.pdfium.getValue(pageXPtr, 'double');\n    const pageY = this.pdfiumModule.pdfium.getValue(pageYPtr, 'double');\n    this.free(pageXPtr);\n    this.free(pageYPtr);\n\n    const pageRectPtr = this.malloc(4 * 4);\n    this.pdfiumModule.pdfium.setValue(pageRectPtr, pageX, 'float');\n    this.pdfiumModule.pdfium.setValue(pageRectPtr + 4, pageY, 'float');\n    this.pdfiumModule.pdfium.setValue(pageRectPtr + 8, pageX + rect.size.width, 'float');\n    this.pdfiumModule.pdfium.setValue(pageRectPtr + 12, pageY - rect.size.height, 'float');\n\n    if (!this.pdfiumModule.FPDFAnnot_SetRect(annotationPtr, pageRectPtr)) {\n      this.free(pageRectPtr);\n      return false;\n    }\n    this.free(pageRectPtr);\n\n    return true;\n  }\n\n  /**\n   * Read the rectangle of annotation\n   * @param annotationPtr - pointer to pdf annotation\n   * @returns rectangle of annotation\n   *\n   * @private\n   */\n  private readPageAnnoRect(annotationPtr: number) {\n    const pageRectPtr = this.malloc(4 * 4);\n    const pageRect = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    };\n    if (this.pdfiumModule.FPDFAnnot_GetRect(annotationPtr, pageRectPtr)) {\n      pageRect.left = this.pdfiumModule.pdfium.getValue(pageRectPtr, 'float');\n      pageRect.top = this.pdfiumModule.pdfium.getValue(pageRectPtr + 4, 'float');\n      pageRect.right = this.pdfiumModule.pdfium.getValue(pageRectPtr + 8, 'float');\n      pageRect.bottom = this.pdfiumModule.pdfium.getValue(pageRectPtr + 12, 'float');\n    }\n    this.free(pageRectPtr);\n\n    return pageRect;\n  }\n\n  /**\n   * Get highlight rects for a specific character range (for search highlighting)\n   * @param page - pdf page info\n   * @param pagePtr - pointer to pdf page\n   * @param textPagePtr - pointer to pdf text page\n   * @param startIndex - starting character index\n   * @param charCount - number of characters in the range\n   * @returns array of rectangles for highlighting the specified character range\n   *\n   * @private\n   */\n  private getHighlightRects(\n    page: PdfPageObject,\n    pagePtr: number,\n    textPagePtr: number,\n    startIndex: number,\n    charCount: number,\n  ): Rect[] {\n    const rectsCount = this.pdfiumModule.FPDFText_CountRects(textPagePtr, startIndex, charCount);\n\n    const highlightRects: Rect[] = [];\n    for (let i = 0; i < rectsCount; i++) {\n      const topPtr = this.malloc(8);\n      const leftPtr = this.malloc(8);\n      const rightPtr = this.malloc(8);\n      const bottomPtr = this.malloc(8);\n      const isSucceed = this.pdfiumModule.FPDFText_GetRect(\n        textPagePtr,\n        i,\n        leftPtr,\n        topPtr,\n        rightPtr,\n        bottomPtr,\n      );\n      if (!isSucceed) {\n        this.free(leftPtr);\n        this.free(topPtr);\n        this.free(rightPtr);\n        this.free(bottomPtr);\n        continue;\n      }\n\n      const left = this.pdfiumModule.pdfium.getValue(leftPtr, 'double');\n      const top = this.pdfiumModule.pdfium.getValue(topPtr, 'double');\n      const right = this.pdfiumModule.pdfium.getValue(rightPtr, 'double');\n      const bottom = this.pdfiumModule.pdfium.getValue(bottomPtr, 'double');\n\n      this.free(leftPtr);\n      this.free(topPtr);\n      this.free(rightPtr);\n      this.free(bottomPtr);\n\n      const deviceXPtr = this.malloc(4);\n      const deviceYPtr = this.malloc(4);\n      this.pdfiumModule.FPDF_PageToDevice(\n        pagePtr,\n        0,\n        0,\n        page.size.width,\n        page.size.height,\n        0,\n        left,\n        top,\n        deviceXPtr,\n        deviceYPtr,\n      );\n      const x = this.pdfiumModule.pdfium.getValue(deviceXPtr, 'i32');\n      const y = this.pdfiumModule.pdfium.getValue(deviceYPtr, 'i32');\n      this.free(deviceXPtr);\n      this.free(deviceYPtr);\n\n      // Convert the bottom-right coordinates to width/height\n      const width = Math.ceil(Math.abs(right - left));\n      const height = Math.ceil(Math.abs(top - bottom));\n\n      highlightRects.push({\n        origin: { x, y },\n        size: { width, height },\n      });\n    }\n\n    return highlightRects;\n  }\n\n  /**\n   * Search for a keyword across all pages in the document\n   * Returns all search results throughout the entire document\n   *\n   * @param doc - Pdf document object\n   * @param keyword - Search keyword\n   * @param flags - Match flags for search\n   * @returns Promise of all search results in the document\n   *\n   * @public\n   */\n  searchAllPages(doc: PdfDocumentObject, keyword: string, flags: MatchFlag[] = []) {\n    this.logger.debug(LOG_SOURCE, LOG_CATEGORY, 'searchAllPages', doc, keyword, flags);\n    this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SearchAllPages`, 'Begin', doc.id);\n\n    const ctx = this.cache.getContext(doc.id);\n\n    if (!ctx) {\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SearchAllPages`, 'End', doc.id);\n      return PdfTaskHelper.resolve<SearchAllPagesResult>({ results: [], total: 0 });\n    }\n\n    const length = 2 * (keyword.length + 1);\n    const keywordPtr = this.malloc(length);\n    this.pdfiumModule.pdfium.stringToUTF16(keyword, keywordPtr, length);\n\n    const flag = flags.reduce((flag: MatchFlag, currFlag: MatchFlag) => {\n      return flag | currFlag;\n    }, MatchFlag.None);\n\n    const results: SearchResult[] = [];\n\n    // Search through all pages\n    const searchAllPagesTask = PdfTaskHelper.create<SearchAllPagesResult>();\n\n    // Execute search in a separate function to avoid issues with resolve parameter\n    const executeSearch = async () => {\n      for (let pageIndex = 0; pageIndex < doc.pageCount; pageIndex++) {\n        // Get all results for the current page efficiently (load page only once)\n        const pageResults = this.searchAllInPage(ctx, doc.pages[pageIndex], keywordPtr, flag);\n\n        results.push(...pageResults);\n      }\n\n      this.free(keywordPtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SearchAllPages`, 'End', doc.id);\n\n      searchAllPagesTask.resolve({\n        results,\n        total: results.length,\n      });\n    };\n\n    // Start the search process\n    executeSearch().catch((error) => {\n      this.free(keywordPtr);\n      this.logger.perf(LOG_SOURCE, LOG_CATEGORY, `SearchAllPages`, 'End', doc.id);\n      searchAllPagesTask.reject({\n        code: PdfErrorCode.Unknown,\n        message: `Error searching document: ${error}`,\n      });\n    });\n\n    return searchAllPagesTask;\n  }\n\n  /**\n   * Extract word-aligned context for a search hit.\n   *\n   * @param fullText      full UTF-16 page text (fetch this once per page!)\n   * @param start         index of 1st char that matched\n   * @param count         number of chars in the match\n   * @param windowChars   minimum context chars to keep left & right\n   */\n  private buildContext(\n    fullText: string,\n    start: number,\n    count: number,\n    windowChars = 30,\n  ): TextContext {\n    const WORD_BREAK = /[\\s\\u00A0.,;:!?()\\[\\]{}<>/\\\\\\-\"'`\"”\\u2013\\u2014]/;\n\n    // Find the start of a word moving left\n    const findWordStart = (index: number): number => {\n      while (index > 0 && !WORD_BREAK.test(fullText[index - 1])) index--;\n      return index;\n    };\n\n    // Find the end of a word moving right\n    const findWordEnd = (index: number): number => {\n      while (index < fullText.length && !WORD_BREAK.test(fullText[index])) index++;\n      return index;\n    };\n\n    // Move left to build context\n    let left = start;\n    while (left > 0 && WORD_BREAK.test(fullText[left - 1])) left--; // Skip blanks\n    let collected = 0;\n    while (left > 0 && collected < windowChars) {\n      left--;\n      if (!WORD_BREAK.test(fullText[left])) collected++;\n    }\n    left = findWordStart(left);\n\n    // Move right to build context\n    let right = start + count;\n    while (right < fullText.length && WORD_BREAK.test(fullText[right])) right++; // Skip blanks\n    collected = 0;\n    while (right < fullText.length && collected < windowChars) {\n      if (!WORD_BREAK.test(fullText[right])) collected++;\n      right++;\n    }\n    right = findWordEnd(right);\n\n    // Compose the context\n    const before = fullText.slice(left, start).replace(/\\s+/g, ' ').trimStart();\n    const match = fullText.slice(start, start + count);\n    const after = fullText\n      .slice(start + count, right)\n      .replace(/\\s+/g, ' ')\n      .trimEnd();\n\n    return {\n      before: this.tidy(before),\n      match: this.tidy(match),\n      after: this.tidy(after),\n      truncatedLeft: left > 0,\n      truncatedRight: right < fullText.length,\n    };\n  }\n\n  /**\n   * Tidy the text to remove any non-printable characters and whitespace\n   * @param s - text to tidy\n   * @returns tidied text\n   *\n   * @private\n   */\n  private tidy(s: string): string {\n    return (\n      s\n        /* 1️⃣  join words split by hyphen + U+FFFE + whitespace */\n        .replace(/-\\uFFFE\\s*/g, '')\n\n        /* 2️⃣  drop any remaining U+FFFE, soft-hyphen, zero-width chars */\n        .replace(/[\\uFFFE\\u00AD\\u200B\\u2060\\uFEFF]/g, '')\n\n        /* 3️⃣  collapse whitespace so we stay on one line */\n        .replace(/\\s+/g, ' ')\n    );\n  }\n\n  /**\n   * Search for all occurrences of a keyword on a single page\n   * This method efficiently loads the page only once and finds all matches\n   *\n   * @param docPtr - pointer to pdf document\n   * @param page - pdf page object\n   * @param pageIndex - index of the page\n   * @param keywordPtr - pointer to the search keyword\n   * @param flag - search flags\n   * @returns array of search results on this page\n   *\n   * @private\n   */\n  private searchAllInPage(\n    ctx: DocumentContext,\n    page: PdfPageObject,\n    keywordPtr: number,\n    flag: number,\n  ): SearchResult[] {\n    const pageIndex = page.index;\n    // Load the page and text page only once\n    const pageCtx = ctx.acquirePage(pageIndex);\n    const textPagePtr = pageCtx.getTextPage();\n\n    // Load the full text of the page once\n    const total = this.pdfiumModule.FPDFText_CountChars(textPagePtr);\n    const bufPtr = this.malloc(2 * (total + 1));\n    this.pdfiumModule.FPDFText_GetText(textPagePtr, 0, total, bufPtr);\n    const fullText = this.pdfiumModule.pdfium.UTF16ToString(bufPtr);\n    this.free(bufPtr);\n\n    const pageResults: SearchResult[] = [];\n\n    // Initialize search handle once for the page\n    const searchHandle = this.pdfiumModule.FPDFText_FindStart(\n      textPagePtr,\n      keywordPtr,\n      flag,\n      0, // Start from the beginning of the page\n    );\n\n    // Call FindNext repeatedly to get all matches on the page\n    while (this.pdfiumModule.FPDFText_FindNext(searchHandle)) {\n      const charIndex = this.pdfiumModule.FPDFText_GetSchResultIndex(searchHandle);\n      const charCount = this.pdfiumModule.FPDFText_GetSchCount(searchHandle);\n\n      const rects = this.getHighlightRects(\n        page,\n        pageCtx.pagePtr,\n        textPagePtr,\n        charIndex,\n        charCount,\n      );\n\n      const context = this.buildContext(fullText, charIndex, charCount);\n\n      pageResults.push({\n        pageIndex,\n        charIndex,\n        charCount,\n        rects,\n        context,\n      });\n    }\n\n    // Close the search handle only once after finding all results\n    this.pdfiumModule.FPDFText_FindClose(searchHandle);\n\n    // Close the text page and page only once\n    pageCtx.release();\n\n    return pageResults;\n  }\n}\n","import { Logger } from '@embedpdf/models';\nimport { init } from '@embedpdf/pdfium';\n\nimport { PdfiumEngine } from '../engine';\n\nexport async function createPdfiumEngine(wasmUrl: string, logger?: Logger): Promise<PdfiumEngine> {\n  const response = await fetch(wasmUrl);\n  const wasmBinary = await response.arrayBuffer();\n  const wasmModule = await init({ wasmBinary });\n  return new PdfiumEngine(wasmModule, logger);\n}\n"],"names":[],"mappings":"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"}