{"version":3,"file":"index.js","sources":["../src/lib/manifest.ts","../src/lib/reducer.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\nimport { SelectionPluginConfig } from './types';\n\nexport const SELECTION_PLUGIN_ID = 'selection';\n\nexport const manifest: PluginManifest<SelectionPluginConfig> = {\n  id: SELECTION_PLUGIN_ID,\n  name: 'Selection Plugin',\n  version: '1.0.0',\n  provides: ['selection'],\n  requires: ['interaction-manager'],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n  },\n};\n","import { SelectionState } from './types';\nimport {\n  SelectionAction,\n  CACHE_PAGE_GEOMETRY,\n  SET_SELECTION,\n  START_SELECTION,\n  END_SELECTION,\n  CLEAR_SELECTION,\n  RESET,\n  SET_SLICES,\n  SET_RECTS,\n} from './actions';\n\nexport const initialState: SelectionState = {\n  geometry: {},\n  rects: {},\n  slices: {},\n  selection: null,\n  active: false,\n  selecting: false,\n};\n\nexport const selectionReducer = (state = initialState, action: SelectionAction): SelectionState => {\n  switch (action.type) {\n    case CACHE_PAGE_GEOMETRY: {\n      const { page, geo } = action.payload;\n      return { ...state, geometry: { ...state.geometry, [page]: geo } };\n    }\n    case SET_SELECTION:\n      return { ...state, selection: action.payload, active: true };\n    case START_SELECTION:\n      return { ...state, selecting: true, selection: null, rects: {} };\n    case END_SELECTION:\n      return { ...state, selecting: false };\n    case CLEAR_SELECTION:\n      return { ...state, selecting: false, selection: null, rects: {}, active: false };\n    case SET_RECTS:\n      return { ...state, rects: action.payload };\n    case SET_SLICES:\n      return { ...state, slices: action.payload };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { PluginPackage } from '@embedpdf/core';\nimport { manifest, SELECTION_PLUGIN_ID } from './manifest';\nimport { SelectionPluginConfig, SelectionState } from './types';\n\nimport { SelectionPlugin } from './selection-plugin';\nimport { SelectionAction } from './actions';\nimport { selectionReducer, initialState } from './reducer';\n\nexport const SelectionPluginPackage: PluginPackage<\n  SelectionPlugin,\n  SelectionPluginConfig,\n  SelectionState,\n  SelectionAction\n> = {\n  manifest,\n  create: (registry, engine) => new SelectionPlugin(SELECTION_PLUGIN_ID, registry, engine),\n  reducer: selectionReducer,\n  initialState,\n};\n\nexport * from './selection-plugin';\nexport * from './types';\nexport * from './manifest';\nexport * from './utils';\n"],"names":["SELECTION_PLUGIN_ID","manifest","initialState","selectionReducer","state","action","CACHE_PAGE_GEOMETRY","page","geo","SET_SELECTION","START_SELECTION","END_SELECTION","CLEAR_SELECTION","SET_RECTS","SET_SLICES","RESET","SelectionPluginPackage","registry","engine","SelectionPlugin"],"mappings":";;AAGO,MAAMA,IAAsB,aAEtBC,IAAkD;AAAA,EAC7D,IAAID;AAAA,EACJ,MAAM;AAAA,EACN,SAAS;AAAA,EACT,UAAU,CAAC,WAAW;AAAA,EACtB,UAAU,CAAC,qBAAqB;AAAA,EAChC,UAAU,CAAA;AAAA,EACV,eAAe;AAAA,IACb,SAAS;AAAA,EAAA;AAEb,GCFaE,IAA+B;AAAA,EAC1C,UAAU,CAAA;AAAA,EACV,OAAO,CAAA;AAAA,EACP,QAAQ,CAAA;AAAA,EACR,WAAW;AAAA,EACX,QAAQ;AAAA,EACR,WAAW;AACb,GAEaC,IAAmB,CAACC,IAAQF,GAAcG,MAA4C;AACjG,UAAQA,EAAO,MAAA;AAAA,IACb,KAAKC,GAAqB;AACxB,YAAM,EAAE,MAAAC,GAAM,KAAAC,EAAA,IAAQH,EAAO;AAC7B,aAAO,EAAE,GAAGD,GAAO,UAAU,EAAE,GAAGA,EAAM,UAAU,CAACG,CAAI,GAAGC,IAAI;AAAA,IAChE;AAAA,IACA,KAAKC;AACH,aAAO,EAAE,GAAGL,GAAO,WAAWC,EAAO,SAAS,QAAQ,GAAA;AAAA,IACxD,KAAKK;AACH,aAAO,EAAE,GAAGN,GAAO,WAAW,IAAM,WAAW,MAAM,OAAO,GAAC;AAAA,IAC/D,KAAKO;AACH,aAAO,EAAE,GAAGP,GAAO,WAAW,GAAA;AAAA,IAChC,KAAKQ;AACH,aAAO,EAAE,GAAGR,GAAO,WAAW,IAAO,WAAW,MAAM,OAAO,CAAA,GAAI,QAAQ,GAAA;AAAA,IAC3E,KAAKS;AACH,aAAO,EAAE,GAAGT,GAAO,OAAOC,EAAO,QAAA;AAAA,IACnC,KAAKS;AACH,aAAO,EAAE,GAAGV,GAAO,QAAQC,EAAO,QAAA;AAAA,IACpC,KAAKU;AACH,aAAOb;AAAA,IACT;AACE,aAAOE;AAAA,EAAA;AAEb,GCrCaY,IAKT;AAAA,EACF,UAAAf;AAAA,EACA,QAAQ,CAACgB,GAAUC,MAAW,IAAIC,EAAgBnB,GAAqBiB,GAAUC,CAAM;AAAA,EACvF,SAASf;AAAA,EACT,cAAAD;AACF;"}