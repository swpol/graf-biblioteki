{"version":3,"file":"index.cjs","sources":["../src/lib/manifest.ts","../src/lib/reducer.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\nimport { SelectionPluginConfig } from './types';\n\nexport const SELECTION_PLUGIN_ID = 'selection';\n\nexport const manifest: PluginManifest<SelectionPluginConfig> = {\n  id: SELECTION_PLUGIN_ID,\n  name: 'Selection Plugin',\n  version: '1.0.0',\n  provides: ['selection'],\n  requires: ['interaction-manager'],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n  },\n};\n","import { SelectionState } from './types';\nimport {\n  SelectionAction,\n  CACHE_PAGE_GEOMETRY,\n  SET_SELECTION,\n  START_SELECTION,\n  END_SELECTION,\n  CLEAR_SELECTION,\n  RESET,\n  SET_SLICES,\n  SET_RECTS,\n} from './actions';\n\nexport const initialState: SelectionState = {\n  geometry: {},\n  rects: {},\n  slices: {},\n  selection: null,\n  active: false,\n  selecting: false,\n};\n\nexport const selectionReducer = (state = initialState, action: SelectionAction): SelectionState => {\n  switch (action.type) {\n    case CACHE_PAGE_GEOMETRY: {\n      const { page, geo } = action.payload;\n      return { ...state, geometry: { ...state.geometry, [page]: geo } };\n    }\n    case SET_SELECTION:\n      return { ...state, selection: action.payload, active: true };\n    case START_SELECTION:\n      return { ...state, selecting: true, selection: null, rects: {} };\n    case END_SELECTION:\n      return { ...state, selecting: false };\n    case CLEAR_SELECTION:\n      return { ...state, selecting: false, selection: null, rects: {}, active: false };\n    case SET_RECTS:\n      return { ...state, rects: action.payload };\n    case SET_SLICES:\n      return { ...state, slices: action.payload };\n    case RESET:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { PluginPackage } from '@embedpdf/core';\nimport { manifest, SELECTION_PLUGIN_ID } from './manifest';\nimport { SelectionPluginConfig, SelectionState } from './types';\n\nimport { SelectionPlugin } from './selection-plugin';\nimport { SelectionAction } from './actions';\nimport { selectionReducer, initialState } from './reducer';\n\nexport const SelectionPluginPackage: PluginPackage<\n  SelectionPlugin,\n  SelectionPluginConfig,\n  SelectionState,\n  SelectionAction\n> = {\n  manifest,\n  create: (registry, engine) => new SelectionPlugin(SELECTION_PLUGIN_ID, registry, engine),\n  reducer: selectionReducer,\n  initialState,\n};\n\nexport * from './selection-plugin';\nexport * from './types';\nexport * from './manifest';\nexport * from './utils';\n"],"names":["SELECTION_PLUGIN_ID","manifest","initialState","selectionReducer","state","action","CACHE_PAGE_GEOMETRY","page","geo","SET_SELECTION","START_SELECTION","END_SELECTION","CLEAR_SELECTION","SET_RECTS","SET_SLICES","RESET","SelectionPluginPackage","registry","engine","SelectionPlugin"],"mappings":"mIAGaA,EAAsB,YAEtBC,EAAkD,CAC7D,GAAID,EACJ,KAAM,mBACN,QAAS,QACT,SAAU,CAAC,WAAW,EACtB,SAAU,CAAC,qBAAqB,EAChC,SAAU,CAAA,EACV,cAAe,CACb,QAAS,EAAA,CAEb,ECFaE,EAA+B,CAC1C,SAAU,CAAA,EACV,MAAO,CAAA,EACP,OAAQ,CAAA,EACR,UAAW,KACX,OAAQ,GACR,UAAW,EACb,EAEaC,EAAmB,CAACC,EAAQF,EAAcG,IAA4C,CACjG,OAAQA,EAAO,KAAA,CACb,KAAKC,sBAAqB,CACxB,KAAM,CAAE,KAAAC,EAAM,IAAAC,CAAA,EAAQH,EAAO,QAC7B,MAAO,CAAE,GAAGD,EAAO,SAAU,CAAE,GAAGA,EAAM,SAAU,CAACG,CAAI,EAAGC,EAAI,CAChE,CACA,KAAKC,EAAAA,cACH,MAAO,CAAE,GAAGL,EAAO,UAAWC,EAAO,QAAS,OAAQ,EAAA,EACxD,KAAKK,EAAAA,gBACH,MAAO,CAAE,GAAGN,EAAO,UAAW,GAAM,UAAW,KAAM,MAAO,EAAC,EAC/D,KAAKO,EAAAA,cACH,MAAO,CAAE,GAAGP,EAAO,UAAW,EAAA,EAChC,KAAKQ,EAAAA,gBACH,MAAO,CAAE,GAAGR,EAAO,UAAW,GAAO,UAAW,KAAM,MAAO,CAAA,EAAI,OAAQ,EAAA,EAC3E,KAAKS,EAAAA,UACH,MAAO,CAAE,GAAGT,EAAO,MAAOC,EAAO,OAAA,EACnC,KAAKS,EAAAA,WACH,MAAO,CAAE,GAAGV,EAAO,OAAQC,EAAO,OAAA,EACpC,KAAKU,EAAAA,MACH,OAAOb,EACT,QACE,OAAOE,CAAA,CAEb,ECrCaY,EAKT,CACF,SAAAf,EACA,OAAQ,CAACgB,EAAUC,IAAW,IAAIC,EAAAA,gBAAgBnB,EAAqBiB,EAAUC,CAAM,EACvF,QAASf,EACT,aAAAD,CACF"}