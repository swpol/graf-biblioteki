"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const e=require("./selection-plugin-DJLc-Ifx.cjs"),l="selection",r={id:l,name:"Selection Plugin",version:"1.0.0",provides:["selection"],requires:["interaction-manager"],optional:[],defaultConfig:{enabled:!0}},n={geometry:{},rects:{},slices:{},selection:null,active:!1,selecting:!1},o=(t=n,c)=>{switch(c.type){case e.CACHE_PAGE_GEOMETRY:{const{page:i,geo:s}=c.payload;return{...t,geometry:{...t.geometry,[i]:s}}}case e.SET_SELECTION:return{...t,selection:c.payload,active:!0};case e.START_SELECTION:return{...t,selecting:!0,selection:null,rects:{}};case e.END_SELECTION:return{...t,selecting:!1};case e.CLEAR_SELECTION:return{...t,selecting:!1,selection:null,rects:{},active:!1};case e.SET_RECTS:return{...t,rects:c.payload};case e.SET_SLICES:return{...t,slices:c.payload};case e.RESET:return n;default:return t}},a={manifest:r,create:(t,c)=>new e.SelectionPlugin(l,t,c),reducer:o,initialState:n};exports.SelectionPlugin=e.SelectionPlugin;exports.getVerticalOverlap=e.getVerticalOverlap;exports.glyphAt=e.glyphAt;exports.mergeAdjacentRects=e.mergeAdjacentRects;exports.rectIntersect=e.rectIntersect;exports.rectIsEmpty=e.rectIsEmpty;exports.rectUnion=e.rectUnion;exports.rectsWithinSlice=e.rectsWithinSlice;exports.shouldMergeHorizontalRects=e.shouldMergeHorizontalRects;exports.sliceBounds=e.sliceBounds;exports.SELECTION_PLUGIN_ID=l;exports.SelectionPluginPackage=a;exports.manifest=r;
//# sourceMappingURL=index.cjs.map
