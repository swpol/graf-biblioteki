{"version":3,"file":"index.js","sources":["../../../core/dist/vue/index.js","../../src/vue/hooks/use-tiling.ts","../../src/vue/components/tile-img.vue","../../src/vue/components/tiling-layer.vue"],"sourcesContent":["import { inject as p, ref as u, onMounted as a, onBeforeUnmount as l, shallowRef as d, watch as v, computed as y, defineComponent as m, provide as P, renderSlot as w } from \"vue\";\nimport { a as h, P as S } from \"../math-ChSRQF3r.js\";\nconst f = Symbol(\"pdfKey\");\nfunction c() {\n  const r = p(f);\n  if (!r) throw new Error(\"useRegistry must be used inside <EmbedPDF>\");\n  return r;\n}\nfunction b() {\n  const { registry: r } = c(), e = u();\n  return a(() => {\n    const o = r.value.getStore();\n    e.value = o.getState().core;\n    const t = o.subscribe((s, n, i) => {\n      o.isCoreAction(s) && !h(n.core, i.core) && (e.value = n.core);\n    });\n    l(t);\n  }), e;\n}\nfunction R(r) {\n  const { registry: e } = c(), o = d(null), t = u(!0), s = u(new Promise(() => {\n  })), n = () => {\n    var g;\n    if (!e.value) return;\n    const i = e.value.getPlugin(r);\n    if (!i) throw new Error(`Plugin ${r} not found`);\n    o.value = i, t.value = !1, s.value = ((g = i.ready) == null ? void 0 : g.call(i)) ?? Promise.resolve();\n  };\n  return a(n), v(e, n), { plugin: o, isLoading: t, ready: s };\n}\nfunction z(r) {\n  const { plugin: e, isLoading: o, ready: t } = R(r);\n  return { provides: y(() => {\n    if (!e.value) return null;\n    if (!e.value.provides)\n      throw new Error(`Plugin ${r} does not implement provides()`);\n    return e.value.provides();\n  }), isLoading: o, ready: t };\n}\nfunction C() {\n  const { registry: r } = c(), e = u();\n  function o() {\n    return r.value ? (e.value = r.value.getStore().getState(), r.value.getStore().subscribe((s, n) => e.value = n)) : () => {\n    };\n  }\n  let t = o();\n  return v(r, () => {\n    t == null || t(), t = o();\n  }), l(() => t == null ? void 0 : t()), e;\n}\nconst F = /* @__PURE__ */ m({\n  __name: \"embed-pdf\",\n  props: {\n    engine: {},\n    plugins: {},\n    onInitialized: { type: Function }\n  },\n  setup(r) {\n    const e = r, o = d(null), t = u(!0), s = u(!1);\n    return P(f, { registry: o, isInitializing: t, pluginsReady: s }), a(async () => {\n      var i;\n      const n = new S(e.engine);\n      n.registerPluginBatch(e.plugins), await n.initialize(), await ((i = e.onInitialized) == null ? void 0 : i.call(e, n)), o.value = n, t.value = !1, n.pluginsReady().then(() => s.value = !0);\n    }), l(() => {\n      var n;\n      return (n = o.value) == null ? void 0 : n.destroy();\n    }), (n, i) => w(n.$slots, \"default\", {\n      registry: o.value,\n      isInitializing: t.value,\n      pluginsReady: s.value\n    });\n  }\n});\nexport {\n  F as EmbedPDF,\n  z as useCapability,\n  b as useCoreState,\n  R as usePlugin,\n  c as useRegistry,\n  C as useStoreState\n};\n//# sourceMappingURL=index.js.map\n","import { useCapability, usePlugin } from '@embedpdf/core/vue';\nimport { TilingPlugin } from '@embedpdf/plugin-tiling';\n\n/** Get the plugin instance itself (e.g. to read config) */\nexport const useTilingPlugin = () => usePlugin<TilingPlugin>(TilingPlugin.id);\n/** Get the *capability* the plugin exposes (renderTile, onTileRendering) */\nexport const useTilingCapability = () => useCapability<TilingPlugin>(TilingPlugin.id);\n","<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount, toRaw } from 'vue';\nimport { ignore, PdfErrorCode, PdfErrorReason, Task } from '@embedpdf/models';\nimport type { StyleValue } from 'vue';\n\nimport type { Tile } from '@embedpdf/plugin-tiling';\nimport { useTilingCapability } from '../hooks';\n\ninterface Props {\n  pageIndex: number;\n  tile: Tile;\n  scale: number;\n  dpr?: number;\n  style?: StyleValue;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  dpr: () => window.devicePixelRatio,\n});\n\nconst { provides: tilingCapability } = useTilingCapability();\n\nconst url = ref<string>();\nlet blobUrl: string | null = null;\nlet renderTask: Task<Blob, PdfErrorReason> | null = null;\n\n/* -------------------------------------------------- */\n/* Helper functions                                   */\n/* -------------------------------------------------- */\nfunction revoke() {\n  if (blobUrl) {\n    URL.revokeObjectURL(blobUrl);\n    blobUrl = null;\n  }\n}\n\nfunction abortCurrentTask() {\n  if (renderTask && !blobUrl) {\n    renderTask.abort({\n      code: PdfErrorCode.Cancelled,\n      message: 'canceled tile render',\n    });\n  }\n}\n\n/* -------------------------------------------------- */\n/* start one render task when component mounts        */\n/* -------------------------------------------------- */\nonMounted(() => {\n  if (!tilingCapability.value) return;\n\n  const task = tilingCapability.value.renderTile({\n    pageIndex: props.pageIndex,\n    tile: toRaw(props.tile),\n    dpr: props.dpr,\n  });\n\n  renderTask = task;\n  task.wait((blob) => {\n    blobUrl = URL.createObjectURL(blob);\n    url.value = blobUrl;\n    renderTask = null; // Task completed\n  }, ignore);\n});\n\n/* -------------------------------------------------- */\n/* cleanup                                            */\n/* -------------------------------------------------- */\nonBeforeUnmount(() => {\n  abortCurrentTask();\n  revoke();\n});\n\n/* -------------------------------------------------- */\n/* helpers                                            */\n/* -------------------------------------------------- */\nconst relScale = props.scale / props.tile.srcScale;\n</script>\n\n<template>\n  <img\n    v-if=\"url\"\n    :src=\"url\"\n    :style=\"[\n      {\n        position: 'absolute',\n        left: tile.screenRect.origin.x * relScale + 'px',\n        top: tile.screenRect.origin.y * relScale + 'px',\n        width: tile.screenRect.size.width * relScale + 'px',\n        height: tile.screenRect.size.height * relScale + 'px',\n        display: 'block',\n      },\n      props.style,\n    ]\"\n    @load=\"revoke\"\n  />\n</template>\n","<script setup lang=\"ts\">\nimport type { Tile } from '@embedpdf/plugin-tiling';\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport type { StyleValue } from 'vue';\n\nimport { useTilingCapability } from '../hooks';\nimport TileImg from './tile-img.vue';\n\ninterface Props {\n  pageIndex: number;\n  scale: number;\n  style?: StyleValue;\n}\n\nconst props = defineProps<Props>();\n\nconst tiles = ref<Tile[]>([]);\nconst { provides: tilingProvides } = useTilingCapability();\n\nlet unsubscribe: (() => void) | undefined;\n\nonMounted(() => {\n  if (tilingProvides.value) {\n    unsubscribe = tilingProvides.value.onTileRendering((tilesMap) => {\n      tiles.value = tilesMap[props.pageIndex] ?? [];\n    });\n  }\n});\n\nonBeforeUnmount(() => {\n  unsubscribe?.();\n});\n</script>\n\n<template>\n  <div :style=\"style\" v-bind=\"$attrs\">\n    <TileImg\n      v-for=\"tile in tiles\"\n      :key=\"tile.id\"\n      :pageIndex=\"pageIndex\"\n      :tile=\"tile\"\n      :scale=\"scale\"\n    />\n  </div>\n</template>\n"],"names":["f","c","r","p","R","o","d","t","u","s","n","g","i","a","v","y","useTilingPlugin","usePlugin","TilingPlugin","useTilingCapability","useCapability","props","__props","tilingCapability","url","ref","blobUrl","renderTask","revoke","abortCurrentTask","PdfErrorCode","onMounted","task","toRaw","blob","ignore","onBeforeUnmount","relScale","_createElementBlock","_normalizeStyle","tile","tiles","tilingProvides","unsubscribe","tilesMap","_openBlock","_mergeProps","style","$attrs","_Fragment","_renderList","_createBlock","TileImg","pageIndex","scale"],"mappings":"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"}