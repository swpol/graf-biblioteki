{"version":3,"file":"index.cjs","sources":["../../../core/dist/vue/index.js","../../src/vue/hooks/use-tiling.ts","../../src/vue/components/tile-img.vue","../../src/vue/components/tiling-layer.vue"],"sourcesContent":["import { inject as p, ref as u, onMounted as a, onBeforeUnmount as l, shallowRef as d, watch as v, computed as y, defineComponent as m, provide as P, renderSlot as w } from \"vue\";\nimport { a as h, P as S } from \"../math-ChSRQF3r.js\";\nconst f = Symbol(\"pdfKey\");\nfunction c() {\n  const r = p(f);\n  if (!r) throw new Error(\"useRegistry must be used inside <EmbedPDF>\");\n  return r;\n}\nfunction b() {\n  const { registry: r } = c(), e = u();\n  return a(() => {\n    const o = r.value.getStore();\n    e.value = o.getState().core;\n    const t = o.subscribe((s, n, i) => {\n      o.isCoreAction(s) && !h(n.core, i.core) && (e.value = n.core);\n    });\n    l(t);\n  }), e;\n}\nfunction R(r) {\n  const { registry: e } = c(), o = d(null), t = u(!0), s = u(new Promise(() => {\n  })), n = () => {\n    var g;\n    if (!e.value) return;\n    const i = e.value.getPlugin(r);\n    if (!i) throw new Error(`Plugin ${r} not found`);\n    o.value = i, t.value = !1, s.value = ((g = i.ready) == null ? void 0 : g.call(i)) ?? Promise.resolve();\n  };\n  return a(n), v(e, n), { plugin: o, isLoading: t, ready: s };\n}\nfunction z(r) {\n  const { plugin: e, isLoading: o, ready: t } = R(r);\n  return { provides: y(() => {\n    if (!e.value) return null;\n    if (!e.value.provides)\n      throw new Error(`Plugin ${r} does not implement provides()`);\n    return e.value.provides();\n  }), isLoading: o, ready: t };\n}\nfunction C() {\n  const { registry: r } = c(), e = u();\n  function o() {\n    return r.value ? (e.value = r.value.getStore().getState(), r.value.getStore().subscribe((s, n) => e.value = n)) : () => {\n    };\n  }\n  let t = o();\n  return v(r, () => {\n    t == null || t(), t = o();\n  }), l(() => t == null ? void 0 : t()), e;\n}\nconst F = /* @__PURE__ */ m({\n  __name: \"embed-pdf\",\n  props: {\n    engine: {},\n    plugins: {},\n    onInitialized: { type: Function }\n  },\n  setup(r) {\n    const e = r, o = d(null), t = u(!0), s = u(!1);\n    return P(f, { registry: o, isInitializing: t, pluginsReady: s }), a(async () => {\n      var i;\n      const n = new S(e.engine);\n      n.registerPluginBatch(e.plugins), await n.initialize(), await ((i = e.onInitialized) == null ? void 0 : i.call(e, n)), o.value = n, t.value = !1, n.pluginsReady().then(() => s.value = !0);\n    }), l(() => {\n      var n;\n      return (n = o.value) == null ? void 0 : n.destroy();\n    }), (n, i) => w(n.$slots, \"default\", {\n      registry: o.value,\n      isInitializing: t.value,\n      pluginsReady: s.value\n    });\n  }\n});\nexport {\n  F as EmbedPDF,\n  z as useCapability,\n  b as useCoreState,\n  R as usePlugin,\n  c as useRegistry,\n  C as useStoreState\n};\n//# sourceMappingURL=index.js.map\n","import { useCapability, usePlugin } from '@embedpdf/core/vue';\nimport { TilingPlugin } from '@embedpdf/plugin-tiling';\n\n/** Get the plugin instance itself (e.g. to read config) */\nexport const useTilingPlugin = () => usePlugin<TilingPlugin>(TilingPlugin.id);\n/** Get the *capability* the plugin exposes (renderTile, onTileRendering) */\nexport const useTilingCapability = () => useCapability<TilingPlugin>(TilingPlugin.id);\n","<script setup lang=\"ts\">\nimport { ref, onMounted, onBeforeUnmount, toRaw } from 'vue';\nimport { ignore, PdfErrorCode, PdfErrorReason, Task } from '@embedpdf/models';\nimport type { StyleValue } from 'vue';\n\nimport type { Tile } from '@embedpdf/plugin-tiling';\nimport { useTilingCapability } from '../hooks';\n\ninterface Props {\n  pageIndex: number;\n  tile: Tile;\n  scale: number;\n  dpr?: number;\n  style?: StyleValue;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  dpr: () => window.devicePixelRatio,\n});\n\nconst { provides: tilingCapability } = useTilingCapability();\n\nconst url = ref<string>();\nlet blobUrl: string | null = null;\nlet renderTask: Task<Blob, PdfErrorReason> | null = null;\n\n/* -------------------------------------------------- */\n/* Helper functions                                   */\n/* -------------------------------------------------- */\nfunction revoke() {\n  if (blobUrl) {\n    URL.revokeObjectURL(blobUrl);\n    blobUrl = null;\n  }\n}\n\nfunction abortCurrentTask() {\n  if (renderTask && !blobUrl) {\n    renderTask.abort({\n      code: PdfErrorCode.Cancelled,\n      message: 'canceled tile render',\n    });\n  }\n}\n\n/* -------------------------------------------------- */\n/* start one render task when component mounts        */\n/* -------------------------------------------------- */\nonMounted(() => {\n  if (!tilingCapability.value) return;\n\n  const task = tilingCapability.value.renderTile({\n    pageIndex: props.pageIndex,\n    tile: toRaw(props.tile),\n    dpr: props.dpr,\n  });\n\n  renderTask = task;\n  task.wait((blob) => {\n    blobUrl = URL.createObjectURL(blob);\n    url.value = blobUrl;\n    renderTask = null; // Task completed\n  }, ignore);\n});\n\n/* -------------------------------------------------- */\n/* cleanup                                            */\n/* -------------------------------------------------- */\nonBeforeUnmount(() => {\n  abortCurrentTask();\n  revoke();\n});\n\n/* -------------------------------------------------- */\n/* helpers                                            */\n/* -------------------------------------------------- */\nconst relScale = props.scale / props.tile.srcScale;\n</script>\n\n<template>\n  <img\n    v-if=\"url\"\n    :src=\"url\"\n    :style=\"[\n      {\n        position: 'absolute',\n        left: tile.screenRect.origin.x * relScale + 'px',\n        top: tile.screenRect.origin.y * relScale + 'px',\n        width: tile.screenRect.size.width * relScale + 'px',\n        height: tile.screenRect.size.height * relScale + 'px',\n        display: 'block',\n      },\n      props.style,\n    ]\"\n    @load=\"revoke\"\n  />\n</template>\n","<script setup lang=\"ts\">\nimport type { Tile } from '@embedpdf/plugin-tiling';\nimport { ref, onMounted, onBeforeUnmount } from 'vue';\nimport type { StyleValue } from 'vue';\n\nimport { useTilingCapability } from '../hooks';\nimport TileImg from './tile-img.vue';\n\ninterface Props {\n  pageIndex: number;\n  scale: number;\n  style?: StyleValue;\n}\n\nconst props = defineProps<Props>();\n\nconst tiles = ref<Tile[]>([]);\nconst { provides: tilingProvides } = useTilingCapability();\n\nlet unsubscribe: (() => void) | undefined;\n\nonMounted(() => {\n  if (tilingProvides.value) {\n    unsubscribe = tilingProvides.value.onTileRendering((tilesMap) => {\n      tiles.value = tilesMap[props.pageIndex] ?? [];\n    });\n  }\n});\n\nonBeforeUnmount(() => {\n  unsubscribe?.();\n});\n</script>\n\n<template>\n  <div :style=\"style\" v-bind=\"$attrs\">\n    <TileImg\n      v-for=\"tile in tiles\"\n      :key=\"tile.id\"\n      :pageIndex=\"pageIndex\"\n      :tile=\"tile\"\n      :scale=\"scale\"\n    />\n  </div>\n</template>\n"],"names":["f","c","r","p","R","e","d","t","u","s","n","g","i","a","v","z","y","useTilingPlugin","usePlugin","TilingPlugin","useTilingCapability","useCapability","props","__props","tilingCapability","url","ref","blobUrl","renderTask","revoke","abortCurrentTask","PdfErrorCode","onMounted","task","toRaw","blob","ignore","onBeforeUnmount","relScale","_createElementBlock","_normalizeStyle","tile","tiles","tilingProvides","unsubscribe","tilesMap","_openBlock","_mergeProps","style","$attrs","_Fragment","_renderList","_createBlock","TileImg","pageIndex","scale"],"mappings":"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"}