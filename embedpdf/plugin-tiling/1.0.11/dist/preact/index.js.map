{"version":3,"file":"index.js","sources":["../../../core/dist/preact/index.js","../../src/preact/hooks/use-tiling.ts","../../src/preact/components/tile-img.tsx","../../src/preact/components/tiling-layer.tsx"],"sourcesContent":["import { createContext as b } from \"preact\";\nimport { u as w } from \"../jsxRuntime.module-Bzuv3cXw.js\";\nimport { useState as a, useRef as m, useEffect as f, useContext as S } from \"preact/hooks\";\nimport { P as v, a as C } from \"../math-ChSRQF3r.js\";\nconst P = b({\n  registry: null,\n  isInitializing: !0,\n  pluginsReady: !1\n});\nfunction F({ engine: t, onInitialized: r, plugins: e, children: i }) {\n  const [o, s] = a(null), [u, c] = a(!0), [y, d] = a(!1), l = m(r);\n  return f(() => {\n    l.current = r;\n  }, [r]), f(() => {\n    const n = new v(t);\n    return n.registerPluginBatch(e), (async () => {\n      var p;\n      await n.initialize(), !n.isDestroyed() && (await ((p = l.current) == null ? void 0 : p.call(l, n)), !n.isDestroyed() && (n.pluginsReady().then(() => {\n        n.isDestroyed() || d(!0);\n      }), s(n), c(!1)));\n    })().catch(console.error), () => {\n      n.destroy(), s(null), c(!0), d(!1);\n    };\n  }, [t, e]), /* @__PURE__ */ w(P.Provider, { value: { registry: o, isInitializing: u, pluginsReady: y }, children: typeof i == \"function\" ? i({ registry: o, isInitializing: u, pluginsReady: y }) : i });\n}\nfunction g() {\n  const t = S(P);\n  if (t === void 0)\n    throw new Error(\"useCapability must be used within a PDFContext.Provider\");\n  const { registry: r, isInitializing: e } = t;\n  if (e)\n    return t;\n  if (r === null)\n    throw new Error(\"PDF registry failed to initialize properly\");\n  return t;\n}\nfunction h(t) {\n  const { registry: r } = g();\n  if (r === null)\n    return {\n      plugin: null,\n      isLoading: !0,\n      ready: new Promise(() => {\n      })\n    };\n  const e = r.getPlugin(t);\n  if (!e)\n    throw new Error(`Plugin ${t} not found`);\n  return {\n    plugin: e,\n    isLoading: !1,\n    ready: e.ready()\n  };\n}\nfunction L(t) {\n  const { plugin: r, isLoading: e, ready: i } = h(t);\n  if (!r)\n    return {\n      provides: null,\n      isLoading: e,\n      ready: i\n    };\n  if (!r.provides)\n    throw new Error(`Plugin ${t} does not provide a capability`);\n  return {\n    provides: r.provides(),\n    isLoading: e,\n    ready: i\n  };\n}\nfunction V() {\n  const { registry: t } = g(), [r, e] = a(null);\n  return f(() => {\n    if (!t) return;\n    e(t.getStore().getState());\n    const i = t.getStore().subscribe((o, s) => {\n      e(s);\n    });\n    return () => i();\n  }, [t]), r;\n}\nfunction $() {\n  const { registry: t } = g(), [r, e] = a(null);\n  return f(() => {\n    if (!t) return;\n    const i = t.getStore();\n    e(i.getState().core);\n    const o = i.subscribe((s, u, c) => {\n      i.isCoreAction(s) && !C(u.core, c.core) && e(u.core);\n    });\n    return () => o();\n  }, [t]), r;\n}\nexport {\n  F as EmbedPDF,\n  P as PDFContext,\n  L as useCapability,\n  $ as useCoreState,\n  h as usePlugin,\n  g as useRegistry,\n  V as useStoreState\n};\n//# sourceMappingURL=index.js.map\n","import { useCapability, usePlugin } from '@embedpdf/core/preact';\nimport { TilingPlugin } from '@embedpdf/plugin-tiling';\n\nexport const useTilingPlugin = () => usePlugin<TilingPlugin>(TilingPlugin.id);\nexport const useTilingCapability = () => useCapability<TilingPlugin>(TilingPlugin.id);\n","/** @jsxImportSource preact */\nimport { ignore, PdfErrorCode } from '@embedpdf/models';\nimport { Tile } from '@embedpdf/plugin-tiling';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { useTilingCapability } from '../hooks/use-tiling';\n\ninterface TileImgProps {\n  pageIndex: number;\n  tile: Tile;\n  dpr: number;\n  scale: number;\n}\n\nexport function TileImg({ pageIndex, tile, dpr, scale }: TileImgProps) {\n  const { provides: tilingCapability } = useTilingCapability();\n  const [url, setUrl] = useState<string>();\n  const urlRef = useRef<string | null>(null);\n\n  const relativeScale = scale / tile.srcScale;\n\n  /* kick off render exactly once per tile */\n  useEffect(() => {\n    if (tile.status === 'ready' && urlRef.current) return; // already done\n    if (!tilingCapability) return;\n    const task = tilingCapability.renderTile({ pageIndex, tile, dpr });\n    task.wait((blob) => {\n      const objectUrl = URL.createObjectURL(blob);\n      urlRef.current = objectUrl;\n      setUrl(objectUrl);\n    }, ignore);\n\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = null;\n      } else {\n        task.abort({\n          code: PdfErrorCode.Cancelled,\n          message: 'canceled render task',\n        });\n      }\n    };\n  }, [pageIndex, tile.id]); // id includes scale, so unique\n\n  const handleImageLoad = () => {\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n      urlRef.current = null;\n    }\n  };\n\n  if (!url) return null; // could render a placeholder\n  return (\n    <img\n      src={url}\n      onLoad={handleImageLoad}\n      style={{\n        position: 'absolute',\n        left: tile.screenRect.origin.x * relativeScale,\n        top: tile.screenRect.origin.y * relativeScale,\n        width: tile.screenRect.size.width * relativeScale,\n        height: tile.screenRect.size.height * relativeScale,\n        display: 'block',\n      }}\n    />\n  );\n}\n","/** @jsxImportSource preact */\nimport { Tile } from '@embedpdf/plugin-tiling';\nimport { JSX } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport { TileImg } from './tile-img';\nimport { useTilingCapability } from '../hooks/use-tiling';\n\ntype TilingLayoutProps = Omit<JSX.HTMLAttributes<HTMLDivElement>, 'style'> & {\n  pageIndex: number;\n  scale: number;\n  style?: JSX.CSSProperties;\n};\n\nexport function TilingLayer({ pageIndex, scale, style, ...props }: TilingLayoutProps) {\n  const { provides: tilingProvides } = useTilingCapability();\n  const [tiles, setTiles] = useState<Tile[]>([]);\n\n  useEffect(() => {\n    if (tilingProvides) {\n      return tilingProvides.onTileRendering((tiles) => setTiles(tiles[pageIndex]));\n    }\n  }, [tilingProvides]);\n\n  return (\n    <div\n      style={{\n        ...style,\n      }}\n      {...props}\n    >\n      {tiles?.map((tile) => (\n        <TileImg\n          key={tile.id}\n          pageIndex={pageIndex}\n          tile={tile}\n          dpr={window.devicePixelRatio}\n          scale={scale}\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":["P","b","g","t","S","r","e","h","L","i","useTilingPlugin","usePlugin","TilingPlugin","useTilingCapability","useCapability","TileImg","pageIndex","tile","dpr","scale","tilingCapability","url","setUrl","useState","urlRef","useRef","relativeScale","useEffect","task","blob","objectUrl","ignore","PdfErrorCode","handleImageLoad","jsx","TilingLayer","style","props","tilingProvides","tiles","setTiles"],"mappings":"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"}