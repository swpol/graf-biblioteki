{"version":3,"file":"index.cjs","sources":["../../src/preact/hooks/use-tiling.ts","../../src/preact/components/tile-img.tsx","../../src/preact/components/tiling-layer.tsx"],"sourcesContent":["import { useCapability, usePlugin } from '@embedpdf/core/preact';\nimport { TilingPlugin } from '@embedpdf/plugin-tiling';\n\nexport const useTilingPlugin = () => usePlugin<TilingPlugin>(TilingPlugin.id);\nexport const useTilingCapability = () => useCapability<TilingPlugin>(TilingPlugin.id);\n","/** @jsxImportSource preact */\nimport { ignore, PdfErrorCode } from '@embedpdf/models';\nimport { Tile } from '@embedpdf/plugin-tiling';\nimport { useEffect, useRef, useState } from 'preact/hooks';\n\nimport { useTilingCapability } from '../hooks/use-tiling';\n\ninterface TileImgProps {\n  pageIndex: number;\n  tile: Tile;\n  dpr: number;\n  scale: number;\n}\n\nexport function TileImg({ pageIndex, tile, dpr, scale }: TileImgProps) {\n  const { provides: tilingCapability } = useTilingCapability();\n  const [url, setUrl] = useState<string>();\n  const urlRef = useRef<string | null>(null);\n\n  const relativeScale = scale / tile.srcScale;\n\n  /* kick off render exactly once per tile */\n  useEffect(() => {\n    if (tile.status === 'ready' && urlRef.current) return; // already done\n    if (!tilingCapability) return;\n    const task = tilingCapability.renderTile({ pageIndex, tile, dpr });\n    task.wait((blob) => {\n      const objectUrl = URL.createObjectURL(blob);\n      urlRef.current = objectUrl;\n      setUrl(objectUrl);\n    }, ignore);\n\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = null;\n      } else {\n        task.abort({\n          code: PdfErrorCode.Cancelled,\n          message: 'canceled render task',\n        });\n      }\n    };\n  }, [pageIndex, tile.id]); // id includes scale, so unique\n\n  const handleImageLoad = () => {\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n      urlRef.current = null;\n    }\n  };\n\n  if (!url) return null; // could render a placeholder\n  return (\n    <img\n      src={url}\n      onLoad={handleImageLoad}\n      style={{\n        position: 'absolute',\n        left: tile.screenRect.origin.x * relativeScale,\n        top: tile.screenRect.origin.y * relativeScale,\n        width: tile.screenRect.size.width * relativeScale,\n        height: tile.screenRect.size.height * relativeScale,\n        display: 'block',\n      }}\n    />\n  );\n}\n","/** @jsxImportSource preact */\nimport { Tile } from '@embedpdf/plugin-tiling';\nimport { JSX } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\n\nimport { TileImg } from './tile-img';\nimport { useTilingCapability } from '../hooks/use-tiling';\n\ntype TilingLayoutProps = Omit<JSX.HTMLAttributes<HTMLDivElement>, 'style'> & {\n  pageIndex: number;\n  scale: number;\n  style?: JSX.CSSProperties;\n};\n\nexport function TilingLayer({ pageIndex, scale, style, ...props }: TilingLayoutProps) {\n  const { provides: tilingProvides } = useTilingCapability();\n  const [tiles, setTiles] = useState<Tile[]>([]);\n\n  useEffect(() => {\n    if (tilingProvides) {\n      return tilingProvides.onTileRendering((tiles) => setTiles(tiles[pageIndex]));\n    }\n  }, [tilingProvides]);\n\n  return (\n    <div\n      style={{\n        ...style,\n      }}\n      {...props}\n    >\n      {tiles?.map((tile) => (\n        <TileImg\n          key={tile.id}\n          pageIndex={pageIndex}\n          tile={tile}\n          dpr={window.devicePixelRatio}\n          scale={scale}\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":["useTilingPlugin","usePlugin","TilingPlugin","useTilingCapability","useCapability","TileImg","pageIndex","tile","dpr","scale","tilingCapability","url","setUrl","useState","urlRef","useRef","relativeScale","useEffect","task","blob","objectUrl","ignore","PdfErrorCode","handleImageLoad","jsx","TilingLayer","style","props","tilingProvides","tiles","setTiles"],"mappings":"sPAGaA,EAAkB,IAAMC,YAAwBC,EAAAA,aAAa,EAAE,EAC/DC,EAAsB,IAAMC,gBAA4BF,EAAAA,aAAa,EAAE,ECU7E,SAASG,EAAQ,CAAE,UAAAC,EAAW,KAAAC,EAAM,IAAAC,EAAK,MAAAC,GAAuB,CACrE,KAAM,CAAE,SAAUC,CAAiB,EAAIP,EAAoB,EACrD,CAACQ,EAAKC,CAAM,EAAIC,WAAiB,EACjCC,EAASC,SAAsB,IAAI,EAEnCC,EAAgBP,EAAQF,EAAK,SAGnCU,EAAAA,UAAU,IAAM,CAEd,GADIV,EAAK,SAAW,SAAWO,EAAO,SAClC,CAACJ,EAAkB,OACvB,MAAMQ,EAAOR,EAAiB,WAAW,CAAE,UAAAJ,EAAW,KAAAC,EAAM,IAAAC,EAAK,EAC5D,OAAAU,EAAA,KAAMC,GAAS,CACZ,MAAAC,EAAY,IAAI,gBAAgBD,CAAI,EAC1CL,EAAO,QAAUM,EACjBR,EAAOQ,CAAS,GACfC,QAAM,EAEF,IAAM,CACPP,EAAO,SACL,IAAA,gBAAgBA,EAAO,OAAO,EAClCA,EAAO,QAAU,MAEjBI,EAAK,MAAM,CACT,KAAMI,EAAa,aAAA,UACnB,QAAS,sBAAA,CACV,CAEL,CACC,EAAA,CAAChB,EAAWC,EAAK,EAAE,CAAC,EAEvB,MAAMgB,EAAkB,IAAM,CACxBT,EAAO,UACL,IAAA,gBAAgBA,EAAO,OAAO,EAClCA,EAAO,QAAU,KAErB,EAEI,OAACH,EAEHa,EAAA,IAAC,MAAA,CACC,IAAKb,EACL,OAAQY,EACR,MAAO,CACL,SAAU,WACV,KAAMhB,EAAK,WAAW,OAAO,EAAIS,EACjC,IAAKT,EAAK,WAAW,OAAO,EAAIS,EAChC,MAAOT,EAAK,WAAW,KAAK,MAAQS,EACpC,OAAQT,EAAK,WAAW,KAAK,OAASS,EACtC,QAAS,OAAA,CACX,CACF,EAbe,IAenB,CCrDO,SAASS,EAAY,CAAE,UAAAnB,EAAW,MAAAG,EAAO,MAAAiB,EAAO,GAAGC,GAA4B,CACpF,KAAM,CAAE,SAAUC,CAAe,EAAIzB,EAAoB,EACnD,CAAC0B,EAAOC,CAAQ,EAAIjB,EAAAA,SAAiB,CAAA,CAAE,EAE7CI,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAIW,EACK,OAAAA,EAAe,gBAAiBC,GAAUC,EAASD,EAAMvB,CAAS,CAAC,CAAC,CAC7E,EACC,CAACsB,CAAc,CAAC,EAGjBJ,EAAA,IAAC,MAAA,CACC,MAAO,CACL,GAAGE,CACL,EACC,GAAGC,EAEH,SAAAE,GAAA,YAAAA,EAAO,IAAKtB,GACXiB,EAAA,IAACnB,EAAA,CAEC,UAAAC,EACA,KAAAC,EACA,IAAK,OAAO,iBACZ,MAAAE,CAAA,EAJKF,EAAK,EAMb,EAAA,CACH,CAEJ"}