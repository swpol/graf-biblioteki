{"version":3,"file":"index.js","sources":["../src/lib/manifest.ts","../src/lib/reducer.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\n\nimport { TilingPluginConfig } from './types';\n\nexport const TILING_PLUGIN_ID = 'tiling';\n\nexport const manifest: PluginManifest<TilingPluginConfig> = {\n  id: TILING_PLUGIN_ID,\n  name: 'Tiling Plugin',\n  version: '1.0.0',\n  provides: ['tiling'],\n  requires: ['render', 'scroll', 'viewport'],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n    tileSize: 768,\n    overlapPx: 2.5,\n    extraRings: 0,\n  },\n};\n","import { Reducer } from '@embedpdf/core';\n\nimport { UPDATE_VISIBLE_TILES, MARK_TILE_STATUS, TilingAction } from './actions';\nimport { Tile, TilingState } from './types';\n\nexport const initialState: TilingState = {\n  visibleTiles: {},\n};\n\nexport const tilingReducer: Reducer<TilingState, TilingAction> = (state, action) => {\n  switch (action.type) {\n    case UPDATE_VISIBLE_TILES: {\n      const incoming = action.payload; // Record<number, Tile[]>\n      const nextPages = { ...state.visibleTiles };\n\n      for (const key in incoming) {\n        const pageIndex = Number(key);\n        const newTiles = incoming[pageIndex]; // all isFallback=false\n        const prevTiles = nextPages[pageIndex] ?? [];\n\n        const prevScale = prevTiles.find((t) => !t.isFallback)?.srcScale;\n        const newScale = newTiles[0].srcScale;\n        const zoomChanged = prevScale !== undefined && prevScale !== newScale;\n\n        if (zoomChanged) {\n          /* 1️⃣  ready tiles from the old zoom → new fallback */\n          const promoted = prevTiles\n            .filter((t) => !t.isFallback && t.status === 'ready')\n            .map((t) => ({ ...t, isFallback: true }));\n\n          /* 2️⃣  decide which fallback tiles to keep           */\n          const fallbackToCarry = promoted.length > 0 ? [] : prevTiles.filter((t) => t.isFallback);\n\n          /* 3️⃣  final list = (maybe-kept fallback) + promoted + newTiles */\n          nextPages[pageIndex] = [...fallbackToCarry, ...promoted, ...newTiles];\n        } else {\n          /* same zoom → keep current fallback, replace visible */\n          const newIds = new Set(newTiles.map((t) => t.id));\n          const keepers: Tile[] = []; // where we’ll collect surviving tiles\n          const seenIds = new Set<string>();\n\n          /* 2️⃣  loop prevTiles once */\n          for (const t of prevTiles) {\n            if (t.isFallback) {\n              keepers.push(t); // always keep fallback\n              seenIds.add(t.id);\n            } else if (newIds.has(t.id)) {\n              keepers.push(t); // keep old visible tile (preserves status)\n              seenIds.add(t.id);\n            }\n          }\n\n          /* 3️⃣  append *brand-new* tiles (not yet kept) */\n          for (const t of newTiles) {\n            if (!seenIds.has(t.id)) keepers.push(t);\n          }\n\n          /* 4️⃣  store result */\n          nextPages[pageIndex] = keepers;\n        }\n      }\n\n      return { ...state, visibleTiles: nextPages };\n    }\n\n    case MARK_TILE_STATUS: {\n      const { pageIndex, tileId, status } = action.payload;\n      const tiles =\n        state.visibleTiles[pageIndex]?.map((t) =>\n          t.id === tileId ? ({ ...t, status } as Tile) : t,\n        ) ?? [];\n\n      const newTiles = tiles.filter((t) => !t.isFallback);\n      const allReady = newTiles.every((t) => t.status === 'ready');\n      const finalTiles = allReady ? newTiles : tiles;\n\n      return {\n        ...state,\n        visibleTiles: { ...state.visibleTiles, [pageIndex]: finalTiles },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { PluginPackage } from '@embedpdf/core';\n\nimport { TilingAction } from './actions';\nimport { manifest, TILING_PLUGIN_ID } from './manifest';\nimport { initialState, tilingReducer } from './reducer';\nimport { TilingPlugin } from './tiling-plugin';\nimport { TilingPluginConfig, TilingState } from './types';\n\nexport const TilingPluginPackage: PluginPackage<\n  TilingPlugin,\n  TilingPluginConfig,\n  TilingState,\n  TilingAction\n> = {\n  manifest,\n  create: (registry, _engine, config) => new TilingPlugin(TILING_PLUGIN_ID, registry, config),\n  reducer: (state, action) => tilingReducer(state, action),\n  initialState,\n};\n\nexport * from './tiling-plugin';\nexport * from './types';\nexport * from './manifest';\n"],"names":["TILING_PLUGIN_ID","manifest","initialState","tilingReducer","state","action","UPDATE_VISIBLE_TILES","incoming","nextPages","key","pageIndex","newTiles","prevTiles","prevScale","_a","t","newScale","promoted","fallbackToCarry","newIds","keepers","seenIds","MARK_TILE_STATUS","tileId","status","tiles","_b","finalTiles","TilingPluginPackage","registry","_engine","config","TilingPlugin"],"mappings":";AAIO,MAAMA,IAAmB,UAEnBC,IAA+C;AAAA,EAC1D,IAAID;AAAA,EACJ,MAAM;AAAA,EACN,SAAS;AAAA,EACT,UAAU,CAAC,QAAQ;AAAA,EACnB,UAAU,CAAC,UAAU,UAAU,UAAU;AAAA,EACzC,UAAU,CAAA;AAAA,EACV,eAAe;AAAA,IACb,SAAS;AAAA,IACT,UAAU;AAAA,IACV,WAAW;AAAA,IACX,YAAY;AAAA,EAAA;AAEhB,GCdaE,IAA4B;AAAA,EACvC,cAAc,CAAA;AAChB,GAEaC,IAAoD,CAACC,GAAOC,MAAW;;AAClF,UAAQA,EAAO,MAAA;AAAA,IACb,KAAKC,GAAsB;AACzB,YAAMC,IAAWF,EAAO,SAClBG,IAAY,EAAE,GAAGJ,EAAM,aAAA;AAE7B,iBAAWK,KAAOF,GAAU;AAC1B,cAAMG,IAAY,OAAOD,CAAG,GACtBE,IAAWJ,EAASG,CAAS,GAC7BE,IAAYJ,EAAUE,CAAS,KAAK,CAAA,GAEpCG,KAAYC,IAAAF,EAAU,KAAK,CAACG,MAAM,CAACA,EAAE,UAAU,MAAnC,gBAAAD,EAAsC,UAClDE,IAAWL,EAAS,CAAC,EAAE;AAG7B,YAFoBE,MAAc,UAAaA,MAAcG,GAE5C;AAEf,gBAAMC,IAAWL,EACd,OAAO,CAACG,MAAM,CAACA,EAAE,cAAcA,EAAE,WAAW,OAAO,EACnD,IAAI,CAACA,OAAO,EAAE,GAAGA,GAAG,YAAY,KAAO,GAGpCG,IAAkBD,EAAS,SAAS,IAAI,CAAA,IAAKL,EAAU,OAAO,CAACG,MAAMA,EAAE,UAAU;AAGvF,UAAAP,EAAUE,CAAS,IAAI,CAAC,GAAGQ,GAAiB,GAAGD,GAAU,GAAGN,CAAQ;AAAA,QACtE,OAAO;AAEL,gBAAMQ,IAAS,IAAI,IAAIR,EAAS,IAAI,CAACI,MAAMA,EAAE,EAAE,CAAC,GAC1CK,IAAkB,CAAA,GAClBC,wBAAc,IAAA;AAGpB,qBAAWN,KAAKH;AACd,aAAIG,EAAE,cAGKI,EAAO,IAAIJ,EAAE,EAAE,OACxBK,EAAQ,KAAKL,CAAC,GACdM,EAAQ,IAAIN,EAAE,EAAE;AAKpB,qBAAWA,KAAKJ;AACd,YAAKU,EAAQ,IAAIN,EAAE,EAAE,KAAGK,EAAQ,KAAKL,CAAC;AAIxC,UAAAP,EAAUE,CAAS,IAAIU;AAAA,QACzB;AAAA,MACF;AAEA,aAAO,EAAE,GAAGhB,GAAO,cAAcI,EAAA;AAAA,IACnC;AAAA,IAEA,KAAKc,GAAkB;AACrB,YAAM,EAAE,WAAAZ,GAAW,QAAAa,GAAQ,QAAAC,EAAA,IAAWnB,EAAO,SACvCoB,MACJC,IAAAtB,EAAM,aAAaM,CAAS,MAA5B,gBAAAgB,EAA+B;AAAA,QAAI,CAACX,MAClCA,EAAE,OAAOQ,IAAU,EAAE,GAAGR,GAAG,QAAAS,MAAoBT;AAAA,YAC5C,CAAA,GAEDJ,IAAWc,EAAM,OAAO,CAACV,MAAM,CAACA,EAAE,UAAU,GAE5CY,IADWhB,EAAS,MAAM,CAACI,MAAMA,EAAE,WAAW,OAAO,IAC7BJ,IAAWc;AAEzC,aAAO;AAAA,QACL,GAAGrB;AAAA,QACH,cAAc,EAAE,GAAGA,EAAM,cAAc,CAACM,CAAS,GAAGiB,EAAA;AAAA,MAAW;AAAA,IAEnE;AAAA,IAEA;AACE,aAAOvB;AAAA,EAAA;AAEb,GC7EawB,IAKT;AAAA,EACF,UAAA3B;AAAA,EACA,QAAQ,CAAC4B,GAAUC,GAASC,MAAW,IAAIC,EAAahC,GAAkB6B,GAAUE,CAAM;AAAA,EAC1F,SAAS,CAAC3B,GAAOC,MAAWF,EAAcC,GAAOC,CAAM;AAAA,EACvD,cAAAH;AACF;"}