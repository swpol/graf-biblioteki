{"version":3,"file":"index.js","sources":["../../src/react/hooks/use-tiling.ts","../../src/react/components/tile-img.tsx","../../src/react/components/tiling-layer.tsx"],"sourcesContent":["import { useCapability, usePlugin } from '@embedpdf/core/react';\nimport { TilingPlugin } from '@embedpdf/plugin-tiling';\n\nexport const useTilingPlugin = () => usePlugin<TilingPlugin>(TilingPlugin.id);\nexport const useTilingCapability = () => useCapability<TilingPlugin>(TilingPlugin.id);\n","import { ignore, PdfErrorCode } from '@embedpdf/models';\nimport { Tile } from '@embedpdf/plugin-tiling';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { useTilingCapability } from '../hooks/use-tiling';\n\ninterface TileImgProps {\n  pageIndex: number;\n  tile: Tile;\n  dpr: number;\n  scale: number;\n}\n\nexport function TileImg({ pageIndex, tile, dpr, scale }: TileImgProps) {\n  const { provides: tilingCapability } = useTilingCapability();\n  const [url, setUrl] = useState<string>();\n  const urlRef = useRef<string | null>(null);\n\n  const relativeScale = scale / tile.srcScale;\n\n  /* kick off render exactly once per tile */\n  useEffect(() => {\n    if (tile.status === 'ready' && urlRef.current) return; // already done\n    if (!tilingCapability) return;\n    const task = tilingCapability.renderTile({ pageIndex, tile, dpr });\n    task.wait((blob) => {\n      const objectUrl = URL.createObjectURL(blob);\n      urlRef.current = objectUrl;\n      setUrl(objectUrl);\n    }, ignore);\n\n    return () => {\n      if (urlRef.current) {\n        URL.revokeObjectURL(urlRef.current);\n        urlRef.current = null;\n      } else {\n        task.abort({\n          code: PdfErrorCode.Cancelled,\n          message: 'canceled render task',\n        });\n      }\n    };\n  }, [pageIndex, tile.id]); // id includes scale, so unique\n\n  const handleImageLoad = () => {\n    if (urlRef.current) {\n      URL.revokeObjectURL(urlRef.current);\n      urlRef.current = null;\n    }\n  };\n\n  if (!url) return null; // could render a placeholder\n  return (\n    <img\n      src={url}\n      onLoad={handleImageLoad}\n      style={{\n        position: 'absolute',\n        left: tile.screenRect.origin.x * relativeScale,\n        top: tile.screenRect.origin.y * relativeScale,\n        width: tile.screenRect.size.width * relativeScale,\n        height: tile.screenRect.size.height * relativeScale,\n        display: 'block',\n      }}\n    />\n  );\n}\n","import { Tile } from '@embedpdf/plugin-tiling';\nimport { useEffect, useState } from 'react';\n\nimport { TileImg } from './tile-img';\nimport { useTilingCapability } from '../hooks/use-tiling';\n\ntype TilingLayoutProps = Omit<React.HTMLAttributes<HTMLDivElement>, 'style'> & {\n  pageIndex: number;\n  scale: number;\n  style?: React.CSSProperties;\n};\n\nexport function TilingLayer({ pageIndex, scale, style, ...props }: TilingLayoutProps) {\n  const { provides: tilingProvides } = useTilingCapability();\n  const [tiles, setTiles] = useState<Tile[]>([]);\n\n  useEffect(() => {\n    if (tilingProvides) {\n      return tilingProvides.onTileRendering((tiles) => setTiles(tiles[pageIndex]));\n    }\n  }, [tilingProvides]);\n\n  return (\n    <div\n      style={{\n        ...style,\n      }}\n      {...props}\n    >\n      {tiles?.map((tile) => (\n        <TileImg\n          key={tile.id}\n          pageIndex={pageIndex}\n          tile={tile}\n          dpr={window.devicePixelRatio}\n          scale={scale}\n        />\n      ))}\n    </div>\n  );\n}\n"],"names":["useTilingPlugin","usePlugin","TilingPlugin","useTilingCapability","useCapability","TileImg","pageIndex","tile","dpr","scale","tilingCapability","url","setUrl","useState","urlRef","useRef","relativeScale","useEffect","task","blob","objectUrl","ignore","PdfErrorCode","handleImageLoad","jsx","TilingLayer","style","props","tilingProvides","tiles","setTiles"],"mappings":";;;;;AAGO,MAAMA,IAAkB,MAAMC,EAAwBC,EAAa,EAAE,GAC/DC,IAAsB,MAAMC,EAA4BF,EAAa,EAAE;ACS7E,SAASG,EAAQ,EAAE,WAAAC,GAAW,MAAAC,GAAM,KAAAC,GAAK,OAAAC,KAAuB;AACrE,QAAM,EAAE,UAAUC,EAAiB,IAAIP,EAAoB,GACrD,CAACQ,GAAKC,CAAM,IAAIC,EAAiB,GACjCC,IAASC,EAAsB,IAAI,GAEnCC,IAAgBP,IAAQF,EAAK;AAGnC,EAAAU,EAAU,MAAM;AAEd,QADIV,EAAK,WAAW,WAAWO,EAAO,WAClC,CAACJ,EAAkB;AACvB,UAAMQ,IAAOR,EAAiB,WAAW,EAAE,WAAAJ,GAAW,MAAAC,GAAM,KAAAC,GAAK;AAC5D,WAAAU,EAAA,KAAK,CAACC,MAAS;AACZ,YAAAC,IAAY,IAAI,gBAAgBD,CAAI;AAC1C,MAAAL,EAAO,UAAUM,GACjBR,EAAOQ,CAAS;AAAA,OACfC,CAAM,GAEF,MAAM;AACX,MAAIP,EAAO,WACL,IAAA,gBAAgBA,EAAO,OAAO,GAClCA,EAAO,UAAU,QAEjBI,EAAK,MAAM;AAAA,QACT,MAAMI,EAAa;AAAA,QACnB,SAAS;AAAA,MAAA,CACV;AAAA,IAEL;AAAA,EACC,GAAA,CAAChB,GAAWC,EAAK,EAAE,CAAC;AAEvB,QAAMgB,IAAkB,MAAM;AAC5B,IAAIT,EAAO,YACL,IAAA,gBAAgBA,EAAO,OAAO,GAClCA,EAAO,UAAU;AAAA,EAErB;AAEI,SAACH,IAEH,gBAAAa;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAKb;AAAA,MACL,QAAQY;AAAA,MACR,OAAO;AAAA,QACL,UAAU;AAAA,QACV,MAAMhB,EAAK,WAAW,OAAO,IAAIS;AAAA,QACjC,KAAKT,EAAK,WAAW,OAAO,IAAIS;AAAA,QAChC,OAAOT,EAAK,WAAW,KAAK,QAAQS;AAAA,QACpC,QAAQT,EAAK,WAAW,KAAK,SAASS;AAAA,QACtC,SAAS;AAAA,MAAA;AAAA,IACX;AAAA,EACF,IAbe;AAenB;ACtDO,SAASS,EAAY,EAAE,WAAAnB,GAAW,OAAAG,GAAO,OAAAiB,GAAO,GAAGC,KAA4B;AACpF,QAAM,EAAE,UAAUC,EAAe,IAAIzB,EAAoB,GACnD,CAAC0B,GAAOC,CAAQ,IAAIjB,EAAiB,CAAA,CAAE;AAE7C,SAAAI,EAAU,MAAM;AACd,QAAIW;AACK,aAAAA,EAAe,gBAAgB,CAACC,MAAUC,EAASD,EAAMvB,CAAS,CAAC,CAAC;AAAA,EAC7E,GACC,CAACsB,CAAc,CAAC,GAGjB,gBAAAJ;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,OAAO;AAAA,QACL,GAAGE;AAAA,MACL;AAAA,MACC,GAAGC;AAAA,MAEH,UAAAE,KAAA,gBAAAA,EAAO,IAAI,CAACtB,MACX,gBAAAiB;AAAA,QAACnB;AAAA,QAAA;AAAA,UAEC,WAAAC;AAAA,UACA,MAAAC;AAAA,UACA,KAAK,OAAO;AAAA,UACZ,OAAAE;AAAA,QAAA;AAAA,QAJKF,EAAK;AAAA,MAMb;AAAA,IAAA;AAAA,EACH;AAEJ;"}