{"version":3,"file":"index.cjs","sources":["../src/lib/manifest.ts","../src/lib/reducer.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\n\nimport { TilingPluginConfig } from './types';\n\nexport const TILING_PLUGIN_ID = 'tiling';\n\nexport const manifest: PluginManifest<TilingPluginConfig> = {\n  id: TILING_PLUGIN_ID,\n  name: 'Tiling Plugin',\n  version: '1.0.0',\n  provides: ['tiling'],\n  requires: ['render', 'scroll', 'viewport'],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n    tileSize: 768,\n    overlapPx: 2.5,\n    extraRings: 0,\n  },\n};\n","import { Reducer } from '@embedpdf/core';\n\nimport { UPDATE_VISIBLE_TILES, MARK_TILE_STATUS, TilingAction } from './actions';\nimport { Tile, TilingState } from './types';\n\nexport const initialState: TilingState = {\n  visibleTiles: {},\n};\n\nexport const tilingReducer: Reducer<TilingState, TilingAction> = (state, action) => {\n  switch (action.type) {\n    case UPDATE_VISIBLE_TILES: {\n      const incoming = action.payload; // Record<number, Tile[]>\n      const nextPages = { ...state.visibleTiles };\n\n      for (const key in incoming) {\n        const pageIndex = Number(key);\n        const newTiles = incoming[pageIndex]; // all isFallback=false\n        const prevTiles = nextPages[pageIndex] ?? [];\n\n        const prevScale = prevTiles.find((t) => !t.isFallback)?.srcScale;\n        const newScale = newTiles[0].srcScale;\n        const zoomChanged = prevScale !== undefined && prevScale !== newScale;\n\n        if (zoomChanged) {\n          /* 1️⃣  ready tiles from the old zoom → new fallback */\n          const promoted = prevTiles\n            .filter((t) => !t.isFallback && t.status === 'ready')\n            .map((t) => ({ ...t, isFallback: true }));\n\n          /* 2️⃣  decide which fallback tiles to keep           */\n          const fallbackToCarry = promoted.length > 0 ? [] : prevTiles.filter((t) => t.isFallback);\n\n          /* 3️⃣  final list = (maybe-kept fallback) + promoted + newTiles */\n          nextPages[pageIndex] = [...fallbackToCarry, ...promoted, ...newTiles];\n        } else {\n          /* same zoom → keep current fallback, replace visible */\n          const newIds = new Set(newTiles.map((t) => t.id));\n          const keepers: Tile[] = []; // where we’ll collect surviving tiles\n          const seenIds = new Set<string>();\n\n          /* 2️⃣  loop prevTiles once */\n          for (const t of prevTiles) {\n            if (t.isFallback) {\n              keepers.push(t); // always keep fallback\n              seenIds.add(t.id);\n            } else if (newIds.has(t.id)) {\n              keepers.push(t); // keep old visible tile (preserves status)\n              seenIds.add(t.id);\n            }\n          }\n\n          /* 3️⃣  append *brand-new* tiles (not yet kept) */\n          for (const t of newTiles) {\n            if (!seenIds.has(t.id)) keepers.push(t);\n          }\n\n          /* 4️⃣  store result */\n          nextPages[pageIndex] = keepers;\n        }\n      }\n\n      return { ...state, visibleTiles: nextPages };\n    }\n\n    case MARK_TILE_STATUS: {\n      const { pageIndex, tileId, status } = action.payload;\n      const tiles =\n        state.visibleTiles[pageIndex]?.map((t) =>\n          t.id === tileId ? ({ ...t, status } as Tile) : t,\n        ) ?? [];\n\n      const newTiles = tiles.filter((t) => !t.isFallback);\n      const allReady = newTiles.every((t) => t.status === 'ready');\n      const finalTiles = allReady ? newTiles : tiles;\n\n      return {\n        ...state,\n        visibleTiles: { ...state.visibleTiles, [pageIndex]: finalTiles },\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { PluginPackage } from '@embedpdf/core';\n\nimport { TilingAction } from './actions';\nimport { manifest, TILING_PLUGIN_ID } from './manifest';\nimport { initialState, tilingReducer } from './reducer';\nimport { TilingPlugin } from './tiling-plugin';\nimport { TilingPluginConfig, TilingState } from './types';\n\nexport const TilingPluginPackage: PluginPackage<\n  TilingPlugin,\n  TilingPluginConfig,\n  TilingState,\n  TilingAction\n> = {\n  manifest,\n  create: (registry, _engine, config) => new TilingPlugin(TILING_PLUGIN_ID, registry, config),\n  reducer: (state, action) => tilingReducer(state, action),\n  initialState,\n};\n\nexport * from './tiling-plugin';\nexport * from './types';\nexport * from './manifest';\n"],"names":["TILING_PLUGIN_ID","manifest","initialState","tilingReducer","state","action","UPDATE_VISIBLE_TILES","incoming","nextPages","key","pageIndex","newTiles","prevTiles","prevScale","_a","t","newScale","promoted","fallbackToCarry","newIds","keepers","seenIds","MARK_TILE_STATUS","tileId","status","tiles","_b","finalTiles","TilingPluginPackage","registry","_engine","config","TilingPlugin"],"mappings":"gIAIaA,EAAmB,SAEnBC,EAA+C,CAC1D,GAAID,EACJ,KAAM,gBACN,QAAS,QACT,SAAU,CAAC,QAAQ,EACnB,SAAU,CAAC,SAAU,SAAU,UAAU,EACzC,SAAU,CAAA,EACV,cAAe,CACb,QAAS,GACT,SAAU,IACV,UAAW,IACX,WAAY,CAAA,CAEhB,ECdaE,EAA4B,CACvC,aAAc,CAAA,CAChB,EAEaC,EAAoD,CAACC,EAAOC,IAAW,SAClF,OAAQA,EAAO,KAAA,CACb,KAAKC,uBAAsB,CACzB,MAAMC,EAAWF,EAAO,QAClBG,EAAY,CAAE,GAAGJ,EAAM,YAAA,EAE7B,UAAWK,KAAOF,EAAU,CAC1B,MAAMG,EAAY,OAAOD,CAAG,EACtBE,EAAWJ,EAASG,CAAS,EAC7BE,EAAYJ,EAAUE,CAAS,GAAK,CAAA,EAEpCG,GAAYC,EAAAF,EAAU,KAAMG,GAAM,CAACA,EAAE,UAAU,IAAnC,YAAAD,EAAsC,SAClDE,EAAWL,EAAS,CAAC,EAAE,SAG7B,GAFoBE,IAAc,QAAaA,IAAcG,EAE5C,CAEf,MAAMC,EAAWL,EACd,OAAQG,GAAM,CAACA,EAAE,YAAcA,EAAE,SAAW,OAAO,EACnD,IAAKA,IAAO,CAAE,GAAGA,EAAG,WAAY,IAAO,EAGpCG,EAAkBD,EAAS,OAAS,EAAI,CAAA,EAAKL,EAAU,OAAQG,GAAMA,EAAE,UAAU,EAGvFP,EAAUE,CAAS,EAAI,CAAC,GAAGQ,EAAiB,GAAGD,EAAU,GAAGN,CAAQ,CACtE,KAAO,CAEL,MAAMQ,EAAS,IAAI,IAAIR,EAAS,IAAKI,GAAMA,EAAE,EAAE,CAAC,EAC1CK,EAAkB,CAAA,EAClBC,MAAc,IAGpB,UAAWN,KAAKH,GACVG,EAAE,YAGKI,EAAO,IAAIJ,EAAE,EAAE,KACxBK,EAAQ,KAAKL,CAAC,EACdM,EAAQ,IAAIN,EAAE,EAAE,GAKpB,UAAWA,KAAKJ,EACTU,EAAQ,IAAIN,EAAE,EAAE,GAAGK,EAAQ,KAAKL,CAAC,EAIxCP,EAAUE,CAAS,EAAIU,CACzB,CACF,CAEA,MAAO,CAAE,GAAGhB,EAAO,aAAcI,CAAA,CACnC,CAEA,KAAKc,mBAAkB,CACrB,KAAM,CAAE,UAAAZ,EAAW,OAAAa,EAAQ,OAAAC,CAAA,EAAWnB,EAAO,QACvCoB,IACJC,EAAAtB,EAAM,aAAaM,CAAS,IAA5B,YAAAgB,EAA+B,IAAKX,GAClCA,EAAE,KAAOQ,EAAU,CAAE,GAAGR,EAAG,OAAAS,GAAoBT,KAC5C,CAAA,EAEDJ,EAAWc,EAAM,OAAQV,GAAM,CAACA,EAAE,UAAU,EAE5CY,EADWhB,EAAS,MAAOI,GAAMA,EAAE,SAAW,OAAO,EAC7BJ,EAAWc,EAEzC,MAAO,CACL,GAAGrB,EACH,aAAc,CAAE,GAAGA,EAAM,aAAc,CAACM,CAAS,EAAGiB,CAAA,CAAW,CAEnE,CAEA,QACE,OAAOvB,CAAA,CAEb,EC7EawB,EAKT,CACF,SAAA3B,EACA,OAAQ,CAAC4B,EAAUC,EAASC,IAAW,IAAIC,eAAahC,EAAkB6B,EAAUE,CAAM,EAC1F,QAAS,CAAC3B,EAAOC,IAAWF,EAAcC,EAAOC,CAAM,EACvD,aAAAH,CACF"}