{"version":3,"file":"index.js","sources":["../src/lib/manifest.ts","../src/lib/actions.ts","../src/lib/reducer.ts","../src/lib/viewport-plugin.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\n\nimport { ViewportPluginConfig } from './types';\n\nexport const VIEWPORT_PLUGIN_ID = 'viewport';\n\nexport const manifest: PluginManifest<ViewportPluginConfig> = {\n  id: VIEWPORT_PLUGIN_ID,\n  name: 'Viewport Plugin',\n  version: '1.0.0',\n  provides: ['viewport'],\n  requires: [],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n    viewportGap: 10,\n    scrollEndDelay: 300,\n  },\n};\n","import { Action } from '@embedpdf/core';\n\nimport { ViewportInputMetrics, ViewportScrollMetrics } from './types';\n\nexport const SET_VIEWPORT_METRICS = 'SET_VIEWPORT_METRICS';\nexport const SET_VIEWPORT_SCROLL_METRICS = 'SET_VIEWPORT_SCROLL_METRICS';\nexport const SET_VIEWPORT_GAP = 'SET_VIEWPORT_GAP';\nexport const SET_SCROLL_ACTIVITY = 'SET_SCROLL_ACTIVITY';\n\nexport interface SetViewportMetricsAction extends Action {\n  type: typeof SET_VIEWPORT_METRICS;\n  payload: ViewportInputMetrics;\n}\n\nexport interface SetViewportScrollMetricsAction extends Action {\n  type: typeof SET_VIEWPORT_SCROLL_METRICS;\n  payload: ViewportScrollMetrics;\n}\n\nexport interface SetViewportGapAction extends Action {\n  type: typeof SET_VIEWPORT_GAP;\n  payload: number;\n}\n\nexport interface SetScrollActivityAction extends Action {\n  type: typeof SET_SCROLL_ACTIVITY;\n  payload: boolean;\n}\n\nexport type ViewportAction =\n  | SetViewportMetricsAction\n  | SetViewportScrollMetricsAction\n  | SetViewportGapAction\n  | SetScrollActivityAction;\n\nexport function setViewportGap(viewportGap: number): SetViewportGapAction {\n  return {\n    type: SET_VIEWPORT_GAP,\n    payload: viewportGap,\n  };\n}\n\nexport function setViewportMetrics(\n  viewportMetrics: ViewportInputMetrics,\n): SetViewportMetricsAction {\n  return {\n    type: SET_VIEWPORT_METRICS,\n    payload: viewportMetrics,\n  };\n}\n\nexport function setViewportScrollMetrics(\n  scrollMetrics: ViewportScrollMetrics,\n): SetViewportScrollMetricsAction {\n  return {\n    type: SET_VIEWPORT_SCROLL_METRICS,\n    payload: scrollMetrics,\n  };\n}\n\nexport function setScrollActivity(isScrolling: boolean): SetScrollActivityAction {\n  return { type: SET_SCROLL_ACTIVITY, payload: isScrolling };\n}\n","import { Reducer } from '@embedpdf/core';\n\nimport {\n  SET_VIEWPORT_METRICS,\n  SET_VIEWPORT_SCROLL_METRICS,\n  SET_VIEWPORT_GAP,\n  ViewportAction,\n  SET_SCROLL_ACTIVITY,\n} from './actions';\nimport { ViewportState } from './types';\n\nexport const initialState: ViewportState = {\n  viewportGap: 0,\n  viewportMetrics: {\n    width: 0,\n    height: 0,\n    scrollTop: 0,\n    scrollLeft: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    scrollWidth: 0,\n    scrollHeight: 0,\n    relativePosition: {\n      x: 0,\n      y: 0,\n    },\n  },\n  isScrolling: false,\n};\n\nexport const viewportReducer: Reducer<ViewportState, ViewportAction> = (\n  state = initialState,\n  action,\n) => {\n  switch (action.type) {\n    case SET_VIEWPORT_GAP:\n      return { ...state, viewportGap: action.payload };\n    case SET_VIEWPORT_METRICS:\n      return {\n        ...state,\n        viewportMetrics: {\n          width: action.payload.width,\n          height: action.payload.height,\n          scrollTop: action.payload.scrollTop,\n          scrollLeft: action.payload.scrollLeft,\n          clientWidth: action.payload.clientWidth,\n          clientHeight: action.payload.clientHeight,\n          scrollWidth: action.payload.scrollWidth,\n          scrollHeight: action.payload.scrollHeight,\n          relativePosition: {\n            x:\n              action.payload.scrollWidth <= action.payload.clientWidth\n                ? 0\n                : action.payload.scrollLeft /\n                  (action.payload.scrollWidth - action.payload.clientWidth),\n            y:\n              action.payload.scrollHeight <= action.payload.clientHeight\n                ? 0\n                : action.payload.scrollTop /\n                  (action.payload.scrollHeight - action.payload.clientHeight),\n          },\n        },\n      };\n    case SET_VIEWPORT_SCROLL_METRICS:\n      return {\n        ...state,\n        viewportMetrics: {\n          ...state.viewportMetrics,\n          scrollTop: action.payload.scrollTop,\n          scrollLeft: action.payload.scrollLeft,\n        },\n        isScrolling: true,\n      };\n    case SET_SCROLL_ACTIVITY:\n      return { ...state, isScrolling: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  BasePlugin,\n  PluginRegistry,\n  createEmitter,\n  createBehaviorEmitter,\n  Listener,\n  EventListener,\n} from '@embedpdf/core';\n\nimport {\n  ViewportAction,\n  setViewportMetrics,\n  setViewportScrollMetrics,\n  setViewportGap,\n  setScrollActivity,\n} from './actions';\nimport {\n  ViewportPluginConfig,\n  ViewportState,\n  ViewportCapability,\n  ViewportMetrics,\n  ViewportScrollMetrics,\n  ViewportInputMetrics,\n  ScrollToPayload,\n} from './types';\nimport { Rect } from '@embedpdf/models';\n\nexport class ViewportPlugin extends BasePlugin<\n  ViewportPluginConfig,\n  ViewportCapability,\n  ViewportState,\n  ViewportAction\n> {\n  static readonly id = 'viewport' as const;\n\n  private readonly viewportResize$ = createBehaviorEmitter<ViewportMetrics>();\n  private readonly viewportMetrics$ = createBehaviorEmitter<ViewportMetrics>();\n  private readonly scrollMetrics$ = createBehaviorEmitter<ViewportScrollMetrics>();\n  private readonly scrollReq$ = createEmitter<{\n    x: number;\n    y: number;\n    behavior?: ScrollBehavior;\n  }>();\n  private readonly scrollActivity$ = createBehaviorEmitter<boolean>();\n\n  /* ------------------------------------------------------------------ */\n  /* “live rect” infrastructure                                          */\n  /* ------------------------------------------------------------------ */\n  private rectProvider: (() => Rect) | null = null;\n\n  private scrollEndTimer?: number;\n  private readonly scrollEndDelay: number;\n\n  constructor(\n    public readonly id: string,\n    registry: PluginRegistry,\n    config: ViewportPluginConfig,\n  ) {\n    super(id, registry);\n\n    if (config.viewportGap) {\n      this.dispatch(setViewportGap(config.viewportGap));\n    }\n\n    this.scrollEndDelay = config.scrollEndDelay || 300;\n  }\n\n  protected buildCapability(): ViewportCapability {\n    return {\n      getViewportGap: () => this.state.viewportGap,\n      getMetrics: () => this.state.viewportMetrics,\n      getBoundingRect: (): Rect =>\n        this.rectProvider?.() ?? {\n          origin: { x: 0, y: 0 },\n          size: { width: 0, height: 0 },\n        },\n      scrollTo: (pos: ScrollToPayload) => this.scrollTo(pos),\n      isScrolling: () => this.state.isScrolling,\n      onScrollChange: this.scrollMetrics$.on,\n      onViewportChange: this.viewportMetrics$.on,\n      onViewportResize: this.viewportResize$.on,\n      onScrollActivity: this.scrollActivity$.on,\n    };\n  }\n\n  public setViewportResizeMetrics(viewportMetrics: ViewportInputMetrics) {\n    this.dispatch(setViewportMetrics(viewportMetrics));\n    this.viewportResize$.emit(this.state.viewportMetrics);\n  }\n\n  public setViewportScrollMetrics(scrollMetrics: ViewportScrollMetrics) {\n    if (\n      scrollMetrics.scrollTop !== this.state.viewportMetrics.scrollTop ||\n      scrollMetrics.scrollLeft !== this.state.viewportMetrics.scrollLeft\n    ) {\n      this.dispatch(setViewportScrollMetrics(scrollMetrics));\n      this.bumpScrollActivity();\n      this.scrollMetrics$.emit({\n        scrollTop: scrollMetrics.scrollTop,\n        scrollLeft: scrollMetrics.scrollLeft,\n      });\n    }\n  }\n\n  public onScrollRequest(listener: Listener<ScrollToPayload>) {\n    return this.scrollReq$.on(listener);\n  }\n\n  public registerBoundingRectProvider(provider: (() => Rect) | null) {\n    this.rectProvider = provider;\n  }\n\n  private bumpScrollActivity() {\n    this.debouncedDispatch(setScrollActivity(false), this.scrollEndDelay);\n  }\n\n  private scrollTo(pos: ScrollToPayload) {\n    const { x, y, center, behavior = 'auto' } = pos;\n\n    if (center) {\n      const metrics = this.state.viewportMetrics;\n      // Calculate the centered position by adding half the viewport dimensions\n      const centeredX = x - metrics.clientWidth / 2;\n      const centeredY = y - metrics.clientHeight / 2;\n\n      this.scrollReq$.emit({\n        x: centeredX,\n        y: centeredY,\n        behavior,\n      });\n    } else {\n      this.scrollReq$.emit({\n        x,\n        y,\n        behavior,\n      });\n    }\n  }\n\n  // Subscribe to store changes to notify onViewportChange\n  override onStoreUpdated(prevState: ViewportState, newState: ViewportState): void {\n    if (prevState !== newState) {\n      this.viewportMetrics$.emit(newState.viewportMetrics);\n      if (prevState.isScrolling !== newState.isScrolling) {\n        this.scrollActivity$.emit(newState.isScrolling);\n      }\n    }\n  }\n\n  async initialize(_config: ViewportPluginConfig) {\n    // No initialization needed\n  }\n\n  async destroy(): Promise<void> {\n    super.destroy();\n    // Clear out any handlers\n    this.viewportMetrics$.clear();\n    this.viewportResize$.clear();\n    this.scrollMetrics$.clear();\n    this.scrollReq$.clear();\n    this.scrollActivity$.clear();\n    this.rectProvider = null;\n    if (this.scrollEndTimer) clearTimeout(this.scrollEndTimer);\n  }\n}\n","import { PluginPackage } from '@embedpdf/core';\n\nimport { ViewportAction } from './actions';\nimport { manifest, VIEWPORT_PLUGIN_ID } from './manifest';\nimport { viewportReducer, initialState } from './reducer';\nimport { ViewportPluginConfig, ViewportState } from './types';\nimport { ViewportPlugin } from './viewport-plugin';\n\nexport const ViewportPluginPackage: PluginPackage<\n  ViewportPlugin,\n  ViewportPluginConfig,\n  ViewportState,\n  ViewportAction\n> = {\n  manifest,\n  create: (registry, _engine, config) => new ViewportPlugin(VIEWPORT_PLUGIN_ID, registry, config),\n  reducer: viewportReducer,\n  initialState: initialState,\n};\n\nexport * from './viewport-plugin';\nexport * from './types';\nexport * from './manifest';\n"],"names":["VIEWPORT_PLUGIN_ID","manifest","SET_VIEWPORT_METRICS","SET_VIEWPORT_SCROLL_METRICS","SET_VIEWPORT_GAP","SET_SCROLL_ACTIVITY","setViewportGap","viewportGap","setViewportMetrics","viewportMetrics","setViewportScrollMetrics","scrollMetrics","setScrollActivity","isScrolling","initialState","viewportReducer","state","action","_ViewportPlugin","BasePlugin","id","registry","config","createBehaviorEmitter","createEmitter","_a","pos","listener","provider","x","y","center","behavior","metrics","centeredX","centeredY","prevState","newState","_config","ViewportPlugin","ViewportPluginPackage","_engine"],"mappings":"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"}