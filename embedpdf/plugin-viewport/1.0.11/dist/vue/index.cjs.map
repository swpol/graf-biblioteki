{"version":3,"file":"index.cjs","sources":["../../src/vue/hooks/use-viewport.ts","../../src/vue/hooks/use-viewport-ref.ts","../../src/vue/components/viewport.vue"],"sourcesContent":["import { useCapability, usePlugin } from '@embedpdf/core/vue';\nimport { ViewportPlugin } from '@embedpdf/plugin-viewport';\n\nexport const useViewportPlugin = () => usePlugin<ViewportPlugin>(ViewportPlugin.id);\nexport const useViewportCapability = () => useCapability<ViewportPlugin>(ViewportPlugin.id);\n","import { Rect } from '@embedpdf/models';\nimport { onMounted, onUnmounted, ref } from 'vue';\n\nimport { useViewportPlugin } from './use-viewport';\n\nexport function useViewportRef() {\n  const { plugin: pluginRef } = useViewportPlugin();\n  const containerRef = ref<HTMLDivElement | null>(null);\n\n  onMounted(() => {\n    const viewportPlugin = pluginRef.value;\n    const container = containerRef.value;\n    if (!container || !viewportPlugin) return;\n\n    /* ---------- live rect provider --------------------------------- */\n    const provideRect = (): Rect => {\n      const r = container.getBoundingClientRect();\n      return {\n        origin: { x: r.left, y: r.top },\n        size: { width: r.width, height: r.height },\n      };\n    };\n    viewportPlugin.registerBoundingRectProvider(provideRect);\n\n    // Example: On scroll, call setMetrics\n    const onScroll = () => {\n      viewportPlugin.setViewportScrollMetrics({\n        scrollTop: container.scrollTop,\n        scrollLeft: container.scrollLeft,\n      });\n    };\n    container.addEventListener('scroll', onScroll);\n\n    // Example: On resize, call setMetrics\n    const resizeObserver = new ResizeObserver(() => {\n      viewportPlugin.setViewportResizeMetrics({\n        width: container.offsetWidth,\n        height: container.offsetHeight,\n        clientWidth: container.clientWidth,\n        clientHeight: container.clientHeight,\n        scrollTop: container.scrollTop,\n        scrollLeft: container.scrollLeft,\n        scrollWidth: container.scrollWidth,\n        scrollHeight: container.scrollHeight,\n      });\n    });\n    resizeObserver.observe(container);\n\n    const unsubscribeScrollRequest = viewportPlugin.onScrollRequest(\n      ({ x, y, behavior = 'auto' }) => {\n        requestAnimationFrame(() => {\n          container.scrollTo({ left: x, top: y, behavior });\n        });\n      },\n    );\n\n    onUnmounted(() => {\n      viewportPlugin.registerBoundingRectProvider(null);\n      container.removeEventListener('scroll', onScroll);\n      resizeObserver.disconnect();\n      unsubscribeScrollRequest();\n    });\n  });\n\n  // Return the ref so your Vue code can attach it to a div\n  return containerRef;\n}\n","<script setup lang=\"ts\">\nimport { ref, watch, useAttrs } from 'vue';\n\nimport { useViewportCapability, useViewportRef } from '../hooks';\n\n/* -------------------------------------------------- */\n/* props & attrs                                      */\n/* -------------------------------------------------- */\nconst attrs = useAttrs(); // forward class/id/â€¦ to <div>\n\n/* -------------------------------------------------- */\n/* plugin + reactive viewport gap                     */\n/* -------------------------------------------------- */\nconst { provides: viewportProvides } = useViewportCapability();\nconst viewportGap = ref(0);\n\nwatch(\n  viewportProvides,\n  (vp) => {\n    if (vp) viewportGap.value = vp.getViewportGap();\n  },\n  { immediate: true },\n);\n\n/* -------------------------------------------------- */\n/* element ref that wires up scroll / resize logic    */\n/* -------------------------------------------------- */\nconst viewportRef = useViewportRef();\n</script>\n\n<template>\n  <div ref=\"viewportRef\" v-bind=\"attrs\" :style=\"{ padding: `${viewportGap}px` }\">\n    <slot />\n  </div>\n</template>\n"],"names":["useViewportPlugin","usePlugin","ViewportPlugin","useViewportCapability","useCapability","useViewportRef","pluginRef","containerRef","ref","onMounted","viewportPlugin","container","provideRect","r","onScroll","resizeObserver","unsubscribeScrollRequest","x","y","behavior","onUnmounted","attrs","useAttrs","viewportProvides","viewportGap","watch","vp","viewportRef","_openBlock","_createElementBlock","_mergeProps","_unref","_renderSlot","_ctx"],"mappings":"8KAGaA,EAAoB,IAAMC,YAA0BC,EAAAA,eAAe,EAAE,EACrEC,EAAwB,IAAMC,gBAA8BF,EAAAA,eAAe,EAAE,ECCnF,SAASG,GAAiB,CAC/B,KAAM,CAAE,OAAQC,CAAU,EAAIN,EAAkB,EAC1CO,EAAeC,MAA2B,IAAI,EAEpDC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAiBJ,EAAU,MAC3BK,EAAYJ,EAAa,MAC3B,GAAA,CAACI,GAAa,CAACD,EAAgB,OAGnC,MAAME,EAAc,IAAY,CACxB,MAAAC,EAAIF,EAAU,sBAAsB,EACnC,MAAA,CACL,OAAQ,CAAE,EAAGE,EAAE,KAAM,EAAGA,EAAE,GAAI,EAC9B,KAAM,CAAE,MAAOA,EAAE,MAAO,OAAQA,EAAE,MAAO,CAC3C,CACF,EACAH,EAAe,6BAA6BE,CAAW,EAGvD,MAAME,EAAW,IAAM,CACrBJ,EAAe,yBAAyB,CACtC,UAAWC,EAAU,UACrB,WAAYA,EAAU,UAAA,CACvB,CACH,EACUA,EAAA,iBAAiB,SAAUG,CAAQ,EAGvC,MAAAC,EAAiB,IAAI,eAAe,IAAM,CAC9CL,EAAe,yBAAyB,CACtC,MAAOC,EAAU,YACjB,OAAQA,EAAU,aAClB,YAAaA,EAAU,YACvB,aAAcA,EAAU,aACxB,UAAWA,EAAU,UACrB,WAAYA,EAAU,WACtB,YAAaA,EAAU,YACvB,aAAcA,EAAU,YAAA,CACzB,CAAA,CACF,EACDI,EAAe,QAAQJ,CAAS,EAEhC,MAAMK,EAA2BN,EAAe,gBAC9C,CAAC,CAAE,EAAAO,EAAG,EAAAC,EAAG,SAAAC,EAAW,UAAa,CAC/B,sBAAsB,IAAM,CAC1BR,EAAU,SAAS,CAAE,KAAMM,EAAG,IAAKC,EAAG,SAAAC,EAAU,CAAA,CACjD,CAAA,CAEL,EAEAC,EAAAA,YAAY,IAAM,CAChBV,EAAe,6BAA6B,IAAI,EACtCC,EAAA,oBAAoB,SAAUG,CAAQ,EAChDC,EAAe,WAAW,EACDC,EAAA,CAAA,CAC1B,CAAA,CACF,EAGMT,CACT,uDC1DA,MAAMc,EAAQC,EAAAA,SAAS,EAKjB,CAAE,SAAUC,CAAiB,EAAIpB,EAAsB,EACvDqB,EAAchB,MAAI,CAAC,EAEzBiB,EAAA,MACEF,EACCG,GAAO,CACFA,IAAIF,EAAY,MAAQE,EAAG,eAAe,EAChD,EACA,CAAE,UAAW,EAAK,CACpB,EAKA,MAAMC,EAActB,EAAe,gBAIjCuB,YAAA,EAAAC,qBAEM,MAFNC,EAAAA,WAEM,SAFG,cAAJ,IAAIH,CAAA,EAAsBI,EAAAA,MAAKV,CAAA,EAAA,CAAG,kBAAqBG,EAAW,KAAA,IAAA,CAAA,IACrEQ,aAAQC,EAAA,OAAA,SAAA"}