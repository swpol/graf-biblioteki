{"version":3,"file":"index.js","sources":["../../src/vue/hooks/use-viewport.ts","../../src/vue/hooks/use-viewport-ref.ts","../../src/vue/components/viewport.vue"],"sourcesContent":["import { useCapability, usePlugin } from '@embedpdf/core/vue';\nimport { ViewportPlugin } from '@embedpdf/plugin-viewport';\n\nexport const useViewportPlugin = () => usePlugin<ViewportPlugin>(ViewportPlugin.id);\nexport const useViewportCapability = () => useCapability<ViewportPlugin>(ViewportPlugin.id);\n","import { Rect } from '@embedpdf/models';\nimport { onMounted, onUnmounted, ref } from 'vue';\n\nimport { useViewportPlugin } from './use-viewport';\n\nexport function useViewportRef() {\n  const { plugin: pluginRef } = useViewportPlugin();\n  const containerRef = ref<HTMLDivElement | null>(null);\n\n  onMounted(() => {\n    const viewportPlugin = pluginRef.value;\n    const container = containerRef.value;\n    if (!container || !viewportPlugin) return;\n\n    /* ---------- live rect provider --------------------------------- */\n    const provideRect = (): Rect => {\n      const r = container.getBoundingClientRect();\n      return {\n        origin: { x: r.left, y: r.top },\n        size: { width: r.width, height: r.height },\n      };\n    };\n    viewportPlugin.registerBoundingRectProvider(provideRect);\n\n    // Example: On scroll, call setMetrics\n    const onScroll = () => {\n      viewportPlugin.setViewportScrollMetrics({\n        scrollTop: container.scrollTop,\n        scrollLeft: container.scrollLeft,\n      });\n    };\n    container.addEventListener('scroll', onScroll);\n\n    // Example: On resize, call setMetrics\n    const resizeObserver = new ResizeObserver(() => {\n      viewportPlugin.setViewportResizeMetrics({\n        width: container.offsetWidth,\n        height: container.offsetHeight,\n        clientWidth: container.clientWidth,\n        clientHeight: container.clientHeight,\n        scrollTop: container.scrollTop,\n        scrollLeft: container.scrollLeft,\n        scrollWidth: container.scrollWidth,\n        scrollHeight: container.scrollHeight,\n      });\n    });\n    resizeObserver.observe(container);\n\n    const unsubscribeScrollRequest = viewportPlugin.onScrollRequest(\n      ({ x, y, behavior = 'auto' }) => {\n        requestAnimationFrame(() => {\n          container.scrollTo({ left: x, top: y, behavior });\n        });\n      },\n    );\n\n    onUnmounted(() => {\n      viewportPlugin.registerBoundingRectProvider(null);\n      container.removeEventListener('scroll', onScroll);\n      resizeObserver.disconnect();\n      unsubscribeScrollRequest();\n    });\n  });\n\n  // Return the ref so your Vue code can attach it to a div\n  return containerRef;\n}\n","<script setup lang=\"ts\">\nimport { ref, watch, useAttrs } from 'vue';\n\nimport { useViewportCapability, useViewportRef } from '../hooks';\n\n/* -------------------------------------------------- */\n/* props & attrs                                      */\n/* -------------------------------------------------- */\nconst attrs = useAttrs(); // forward class/id/â€¦ to <div>\n\n/* -------------------------------------------------- */\n/* plugin + reactive viewport gap                     */\n/* -------------------------------------------------- */\nconst { provides: viewportProvides } = useViewportCapability();\nconst viewportGap = ref(0);\n\nwatch(\n  viewportProvides,\n  (vp) => {\n    if (vp) viewportGap.value = vp.getViewportGap();\n  },\n  { immediate: true },\n);\n\n/* -------------------------------------------------- */\n/* element ref that wires up scroll / resize logic    */\n/* -------------------------------------------------- */\nconst viewportRef = useViewportRef();\n</script>\n\n<template>\n  <div ref=\"viewportRef\" v-bind=\"attrs\" :style=\"{ padding: `${viewportGap}px` }\">\n    <slot />\n  </div>\n</template>\n"],"names":["useViewportPlugin","usePlugin","ViewportPlugin","useViewportCapability","useCapability","useViewportRef","pluginRef","containerRef","ref","onMounted","viewportPlugin","container","provideRect","onScroll","resizeObserver","unsubscribeScrollRequest","x","y","behavior","onUnmounted","attrs","useAttrs","viewportProvides","viewportGap","watch","vp","viewportRef","_openBlock","_createElementBlock","_mergeProps","_unref","_renderSlot","_ctx"],"mappings":";;;AAGO,MAAMA,IAAoB,MAAMC,EAA0BC,EAAe,EAAE,GACrEC,IAAwB,MAAMC,EAA8BF,EAAe,EAAE;ACCnF,SAASG,IAAiB;AAC/B,QAAM,EAAE,QAAQC,EAAU,IAAIN,EAAkB,GAC1CO,IAAeC,EAA2B,IAAI;AAEpD,SAAAC,EAAU,MAAM;AACd,UAAMC,IAAiBJ,EAAU,OAC3BK,IAAYJ,EAAa;AAC3B,QAAA,CAACI,KAAa,CAACD,EAAgB;AAGnC,UAAME,IAAc,MAAY;AACxB,YAAA,IAAID,EAAU,sBAAsB;AACnC,aAAA;AAAA,QACL,QAAQ,EAAE,GAAG,EAAE,MAAM,GAAG,EAAE,IAAI;AAAA,QAC9B,MAAM,EAAE,OAAO,EAAE,OAAO,QAAQ,EAAE,OAAO;AAAA,MAC3C;AAAA,IACF;AACA,IAAAD,EAAe,6BAA6BE,CAAW;AAGvD,UAAMC,IAAW,MAAM;AACrB,MAAAH,EAAe,yBAAyB;AAAA,QACtC,WAAWC,EAAU;AAAA,QACrB,YAAYA,EAAU;AAAA,MAAA,CACvB;AAAA,IACH;AACU,IAAAA,EAAA,iBAAiB,UAAUE,CAAQ;AAGvC,UAAAC,IAAiB,IAAI,eAAe,MAAM;AAC9C,MAAAJ,EAAe,yBAAyB;AAAA,QACtC,OAAOC,EAAU;AAAA,QACjB,QAAQA,EAAU;AAAA,QAClB,aAAaA,EAAU;AAAA,QACvB,cAAcA,EAAU;AAAA,QACxB,WAAWA,EAAU;AAAA,QACrB,YAAYA,EAAU;AAAA,QACtB,aAAaA,EAAU;AAAA,QACvB,cAAcA,EAAU;AAAA,MAAA,CACzB;AAAA,IAAA,CACF;AACD,IAAAG,EAAe,QAAQH,CAAS;AAEhC,UAAMI,IAA2BL,EAAe;AAAA,MAC9C,CAAC,EAAE,GAAAM,GAAG,GAAAC,GAAG,UAAAC,IAAW,aAAa;AAC/B,8BAAsB,MAAM;AAC1B,UAAAP,EAAU,SAAS,EAAE,MAAMK,GAAG,KAAKC,GAAG,UAAAC,GAAU;AAAA,QAAA,CACjD;AAAA,MAAA;AAAA,IAEL;AAEA,IAAAC,EAAY,MAAM;AAChB,MAAAT,EAAe,6BAA6B,IAAI,GACtCC,EAAA,oBAAoB,UAAUE,CAAQ,GAChDC,EAAe,WAAW,GACDC,EAAA;AAAA,IAAA,CAC1B;AAAA,EAAA,CACF,GAGMR;AACT;;;;AC1DA,UAAMa,IAAQC,EAAS,GAKjB,EAAE,UAAUC,EAAiB,IAAInB,EAAsB,GACvDoB,IAAcf,EAAI,CAAC;AAEzB,IAAAgB;AAAA,MACEF;AAAA,MACA,CAACG,MAAO;AACN,QAAIA,MAAIF,EAAY,QAAQE,EAAG,eAAe;AAAA,MAChD;AAAA,MACA,EAAE,WAAW,GAAK;AAAA,IACpB;AAKA,UAAMC,IAAcrB,EAAe;sBAIjCsB,EAAA,GAAAC,EAEM,OAFNC,EAEM;AAAA,eAFG;AAAA,MAAJ,KAAIH;AAAA,IAAA,GAAsBI,EAAKV,CAAA,GAAA;AAAA,MAAG,qBAAqBG,EAAW,KAAA,KAAA;AAAA,IAAA;MACrEQ,EAAQC,EAAA,QAAA,SAAA;AAAA;;;"}