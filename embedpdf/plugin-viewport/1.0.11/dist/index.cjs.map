{"version":3,"file":"index.cjs","sources":["../src/lib/manifest.ts","../src/lib/actions.ts","../src/lib/reducer.ts","../src/lib/viewport-plugin.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\n\nimport { ViewportPluginConfig } from './types';\n\nexport const VIEWPORT_PLUGIN_ID = 'viewport';\n\nexport const manifest: PluginManifest<ViewportPluginConfig> = {\n  id: VIEWPORT_PLUGIN_ID,\n  name: 'Viewport Plugin',\n  version: '1.0.0',\n  provides: ['viewport'],\n  requires: [],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n    viewportGap: 10,\n    scrollEndDelay: 300,\n  },\n};\n","import { Action } from '@embedpdf/core';\n\nimport { ViewportInputMetrics, ViewportScrollMetrics } from './types';\n\nexport const SET_VIEWPORT_METRICS = 'SET_VIEWPORT_METRICS';\nexport const SET_VIEWPORT_SCROLL_METRICS = 'SET_VIEWPORT_SCROLL_METRICS';\nexport const SET_VIEWPORT_GAP = 'SET_VIEWPORT_GAP';\nexport const SET_SCROLL_ACTIVITY = 'SET_SCROLL_ACTIVITY';\n\nexport interface SetViewportMetricsAction extends Action {\n  type: typeof SET_VIEWPORT_METRICS;\n  payload: ViewportInputMetrics;\n}\n\nexport interface SetViewportScrollMetricsAction extends Action {\n  type: typeof SET_VIEWPORT_SCROLL_METRICS;\n  payload: ViewportScrollMetrics;\n}\n\nexport interface SetViewportGapAction extends Action {\n  type: typeof SET_VIEWPORT_GAP;\n  payload: number;\n}\n\nexport interface SetScrollActivityAction extends Action {\n  type: typeof SET_SCROLL_ACTIVITY;\n  payload: boolean;\n}\n\nexport type ViewportAction =\n  | SetViewportMetricsAction\n  | SetViewportScrollMetricsAction\n  | SetViewportGapAction\n  | SetScrollActivityAction;\n\nexport function setViewportGap(viewportGap: number): SetViewportGapAction {\n  return {\n    type: SET_VIEWPORT_GAP,\n    payload: viewportGap,\n  };\n}\n\nexport function setViewportMetrics(\n  viewportMetrics: ViewportInputMetrics,\n): SetViewportMetricsAction {\n  return {\n    type: SET_VIEWPORT_METRICS,\n    payload: viewportMetrics,\n  };\n}\n\nexport function setViewportScrollMetrics(\n  scrollMetrics: ViewportScrollMetrics,\n): SetViewportScrollMetricsAction {\n  return {\n    type: SET_VIEWPORT_SCROLL_METRICS,\n    payload: scrollMetrics,\n  };\n}\n\nexport function setScrollActivity(isScrolling: boolean): SetScrollActivityAction {\n  return { type: SET_SCROLL_ACTIVITY, payload: isScrolling };\n}\n","import { Reducer } from '@embedpdf/core';\n\nimport {\n  SET_VIEWPORT_METRICS,\n  SET_VIEWPORT_SCROLL_METRICS,\n  SET_VIEWPORT_GAP,\n  ViewportAction,\n  SET_SCROLL_ACTIVITY,\n} from './actions';\nimport { ViewportState } from './types';\n\nexport const initialState: ViewportState = {\n  viewportGap: 0,\n  viewportMetrics: {\n    width: 0,\n    height: 0,\n    scrollTop: 0,\n    scrollLeft: 0,\n    clientWidth: 0,\n    clientHeight: 0,\n    scrollWidth: 0,\n    scrollHeight: 0,\n    relativePosition: {\n      x: 0,\n      y: 0,\n    },\n  },\n  isScrolling: false,\n};\n\nexport const viewportReducer: Reducer<ViewportState, ViewportAction> = (\n  state = initialState,\n  action,\n) => {\n  switch (action.type) {\n    case SET_VIEWPORT_GAP:\n      return { ...state, viewportGap: action.payload };\n    case SET_VIEWPORT_METRICS:\n      return {\n        ...state,\n        viewportMetrics: {\n          width: action.payload.width,\n          height: action.payload.height,\n          scrollTop: action.payload.scrollTop,\n          scrollLeft: action.payload.scrollLeft,\n          clientWidth: action.payload.clientWidth,\n          clientHeight: action.payload.clientHeight,\n          scrollWidth: action.payload.scrollWidth,\n          scrollHeight: action.payload.scrollHeight,\n          relativePosition: {\n            x:\n              action.payload.scrollWidth <= action.payload.clientWidth\n                ? 0\n                : action.payload.scrollLeft /\n                  (action.payload.scrollWidth - action.payload.clientWidth),\n            y:\n              action.payload.scrollHeight <= action.payload.clientHeight\n                ? 0\n                : action.payload.scrollTop /\n                  (action.payload.scrollHeight - action.payload.clientHeight),\n          },\n        },\n      };\n    case SET_VIEWPORT_SCROLL_METRICS:\n      return {\n        ...state,\n        viewportMetrics: {\n          ...state.viewportMetrics,\n          scrollTop: action.payload.scrollTop,\n          scrollLeft: action.payload.scrollLeft,\n        },\n        isScrolling: true,\n      };\n    case SET_SCROLL_ACTIVITY:\n      return { ...state, isScrolling: action.payload };\n    default:\n      return state;\n  }\n};\n","import {\n  BasePlugin,\n  PluginRegistry,\n  createEmitter,\n  createBehaviorEmitter,\n  Listener,\n  EventListener,\n} from '@embedpdf/core';\n\nimport {\n  ViewportAction,\n  setViewportMetrics,\n  setViewportScrollMetrics,\n  setViewportGap,\n  setScrollActivity,\n} from './actions';\nimport {\n  ViewportPluginConfig,\n  ViewportState,\n  ViewportCapability,\n  ViewportMetrics,\n  ViewportScrollMetrics,\n  ViewportInputMetrics,\n  ScrollToPayload,\n} from './types';\nimport { Rect } from '@embedpdf/models';\n\nexport class ViewportPlugin extends BasePlugin<\n  ViewportPluginConfig,\n  ViewportCapability,\n  ViewportState,\n  ViewportAction\n> {\n  static readonly id = 'viewport' as const;\n\n  private readonly viewportResize$ = createBehaviorEmitter<ViewportMetrics>();\n  private readonly viewportMetrics$ = createBehaviorEmitter<ViewportMetrics>();\n  private readonly scrollMetrics$ = createBehaviorEmitter<ViewportScrollMetrics>();\n  private readonly scrollReq$ = createEmitter<{\n    x: number;\n    y: number;\n    behavior?: ScrollBehavior;\n  }>();\n  private readonly scrollActivity$ = createBehaviorEmitter<boolean>();\n\n  /* ------------------------------------------------------------------ */\n  /* “live rect” infrastructure                                          */\n  /* ------------------------------------------------------------------ */\n  private rectProvider: (() => Rect) | null = null;\n\n  private scrollEndTimer?: number;\n  private readonly scrollEndDelay: number;\n\n  constructor(\n    public readonly id: string,\n    registry: PluginRegistry,\n    config: ViewportPluginConfig,\n  ) {\n    super(id, registry);\n\n    if (config.viewportGap) {\n      this.dispatch(setViewportGap(config.viewportGap));\n    }\n\n    this.scrollEndDelay = config.scrollEndDelay || 300;\n  }\n\n  protected buildCapability(): ViewportCapability {\n    return {\n      getViewportGap: () => this.state.viewportGap,\n      getMetrics: () => this.state.viewportMetrics,\n      getBoundingRect: (): Rect =>\n        this.rectProvider?.() ?? {\n          origin: { x: 0, y: 0 },\n          size: { width: 0, height: 0 },\n        },\n      scrollTo: (pos: ScrollToPayload) => this.scrollTo(pos),\n      isScrolling: () => this.state.isScrolling,\n      onScrollChange: this.scrollMetrics$.on,\n      onViewportChange: this.viewportMetrics$.on,\n      onViewportResize: this.viewportResize$.on,\n      onScrollActivity: this.scrollActivity$.on,\n    };\n  }\n\n  public setViewportResizeMetrics(viewportMetrics: ViewportInputMetrics) {\n    this.dispatch(setViewportMetrics(viewportMetrics));\n    this.viewportResize$.emit(this.state.viewportMetrics);\n  }\n\n  public setViewportScrollMetrics(scrollMetrics: ViewportScrollMetrics) {\n    if (\n      scrollMetrics.scrollTop !== this.state.viewportMetrics.scrollTop ||\n      scrollMetrics.scrollLeft !== this.state.viewportMetrics.scrollLeft\n    ) {\n      this.dispatch(setViewportScrollMetrics(scrollMetrics));\n      this.bumpScrollActivity();\n      this.scrollMetrics$.emit({\n        scrollTop: scrollMetrics.scrollTop,\n        scrollLeft: scrollMetrics.scrollLeft,\n      });\n    }\n  }\n\n  public onScrollRequest(listener: Listener<ScrollToPayload>) {\n    return this.scrollReq$.on(listener);\n  }\n\n  public registerBoundingRectProvider(provider: (() => Rect) | null) {\n    this.rectProvider = provider;\n  }\n\n  private bumpScrollActivity() {\n    this.debouncedDispatch(setScrollActivity(false), this.scrollEndDelay);\n  }\n\n  private scrollTo(pos: ScrollToPayload) {\n    const { x, y, center, behavior = 'auto' } = pos;\n\n    if (center) {\n      const metrics = this.state.viewportMetrics;\n      // Calculate the centered position by adding half the viewport dimensions\n      const centeredX = x - metrics.clientWidth / 2;\n      const centeredY = y - metrics.clientHeight / 2;\n\n      this.scrollReq$.emit({\n        x: centeredX,\n        y: centeredY,\n        behavior,\n      });\n    } else {\n      this.scrollReq$.emit({\n        x,\n        y,\n        behavior,\n      });\n    }\n  }\n\n  // Subscribe to store changes to notify onViewportChange\n  override onStoreUpdated(prevState: ViewportState, newState: ViewportState): void {\n    if (prevState !== newState) {\n      this.viewportMetrics$.emit(newState.viewportMetrics);\n      if (prevState.isScrolling !== newState.isScrolling) {\n        this.scrollActivity$.emit(newState.isScrolling);\n      }\n    }\n  }\n\n  async initialize(_config: ViewportPluginConfig) {\n    // No initialization needed\n  }\n\n  async destroy(): Promise<void> {\n    super.destroy();\n    // Clear out any handlers\n    this.viewportMetrics$.clear();\n    this.viewportResize$.clear();\n    this.scrollMetrics$.clear();\n    this.scrollReq$.clear();\n    this.scrollActivity$.clear();\n    this.rectProvider = null;\n    if (this.scrollEndTimer) clearTimeout(this.scrollEndTimer);\n  }\n}\n","import { PluginPackage } from '@embedpdf/core';\n\nimport { ViewportAction } from './actions';\nimport { manifest, VIEWPORT_PLUGIN_ID } from './manifest';\nimport { viewportReducer, initialState } from './reducer';\nimport { ViewportPluginConfig, ViewportState } from './types';\nimport { ViewportPlugin } from './viewport-plugin';\n\nexport const ViewportPluginPackage: PluginPackage<\n  ViewportPlugin,\n  ViewportPluginConfig,\n  ViewportState,\n  ViewportAction\n> = {\n  manifest,\n  create: (registry, _engine, config) => new ViewportPlugin(VIEWPORT_PLUGIN_ID, registry, config),\n  reducer: viewportReducer,\n  initialState: initialState,\n};\n\nexport * from './viewport-plugin';\nexport * from './types';\nexport * from './manifest';\n"],"names":["VIEWPORT_PLUGIN_ID","manifest","SET_VIEWPORT_METRICS","SET_VIEWPORT_SCROLL_METRICS","SET_VIEWPORT_GAP","SET_SCROLL_ACTIVITY","setViewportGap","viewportGap","setViewportMetrics","viewportMetrics","setViewportScrollMetrics","scrollMetrics","setScrollActivity","isScrolling","initialState","viewportReducer","state","action","_ViewportPlugin","BasePlugin","id","registry","config","createBehaviorEmitter","createEmitter","_a","pos","listener","provider","x","y","center","behavior","metrics","centeredX","centeredY","prevState","newState","_config","ViewportPlugin","ViewportPluginPackage","_engine"],"mappings":"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"}