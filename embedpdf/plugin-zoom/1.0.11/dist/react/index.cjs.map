{"version":3,"sources":["../../src/react/index.ts","../../../core/src/lib/utils/dependency-resolver.ts","../../../core/src/lib/types/errors.ts","../../../core/src/lib/store/plugin-store.ts","../../../core/src/lib/store/actions.ts","../../../core/src/lib/store/store.ts","../../../models/dist/index.js","../../../core/src/lib/store/initial-state.ts","../../../core/src/lib/store/reducer.ts","../../../core/src/lib/registry/plugin-registry.ts","../../../core/src/lib/utils/math.ts","../../../../node_modules/.pnpm/preact@10.26.9/node_modules/preact/compat/dist/compat.module.js","../../../core/src/react/context.ts","../../../core/src/react/components/embed-pdf.tsx","../../../core/src/react/hooks/use-registry.ts","../../../core/src/react/hooks/use-plugin.ts","../../../core/src/react/hooks/use-capability.ts","../../../core/src/react/hooks/use-store-state.ts","../../../core/src/react/hooks/use-core-state.ts","../../src/lib/types.ts","../../src/lib/manifest.ts","../../src/lib/actions.ts","../../src/lib/reducer.ts","../../../core/src/lib/utils/dependency-resolver.ts","../../../core/src/lib/types/errors.ts","../../../core/src/lib/store/plugin-store.ts","../../../core/src/lib/store/actions.ts","../../../core/src/lib/store/store.ts","../../../models/dist/index.js","../../../core/src/lib/store/initial-state.ts","../../../core/src/lib/store/reducer.ts","../../../core/src/lib/registry/plugin-registry.ts","../../../core/src/lib/utils/math.ts","../../../core/src/lib/store/selectors.ts","../../../core/src/lib/utils/plugin-helpers.ts","../../../core/src/lib/base/base-plugin.ts","../../../core/src/lib/utils/event-control.ts","../../../core/src/lib/utils/eventing.ts","../../../core/src/lib/utils/typed-object.ts","../../../models/src/geometry.ts","../../../models/src/logger.ts","../../../models/src/task.ts","../../../models/src/pdf.ts","../../../models/src/color.ts","../../../models/src/date.ts","../../../models/src/index.ts","../../src/lib/zoom-plugin.ts","../../src/lib/index.ts","../../src/react/hooks/use-zoom.ts","../../src/react/hooks/use-pinch-zoom.ts","../../src/react/components/pinch-wrapper.tsx","../../src/react/components/marquee-zoom.tsx","../../../core/dist/math-ChSRQF3r.js","../../../core/dist/index.js","../../../plugin-interaction-manager/src/lib/actions.ts","../../../plugin-interaction-manager/src/lib/helper.ts","../../../plugin-interaction-manager/src/lib/interaction-manager-plugin.ts","../../../plugin-interaction-manager/src/lib/reducer.ts","../../../plugin-interaction-manager/src/shared/utils.ts","../../../models/dist/index.js","../../../core/dist/react/index.js","../../../../node_modules/.pnpm/preact@10.26.9/node_modules/preact/compat/dist/compat.module.js","../../../plugin-interaction-manager/src/react/hooks/use-interaction-manager.ts","../../../plugin-interaction-manager/src/react/components/global-pointer-provider.tsx","../../../plugin-interaction-manager/src/react/components/page-pointer-provider.tsx"],"sourcesContent":["export * from './hooks';\nexport * from './components';\n","export class DependencyResolver {\n  private dependencyGraph = new Map<string, Set<string>>();\n\n  addNode(id: string, dependencies: string[] = []) {\n    this.dependencyGraph.set(id, new Set(dependencies));\n  }\n\n  private hasCircularDependencies(): boolean {\n    const visited = new Set<string>();\n    const recursionStack = new Set<string>();\n\n    const dfs = (id: string): boolean => {\n      visited.add(id);\n      recursionStack.add(id);\n\n      const dependencies = this.dependencyGraph.get(id) || new Set();\n      for (const dep of dependencies) {\n        if (!visited.has(dep)) {\n          if (dfs(dep)) return true;\n        } else if (recursionStack.has(dep)) {\n          return true; // Circular dependency found\n        }\n      }\n\n      recursionStack.delete(id);\n      return false;\n    };\n\n    for (const id of this.dependencyGraph.keys()) {\n      if (!visited.has(id)) {\n        if (dfs(id)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  resolveLoadOrder(): string[] {\n    if (this.hasCircularDependencies()) {\n      throw new Error('Circular dependencies detected');\n    }\n\n    const result: string[] = [];\n    const visited = new Set<string>();\n    const temp = new Set<string>();\n\n    const visit = (id: string) => {\n      if (temp.has(id)) throw new Error('Circular dependency');\n      if (visited.has(id)) return;\n\n      temp.add(id);\n\n      const dependencies = this.dependencyGraph.get(id) || new Set();\n      for (const dep of dependencies) {\n        visit(dep);\n      }\n\n      temp.delete(id);\n      visited.add(id);\n      result.push(id);\n    };\n\n    for (const id of this.dependencyGraph.keys()) {\n      if (!visited.has(id)) {\n        visit(id);\n      }\n    }\n\n    return result;\n  }\n}\n","export class PluginRegistrationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginRegistrationError';\n  }\n}\n\nexport class PluginNotFoundError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginNotFoundError';\n  }\n}\n\nexport class CircularDependencyError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CircularDependencyError';\n  }\n}\n\nexport class CapabilityNotFoundError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CapabilityNotFoundError';\n  }\n}\n\n// You might also want to add:\nexport class CapabilityConflictError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CapabilityConflictError';\n  }\n}\n\nexport class PluginInitializationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginInitializationError';\n  }\n}\n\nexport class PluginConfigurationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginConfigurationError';\n  }\n}\n","import { Store } from './store';\nimport { Action } from './types';\n\n/**\n * A type-safe store handle for plugins, providing access to plugin-specific state and actions.\n */\nexport class PluginStore<PluginState, PluginAction extends Action> {\n  private store: Store<any, any>;\n  private pluginId: string;\n\n  /**\n   * Initializes the PluginStore with the main store and plugin ID.\n   * @param store The main store instance.\n   * @param pluginId The unique identifier for the plugin.\n   */\n  constructor(store: Store<any, any>, pluginId: string) {\n    this.store = store;\n    this.pluginId = pluginId;\n  }\n\n  /**\n   * Gets the current state of the plugin.\n   * @returns The plugin's state.\n   */\n  getState(): PluginState {\n    return this.store.getState().plugins[this.pluginId] as PluginState;\n  }\n\n  /**\n   * Dispatches an action for the plugin and returns the *new* global state.\n   * If you only need the plugin’s updated state, call `getState()` afterward.\n   * @param action The action to dispatch.\n   * @returns The updated global store state (after plugin reducer).\n   */\n  dispatch(action: PluginAction): PluginState {\n    return this.store.dispatchToPlugin(this.pluginId, action);\n  }\n\n  /**\n   * Subscribes to state changes only for this specific plugin.\n   * You now receive (action, newPluginState, oldPluginState) in the callback.\n   *\n   * @param listener The callback to invoke when plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToState(\n    listener: (action: PluginAction, newState: PluginState, oldState: PluginState) => void,\n  ) {\n    return this.store.subscribeToPlugin(this.pluginId, (action, newPluginState, oldPluginState) => {\n      listener(\n        action as PluginAction,\n        newPluginState as PluginState,\n        oldPluginState as PluginState,\n      );\n    });\n  }\n\n  /**\n   * Subscribes to a specific action type for the plugin.\n   * This still uses the main store's `onAction`, so you get the *global*\n   * old/new store states there. If you specifically want old/new plugin state,\n   * use `subscribeToState` instead.\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction<T extends PluginAction['type']>(\n    type: T,\n    handler: (\n      action: Extract<PluginAction, { type: T }>,\n      state: PluginState,\n      oldState: PluginState,\n    ) => void,\n  ) {\n    return this.store.onAction(type, (action, state, oldState) => {\n      handler(\n        action as Extract<PluginAction, { type: T }>,\n        state.plugins[this.pluginId] as PluginState,\n        oldState.plugins[this.pluginId] as PluginState,\n      );\n    });\n  }\n}\n","import { PdfDocumentObject, PdfPageObject, Rotation } from '@embedpdf/models';\n\nexport const LOAD_DOCUMENT = 'LOAD_DOCUMENT';\nexport const SET_DOCUMENT = 'SET_DOCUMENT';\nexport const SET_DOCUMENT_ERROR = 'SET_DOCUMENT_ERROR';\nexport const SET_SCALE = 'SET_SCALE';\nexport const SET_ROTATION = 'SET_ROTATION';\nexport const SET_PAGES = 'SET_PAGES';\n\nexport const CORE_ACTION_TYPES = [\n  LOAD_DOCUMENT,\n  SET_DOCUMENT,\n  SET_DOCUMENT_ERROR,\n  SET_SCALE,\n  SET_ROTATION,\n  SET_PAGES,\n] as const;\n\n// Action Type Interfaces\nexport interface LoadDocumentAction {\n  type: typeof LOAD_DOCUMENT;\n}\n\nexport interface SetDocumentAction {\n  type: typeof SET_DOCUMENT;\n  payload: PdfDocumentObject;\n}\n\nexport interface SetDocumentErrorAction {\n  type: typeof SET_DOCUMENT_ERROR;\n  payload: string;\n}\n\nexport interface SetScaleAction {\n  type: typeof SET_SCALE;\n  payload: number;\n}\n\nexport interface SetRotationAction {\n  type: typeof SET_ROTATION;\n  payload: Rotation;\n}\n\nexport interface SetPagesAction {\n  type: typeof SET_PAGES;\n  payload: PdfPageObject[][];\n}\n\nexport type DocumentAction =\n  | LoadDocumentAction\n  | SetDocumentAction\n  | SetDocumentErrorAction\n  | SetScaleAction\n  | SetRotationAction\n  | SetPagesAction;\n\n// Core actions\nexport type CoreAction = DocumentAction;\n\nexport const loadDocument = (): CoreAction => ({ type: LOAD_DOCUMENT });\nexport const setDocument = (document: PdfDocumentObject): CoreAction => ({\n  type: SET_DOCUMENT,\n  payload: document,\n});\nexport const setDocumentError = (error: string): CoreAction => ({\n  type: SET_DOCUMENT_ERROR,\n  payload: error,\n});\nexport const setScale = (scale: number): CoreAction => ({ type: SET_SCALE, payload: scale });\nexport const setRotation = (rotation: Rotation): CoreAction => ({\n  type: SET_ROTATION,\n  payload: rotation,\n});\nexport const setPages = (pages: PdfPageObject[][]): CoreAction => ({\n  type: SET_PAGES,\n  payload: pages,\n});\n","import { Reducer, Action, StoreState, StoreListener, PluginListener } from './types';\nimport { PluginStore } from './plugin-store';\nimport { CORE_ACTION_TYPES } from './actions';\n\n/**\n * A generic, type-safe store class managing core and plugin states, reducers, and subscriptions.\n * @template CoreState The type of the core state.\n * @template CoreAction The type of actions handled by core reducers (extends Action).\n */\nexport class Store<CoreState, CoreAction extends Action = Action> {\n  private state: StoreState<CoreState>;\n  private coreReducer: Reducer<CoreState, CoreAction>;\n  private pluginReducers: Record<string, Reducer<any, Action>> = {};\n\n  private listeners: StoreListener<CoreState>[] = [];\n  private pluginListeners: Record<string, PluginListener[]> = {};\n\n  /**\n   * Initializes the store with the provided core state.\n   * @param reducer          The core reducer function\n   * @param initialCoreState The initial core state\n   */\n  constructor(\n    reducer: Reducer<CoreState, CoreAction>,\n    public initialCoreState: CoreState,\n  ) {\n    this.state = { core: initialCoreState, plugins: {} };\n    this.coreReducer = reducer;\n  }\n\n  /**\n   * Adds a reducer for a plugin-specific state.\n   * @param pluginId The unique identifier for the plugin.\n   * @param reducer The reducer function for the plugin state.\n   * @param initialState The initial state for the plugin.\n   */\n  addPluginReducer<PluginState>(\n    pluginId: string,\n    reducer: Reducer<PluginState, Action>,\n    initialState: PluginState,\n  ) {\n    this.state.plugins[pluginId] = initialState;\n    this.pluginReducers[pluginId] = reducer;\n  }\n\n  /**\n   * Dispatches an action *only* to the core reducer.\n   * Notifies the global store listeners with (action, newState, oldState).\n   *\n   * @param action The action to dispatch, typed as CoreAction\n   * @returns The updated *global* store state\n   */\n  dispatchToCore(action: CoreAction): StoreState<CoreState> {\n    if (!this.coreReducer) {\n      return this.getState();\n    }\n\n    const oldState = this.getState();\n    // Update core state via its reducer\n    this.state.core = this.coreReducer(this.state.core, action);\n\n    const newState = this.getState();\n    // Notify all main-store subscribers\n    this.listeners.forEach((listener) => listener(action, newState, oldState));\n\n    return newState;\n  }\n\n  /**\n   * Dispatches an action *only* to a specific plugin.\n   * Optionally notifies global store listeners if `notifyGlobal` is true.\n   * Always notifies plugin-specific listeners with (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId   The plugin identifier\n   * @param action     The plugin action to dispatch\n   * @param notifyGlobal Whether to also notify global store listeners\n   * @returns The updated *global* store state\n   */\n  dispatchToPlugin<PluginAction extends Action>(\n    pluginId: string,\n    action: PluginAction,\n    notifyGlobal: boolean = true,\n  ): any {\n    const oldGlobalState = this.getState();\n\n    const reducer = this.pluginReducers[pluginId];\n    if (!reducer) {\n      // No plugin found, just return the old state\n      return oldGlobalState;\n    }\n\n    // Grab the old plugin state\n    const oldPluginState = oldGlobalState.plugins[pluginId];\n    // Reduce to new plugin state\n    const newPluginState = reducer(oldPluginState, action);\n    // Update the store's plugin slice\n    this.state.plugins[pluginId] = newPluginState;\n\n    const newGlobalState = this.getState();\n\n    // If we are notifying the main store subscribers about plugin changes\n    if (notifyGlobal) {\n      this.listeners.forEach((listener) => listener(action, newGlobalState, oldGlobalState));\n    }\n\n    // Notify plugin-specific listeners\n    if (this.pluginListeners[pluginId]) {\n      this.pluginListeners[pluginId].forEach((listener) => {\n        listener(action, newPluginState, oldPluginState);\n      });\n    }\n\n    return newPluginState;\n  }\n\n  /**\n   * Dispatches an action to update the state using:\n   * - the core reducer (if it's a CoreAction)\n   * - *all* plugin reducers (regardless of action type), with no global notify for each plugin\n   *\n   * Returns the new *global* store state after all reducers have processed the action.\n   *\n   * @param action The action to dispatch (can be CoreAction or any Action).\n   */\n  dispatch(action: CoreAction | Action): StoreState<CoreState> {\n    // Keep old state to notify global listeners *once*, after all reducers run.\n    const oldState = this.getState();\n    // 1) Apply core reducer (only if action is a CoreAction)\n    if (this.isCoreAction(action)) {\n      this.state.core = this.coreReducer(this.state.core, action);\n    }\n\n    // 2) Apply plugin reducers (without globally notifying after each plugin)\n    for (const pluginId in this.pluginReducers) {\n      const reducer = this.pluginReducers[pluginId];\n      const oldPluginState = oldState.plugins[pluginId];\n      if (reducer) {\n        this.state.plugins[pluginId] = reducer(oldPluginState, action);\n      }\n      // We do *not* notify global listeners or plugin listeners here,\n      // as that might be undesired \"fan-out\". If you want per-plugin subscription\n      // triggered on every dispatch, you can do so here, but that’s up to you.\n    }\n\n    // 3) Notify global listeners *once* with the final new state\n    const newState = this.getState();\n    this.listeners.forEach((listener) => listener(action, newState, oldState));\n\n    // 4) Return the new global store state\n    return newState;\n  }\n\n  /**\n   * Returns a shallow copy of the current state.\n   * @returns The current store state.\n   */\n  getState(): StoreState<CoreState> {\n    return {\n      core: { ...this.state.core },\n      plugins: { ...this.state.plugins },\n    };\n  }\n\n  /**\n   * Subscribes a listener to *global* state changes.\n   * The callback signature is now (action, newState, oldState).\n   *\n   * @param listener The callback to invoke on state changes\n   * @returns A function to unsubscribe the listener\n   */\n  subscribe(listener: StoreListener<CoreState>) {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter((l) => l !== listener);\n    };\n  }\n\n  /**\n   * Subscribes a listener to *plugin-specific* state changes.\n   * The callback signature is now (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId The unique identifier for the plugin.\n   * @param listener The callback to invoke on plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToPlugin(pluginId: string, listener: PluginListener) {\n    if (!(pluginId in this.state.plugins)) {\n      throw new Error(\n        `Plugin state not found for plugin \"${pluginId}\". Did you forget to call addPluginReducer?`,\n      );\n    }\n\n    if (!this.pluginListeners[pluginId]) {\n      this.pluginListeners[pluginId] = [];\n    }\n    this.pluginListeners[pluginId].push(listener);\n\n    return () => {\n      this.pluginListeners[pluginId] = this.pluginListeners[pluginId].filter((l) => l !== listener);\n      if (this.pluginListeners[pluginId].length === 0) {\n        delete this.pluginListeners[pluginId];\n      }\n    };\n  }\n\n  /**\n   * Subscribes to a specific action type (only from the core's action union).\n   * The callback signature is (action, newState, oldState).\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction<T extends CoreAction['type']>(\n    type: T,\n    handler: (\n      action: Extract<CoreAction, { type: T }>,\n      state: StoreState<CoreState>,\n      oldState: StoreState<CoreState>,\n    ) => void,\n  ) {\n    return this.subscribe((action, newState, oldState) => {\n      if (action.type === type) {\n        handler(action as Extract<CoreAction, { type: T }>, newState, oldState);\n      }\n    });\n  }\n\n  /**\n   * Gets a PluginStore handle for a specific plugin.\n   * @param pluginId The unique identifier for the plugin.\n   * @returns A PluginStore instance for the plugin.\n   */\n  getPluginStore<PluginState, PluginAction extends Action>(\n    pluginId: string,\n  ): PluginStore<PluginState, PluginAction> {\n    if (!(pluginId in this.state.plugins)) {\n      throw new Error(\n        `Plugin state not found for plugin \"${pluginId}\". Did you forget to call addPluginReducer?`,\n      );\n    }\n    return new PluginStore<PluginState, PluginAction>(this, pluginId);\n  }\n\n  /**\n   * Helper method to check if an action is a CoreAction.\n   * Adjust if you have a more refined way to differentiate CoreAction vs. any other Action.\n   */\n  public isCoreAction(action: Action): action is CoreAction {\n    // In many codebases you'd do something more robust here\n    // or rely on TypeScript's narrowing logic if possible.\n    return CORE_ACTION_TYPES.includes(action.type as (typeof CORE_ACTION_TYPES)[number]);\n  }\n\n  /**\n   * Destroy the store: drop every listener and plugin reducer\n   */\n  public destroy(): void {\n    // 1. empty listener collections\n    this.listeners.length = 0;\n    for (const id in this.pluginListeners) {\n      this.pluginListeners[id]?.splice?.(0);\n    }\n    this.pluginListeners = {};\n\n    // 2. wipe plugin reducers and states\n    this.pluginReducers = {};\n    this.state.plugins = {};\n\n    // 3. reset core state to initial\n    this.state.core = { ...this.initialCoreState };\n  }\n}\n","// src/geometry.ts\nvar Rotation = /* @__PURE__ */ ((Rotation2) => {\n  Rotation2[Rotation2[\"Degree0\"] = 0] = \"Degree0\";\n  Rotation2[Rotation2[\"Degree90\"] = 1] = \"Degree90\";\n  Rotation2[Rotation2[\"Degree180\"] = 2] = \"Degree180\";\n  Rotation2[Rotation2[\"Degree270\"] = 3] = \"Degree270\";\n  return Rotation2;\n})(Rotation || {});\nfunction toIntPos(p) {\n  return { x: Math.floor(p.x), y: Math.floor(p.y) };\n}\nfunction toIntSize(s) {\n  return { width: Math.ceil(s.width), height: Math.ceil(s.height) };\n}\nfunction toIntRect(r) {\n  return {\n    origin: toIntPos(r.origin),\n    size: toIntSize(r.size)\n  };\n}\nfunction calculateDegree(rotation) {\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return 0;\n    case 1 /* Degree90 */:\n      return 90;\n    case 2 /* Degree180 */:\n      return 180;\n    case 3 /* Degree270 */:\n      return 270;\n  }\n}\nfunction calculateAngle(rotation) {\n  return calculateDegree(rotation) * Math.PI / 180;\n}\nfunction swap(size) {\n  const { width, height } = size;\n  return {\n    width: height,\n    height: width\n  };\n}\nfunction transformSize(size, rotation, scaleFactor) {\n  size = rotation % 2 === 0 ? size : swap(size);\n  return {\n    width: size.width * scaleFactor,\n    height: size.height * scaleFactor\n  };\n}\nfunction quadToRect(q) {\n  const xs = [q.p1.x, q.p2.x, q.p3.x, q.p4.x];\n  const ys = [q.p1.y, q.p2.y, q.p3.y, q.p4.y];\n  return {\n    origin: { x: Math.min(...xs), y: Math.min(...ys) },\n    size: {\n      width: Math.max(...xs) - Math.min(...xs),\n      height: Math.max(...ys) - Math.min(...ys)\n    }\n  };\n}\nfunction rectToQuad(r) {\n  return {\n    p1: { x: r.origin.x, y: r.origin.y },\n    p2: { x: r.origin.x + r.size.width, y: r.origin.y },\n    p3: { x: r.origin.x + r.size.width, y: r.origin.y + r.size.height },\n    p4: { x: r.origin.x, y: r.origin.y + r.size.height }\n  };\n}\nfunction rotatePosition(containerSize, position, rotation) {\n  let x = position.x;\n  let y = position.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      x = position.x;\n      y = position.y;\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - position.y;\n      y = position.x;\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - position.x;\n      y = containerSize.height - position.y;\n      break;\n    case 3 /* Degree270 */:\n      x = position.y;\n      y = containerSize.width - position.x;\n      break;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction scalePosition(position, scaleFactor) {\n  return {\n    x: position.x * scaleFactor,\n    y: position.y * scaleFactor\n  };\n}\nfunction transformPosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(rotatePosition(containerSize, position, rotation), scaleFactor);\n}\nfunction restorePosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(\n    rotatePosition(containerSize, position, (4 - rotation) % 4),\n    1 / scaleFactor\n  );\n}\nfunction rotateRect(containerSize, rect, rotation) {\n  let x = rect.origin.x;\n  let y = rect.origin.y;\n  let size = rect.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - rect.origin.y - rect.size.height;\n      y = rect.origin.x;\n      size = swap(rect.size);\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - rect.origin.x - rect.size.width;\n      y = containerSize.height - rect.origin.y - rect.size.height;\n      break;\n    case 3 /* Degree270 */:\n      x = rect.origin.y;\n      y = containerSize.width - rect.origin.x - rect.size.width;\n      size = swap(rect.size);\n      break;\n  }\n  return {\n    origin: {\n      x,\n      y\n    },\n    size: {\n      width: size.width,\n      height: size.height\n    }\n  };\n}\nfunction scaleRect(rect, scaleFactor) {\n  return {\n    origin: {\n      x: rect.origin.x * scaleFactor,\n      y: rect.origin.y * scaleFactor\n    },\n    size: {\n      width: rect.size.width * scaleFactor,\n      height: rect.size.height * scaleFactor\n    }\n  };\n}\nfunction transformRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, rotation), scaleFactor);\n}\nfunction restoreRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, (4 - rotation) % 4), 1 / scaleFactor);\n}\nfunction restoreOffset(offset, rotation, scaleFactor) {\n  let offsetX = offset.x;\n  let offsetY = offset.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      offsetX = offset.x / scaleFactor;\n      offsetY = offset.y / scaleFactor;\n      break;\n    case 1 /* Degree90 */:\n      offsetX = offset.y / scaleFactor;\n      offsetY = -offset.x / scaleFactor;\n      break;\n    case 2 /* Degree180 */:\n      offsetX = -offset.x / scaleFactor;\n      offsetY = -offset.y / scaleFactor;\n      break;\n    case 3 /* Degree270 */:\n      offsetX = -offset.y / scaleFactor;\n      offsetY = offset.x / scaleFactor;\n      break;\n  }\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\nfunction boundingRect(rects) {\n  if (rects.length === 0) return null;\n  let minX = rects[0].origin.x, minY = rects[0].origin.y, maxX = rects[0].origin.x + rects[0].size.width, maxY = rects[0].origin.y + rects[0].size.height;\n  for (const r of rects) {\n    minX = Math.min(minX, r.origin.x);\n    minY = Math.min(minY, r.origin.y);\n    maxX = Math.max(maxX, r.origin.x + r.size.width);\n    maxY = Math.max(maxY, r.origin.y + r.size.height);\n  }\n  return {\n    origin: {\n      x: minX,\n      y: minY\n    },\n    size: {\n      width: maxX - minX,\n      height: maxY - minY\n    }\n  };\n}\nvar makeMatrix = (rectangle, rotation, scaleFactor) => {\n  const { width, height } = rectangle.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: -scaleFactor,\n        e: 0,\n        f: height * scaleFactor\n      };\n    case 1 /* Degree90 */:\n      return {\n        a: 0,\n        b: scaleFactor,\n        c: scaleFactor,\n        d: 0,\n        e: 0,\n        f: 0\n      };\n    case 2 /* Degree180 */:\n      return {\n        a: -scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: width * scaleFactor,\n        f: 0\n      };\n    case 3 /* Degree270 */:\n      return {\n        a: 0,\n        b: -scaleFactor,\n        c: -scaleFactor,\n        d: 0,\n        e: height * scaleFactor,\n        f: width * scaleFactor\n      };\n  }\n};\n\n// src/logger.ts\nvar NoopLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug() {\n  }\n  /** {@inheritDoc Logger.info} */\n  info() {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn() {\n  }\n  /** {@inheritDoc Logger.error} */\n  error() {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf() {\n  }\n};\nvar ConsoleLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    console.debug(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    console.info(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    console.warn(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    console.error(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    console.info(`${source}.${category}.${event}.${phase}`, ...args);\n  }\n};\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"Debug\"] = 0] = \"Debug\";\n  LogLevel2[LogLevel2[\"Info\"] = 1] = \"Info\";\n  LogLevel2[LogLevel2[\"Warn\"] = 2] = \"Warn\";\n  LogLevel2[LogLevel2[\"Error\"] = 3] = \"Error\";\n  return LogLevel2;\n})(LogLevel || {});\nvar LevelLogger = class {\n  /**\n   * create new LevelLogger\n   * @param logger - the original logger\n   * @param level - log level that used for filtering, all logs lower than this level will be filtered out\n   */\n  constructor(logger, level) {\n    this.logger = logger;\n    this.level = level;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    if (this.level <= 0 /* Debug */) {\n      this.logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    if (this.level <= 1 /* Info */) {\n      this.logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    if (this.level <= 2 /* Warn */) {\n      this.logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    if (this.level <= 3 /* Error */) {\n      this.logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    this.logger.perf(source, category, event, phase, ...args);\n  }\n};\nvar PerfLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor() {\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, identifier, ...args) {\n    switch (phase) {\n      case \"Begin\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        break;\n      case \"End\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        window.performance.measure(\n          `${source}.${category}.${event}.Measure.${identifier}`,\n          `${source}.${category}.${event}.Begin.${identifier}`,\n          `${source}.${category}.${event}.End.${identifier}`\n        );\n        break;\n    }\n  }\n};\nvar AllLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor(loggers) {\n    this.loggers = loggers;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    for (const logger of this.loggers) {\n      logger.perf(source, category, event, phase, ...args);\n    }\n  }\n};\n\n// src/task.ts\nvar TaskStage = /* @__PURE__ */ ((TaskStage2) => {\n  TaskStage2[TaskStage2[\"Pending\"] = 0] = \"Pending\";\n  TaskStage2[TaskStage2[\"Resolved\"] = 1] = \"Resolved\";\n  TaskStage2[TaskStage2[\"Rejected\"] = 2] = \"Rejected\";\n  TaskStage2[TaskStage2[\"Aborted\"] = 3] = \"Aborted\";\n  return TaskStage2;\n})(TaskStage || {});\nvar TaskAbortedError = class extends Error {\n  constructor(reason) {\n    super(`Task aborted: ${JSON.stringify(reason)}`);\n    this.name = \"TaskAbortedError\";\n  }\n};\nvar TaskRejectedError = class extends Error {\n  constructor(reason) {\n    super(`Task rejected: ${JSON.stringify(reason)}`);\n    this.name = \"TaskRejectedError\";\n  }\n};\nvar Task = class _Task {\n  constructor() {\n    this.state = {\n      stage: 0 /* Pending */\n    };\n    /**\n     * callbacks that will be executed when task is resolved\n     */\n    this.resolvedCallbacks = [];\n    /**\n     * callbacks that will be executed when task is rejected\n     */\n    this.rejectedCallbacks = [];\n    /**\n     * Promise that will be resolved when task is settled\n     */\n    this._promise = null;\n  }\n  /**\n   * Convert task to promise\n   * @returns promise that will be resolved when task is settled\n   */\n  toPromise() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this.wait(\n          (result) => resolve(result),\n          (error) => {\n            if (error.type === \"abort\") {\n              reject(new TaskAbortedError(error.reason));\n            } else {\n              reject(new TaskRejectedError(error.reason));\n            }\n          }\n        );\n      });\n    }\n    return this._promise;\n  }\n  /**\n   * wait for task to be settled\n   * @param resolvedCallback - callback for resolved value\n   * @param rejectedCallback - callback for rejected value\n   */\n  wait(resolvedCallback, rejectedCallback) {\n    switch (this.state.stage) {\n      case 0 /* Pending */:\n        this.resolvedCallbacks.push(resolvedCallback);\n        this.rejectedCallbacks.push(rejectedCallback);\n        break;\n      case 1 /* Resolved */:\n        resolvedCallback(this.state.result);\n        break;\n      case 2 /* Rejected */:\n        rejectedCallback({\n          type: \"reject\",\n          reason: this.state.reason\n        });\n        break;\n      case 3 /* Aborted */:\n        rejectedCallback({\n          type: \"abort\",\n          reason: this.state.reason\n        });\n        break;\n    }\n  }\n  /**\n   * resolve task with specific result\n   * @param result - result value\n   */\n  resolve(result) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 1 /* Resolved */,\n        result\n      };\n      for (const resolvedCallback of this.resolvedCallbacks) {\n        try {\n          resolvedCallback(result);\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * reject task with specific reason\n   * @param reason - abort reason\n   *\n   */\n  reject(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 2 /* Rejected */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"reject\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * abort task with specific reason\n   * @param reason - abort reason\n   */\n  abort(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 3 /* Aborted */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"abort\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * fail task with a TaskError from another task\n   * This is a convenience method for error propagation between tasks\n   * @param error - TaskError from another task\n   */\n  fail(error) {\n    if (error.type === \"abort\") {\n      this.abort(error.reason);\n    } else {\n      this.reject(error.reason);\n    }\n  }\n  /**\n   * Static method to wait for all tasks to resolve\n   * Returns a new task that resolves with an array of all results\n   * Rejects immediately if any task fails\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static all(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let resolvedCount = 0;\n    let isSettled = false;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          results[index] = result;\n          resolvedCount++;\n          if (resolvedCount === tasks.length) {\n            isSettled = true;\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method to wait for all tasks to settle (resolve, reject, or abort)\n   * Always resolves with an array of settlement results\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks settle\n   * @public\n   */\n  static allSettled(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let settledCount = 0;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          results[index] = { status: \"resolved\", value: result };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          results[index] = {\n            status: error.type === \"abort\" ? \"aborted\" : \"rejected\",\n            reason: error.reason\n          };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method that resolves/rejects with the first task that settles\n   *\n   * @param tasks - array of tasks to race\n   * @returns new task that settles with the first input task that settles\n   * @public\n   */\n  static race(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.reject(\"No tasks provided\");\n      return combinedTask;\n    }\n    let isSettled = false;\n    tasks.forEach((task) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          isSettled = true;\n          combinedTask.resolve(result);\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Utility to track progress of multiple tasks\n   *\n   * @param tasks - array of tasks to track\n   * @param onProgress - callback called when any task completes\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static withProgress(tasks, onProgress) {\n    const combinedTask = _Task.all(tasks);\n    if (onProgress) {\n      let completedCount = 0;\n      tasks.forEach((task) => {\n        task.wait(\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          }\n        );\n      });\n    }\n    return combinedTask;\n  }\n};\n\n// src/pdf.ts\nvar PdfSoftHyphenMarker = \"\\xAD\";\nvar PdfZeroWidthSpace = \"\\u200B\";\nvar PdfWordJoiner = \"\\u2060\";\nvar PdfBomOrZwnbsp = \"\\uFEFF\";\nvar PdfNonCharacterFFFE = \"\\uFFFE\";\nvar PdfNonCharacterFFFF = \"\\uFFFF\";\nvar PdfUnwantedTextMarkers = Object.freeze([\n  PdfSoftHyphenMarker,\n  PdfZeroWidthSpace,\n  PdfWordJoiner,\n  PdfBomOrZwnbsp,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF\n]);\nvar PdfUnwantedTextRegex = new RegExp(`[${PdfUnwantedTextMarkers.join(\"\")}]`, \"g\");\nfunction stripPdfUnwantedMarkers(text) {\n  return text.replace(PdfUnwantedTextRegex, \"\");\n}\nvar PdfZoomMode = /* @__PURE__ */ ((PdfZoomMode2) => {\n  PdfZoomMode2[PdfZoomMode2[\"Unknown\"] = 0] = \"Unknown\";\n  PdfZoomMode2[PdfZoomMode2[\"XYZ\"] = 1] = \"XYZ\";\n  PdfZoomMode2[PdfZoomMode2[\"FitPage\"] = 2] = \"FitPage\";\n  PdfZoomMode2[PdfZoomMode2[\"FitHorizontal\"] = 3] = \"FitHorizontal\";\n  PdfZoomMode2[PdfZoomMode2[\"FitVertical\"] = 4] = \"FitVertical\";\n  PdfZoomMode2[PdfZoomMode2[\"FitRectangle\"] = 5] = \"FitRectangle\";\n  return PdfZoomMode2;\n})(PdfZoomMode || {});\nvar PdfBlendMode = /* @__PURE__ */ ((PdfBlendMode2) => {\n  PdfBlendMode2[PdfBlendMode2[\"Normal\"] = 0] = \"Normal\";\n  PdfBlendMode2[PdfBlendMode2[\"Multiply\"] = 1] = \"Multiply\";\n  PdfBlendMode2[PdfBlendMode2[\"Screen\"] = 2] = \"Screen\";\n  PdfBlendMode2[PdfBlendMode2[\"Overlay\"] = 3] = \"Overlay\";\n  PdfBlendMode2[PdfBlendMode2[\"Darken\"] = 4] = \"Darken\";\n  PdfBlendMode2[PdfBlendMode2[\"Lighten\"] = 5] = \"Lighten\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorDodge\"] = 6] = \"ColorDodge\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorBurn\"] = 7] = \"ColorBurn\";\n  PdfBlendMode2[PdfBlendMode2[\"HardLight\"] = 8] = \"HardLight\";\n  PdfBlendMode2[PdfBlendMode2[\"SoftLight\"] = 9] = \"SoftLight\";\n  PdfBlendMode2[PdfBlendMode2[\"Difference\"] = 10] = \"Difference\";\n  PdfBlendMode2[PdfBlendMode2[\"Exclusion\"] = 11] = \"Exclusion\";\n  PdfBlendMode2[PdfBlendMode2[\"Hue\"] = 12] = \"Hue\";\n  PdfBlendMode2[PdfBlendMode2[\"Saturation\"] = 13] = \"Saturation\";\n  PdfBlendMode2[PdfBlendMode2[\"Color\"] = 14] = \"Color\";\n  PdfBlendMode2[PdfBlendMode2[\"Luminosity\"] = 15] = \"Luminosity\";\n  return PdfBlendMode2;\n})(PdfBlendMode || {});\nvar MixedBlendMode = Symbol(\"mixed\");\nvar BLEND_MODE_INFOS = Object.freeze([\n  { id: 0 /* Normal */, label: \"Normal\", css: \"normal\" },\n  { id: 1 /* Multiply */, label: \"Multiply\", css: \"multiply\" },\n  { id: 2 /* Screen */, label: \"Screen\", css: \"screen\" },\n  { id: 3 /* Overlay */, label: \"Overlay\", css: \"overlay\" },\n  { id: 4 /* Darken */, label: \"Darken\", css: \"darken\" },\n  { id: 5 /* Lighten */, label: \"Lighten\", css: \"lighten\" },\n  { id: 6 /* ColorDodge */, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7 /* ColorBurn */, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8 /* HardLight */, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9 /* SoftLight */, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10 /* Difference */, label: \"Difference\", css: \"difference\" },\n  { id: 11 /* Exclusion */, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12 /* Hue */, label: \"Hue\", css: \"hue\" },\n  { id: 13 /* Saturation */, label: \"Saturation\", css: \"saturation\" },\n  { id: 14 /* Color */, label: \"Color\", css: \"color\" },\n  { id: 15 /* Luminosity */, label: \"Luminosity\", css: \"luminosity\" }\n]);\nvar enumToInfo = BLEND_MODE_INFOS.reduce(\n  (m, info) => {\n    m[info.id] = info;\n    return m;\n  },\n  {}\n);\nvar cssToEnum = BLEND_MODE_INFOS.reduce((m, info) => {\n  m[info.css] = info.id;\n  return m;\n}, {});\nfunction getBlendModeInfo(mode) {\n  return enumToInfo[mode] ?? enumToInfo[0 /* Normal */];\n}\nfunction blendModeToCss(mode) {\n  return getBlendModeInfo(mode).css;\n}\nfunction cssToBlendMode(value) {\n  return cssToEnum[value];\n}\nfunction blendModeLabel(mode) {\n  return getBlendModeInfo(mode).label;\n}\nfunction reduceBlendModes(modes) {\n  if (!modes.length) return 0 /* Normal */;\n  const first = modes[0];\n  return modes.every((m) => m === first) ? first : MixedBlendMode;\n}\nvar blendModeSelectOptions = BLEND_MODE_INFOS.map((info) => ({\n  value: info.id,\n  label: info.label\n}));\nfunction uiBlendModeDisplay(value) {\n  return value === MixedBlendMode ? \"(mixed)\" : blendModeLabel(value);\n}\nvar PdfActionType = /* @__PURE__ */ ((PdfActionType2) => {\n  PdfActionType2[PdfActionType2[\"Unsupported\"] = 0] = \"Unsupported\";\n  PdfActionType2[PdfActionType2[\"Goto\"] = 1] = \"Goto\";\n  PdfActionType2[PdfActionType2[\"RemoteGoto\"] = 2] = \"RemoteGoto\";\n  PdfActionType2[PdfActionType2[\"URI\"] = 3] = \"URI\";\n  PdfActionType2[PdfActionType2[\"LaunchAppOrOpenFile\"] = 4] = \"LaunchAppOrOpenFile\";\n  return PdfActionType2;\n})(PdfActionType || {});\nvar PdfAnnotationSubtype = /* @__PURE__ */ ((PdfAnnotationSubtype2) => {\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINK\"] = 2] = \"LINK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FREETEXT\"] = 3] = \"FREETEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINE\"] = 4] = \"LINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUARE\"] = 5] = \"SQUARE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CIRCLE\"] = 6] = \"CIRCLE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYGON\"] = 7] = \"POLYGON\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYLINE\"] = 8] = \"POLYLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"HIGHLIGHT\"] = 9] = \"HIGHLIGHT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNDERLINE\"] = 10] = \"UNDERLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUIGGLY\"] = 11] = \"SQUIGGLY\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STRIKEOUT\"] = 12] = \"STRIKEOUT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STAMP\"] = 13] = \"STAMP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CARET\"] = 14] = \"CARET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"INK\"] = 15] = \"INK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POPUP\"] = 16] = \"POPUP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FILEATTACHMENT\"] = 17] = \"FILEATTACHMENT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SOUND\"] = 18] = \"SOUND\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"MOVIE\"] = 19] = \"MOVIE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WIDGET\"] = 20] = \"WIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SCREEN\"] = 21] = \"SCREEN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"PRINTERMARK\"] = 22] = \"PRINTERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TRAPNET\"] = 23] = \"TRAPNET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WATERMARK\"] = 24] = \"WATERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"THREED\"] = 25] = \"THREED\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"RICHMEDIA\"] = 26] = \"RICHMEDIA\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"XFAWIDGET\"] = 27] = \"XFAWIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"REDACT\"] = 28] = \"REDACT\";\n  return PdfAnnotationSubtype2;\n})(PdfAnnotationSubtype || {});\nvar PdfAnnotationSubtypeName = {\n  [0 /* UNKNOWN */]: \"unknow\",\n  [1 /* TEXT */]: \"text\",\n  [2 /* LINK */]: \"link\",\n  [3 /* FREETEXT */]: \"freetext\",\n  [4 /* LINE */]: \"line\",\n  [5 /* SQUARE */]: \"square\",\n  [6 /* CIRCLE */]: \"circle\",\n  [7 /* POLYGON */]: \"polygon\",\n  [8 /* POLYLINE */]: \"polyline\",\n  [9 /* HIGHLIGHT */]: \"highlight\",\n  [10 /* UNDERLINE */]: \"underline\",\n  [11 /* SQUIGGLY */]: \"squiggly\",\n  [12 /* STRIKEOUT */]: \"strikeout\",\n  [13 /* STAMP */]: \"stamp\",\n  [14 /* CARET */]: \"caret\",\n  [15 /* INK */]: \"ink\",\n  [16 /* POPUP */]: \"popup\",\n  [17 /* FILEATTACHMENT */]: \"fileattachment\",\n  [18 /* SOUND */]: \"sound\",\n  [19 /* MOVIE */]: \"movie\",\n  [20 /* WIDGET */]: \"widget\",\n  [21 /* SCREEN */]: \"screen\",\n  [22 /* PRINTERMARK */]: \"printermark\",\n  [23 /* TRAPNET */]: \"trapnet\",\n  [24 /* WATERMARK */]: \"watermark\",\n  [25 /* THREED */]: \"threed\",\n  [26 /* RICHMEDIA */]: \"richmedia\",\n  [27 /* XFAWIDGET */]: \"xfawidget\",\n  [28 /* REDACT */]: \"redact\"\n};\nvar PdfAnnotationObjectStatus = /* @__PURE__ */ ((PdfAnnotationObjectStatus2) => {\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Created\"] = 0] = \"Created\";\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Committed\"] = 1] = \"Committed\";\n  return PdfAnnotationObjectStatus2;\n})(PdfAnnotationObjectStatus || {});\nvar AppearanceMode = /* @__PURE__ */ ((AppearanceMode2) => {\n  AppearanceMode2[AppearanceMode2[\"Normal\"] = 0] = \"Normal\";\n  AppearanceMode2[AppearanceMode2[\"Rollover\"] = 1] = \"Rollover\";\n  AppearanceMode2[AppearanceMode2[\"Down\"] = 2] = \"Down\";\n  return AppearanceMode2;\n})(AppearanceMode || {});\nvar PdfAnnotationState = /* @__PURE__ */ ((PdfAnnotationState2) => {\n  PdfAnnotationState2[\"Marked\"] = \"Marked\";\n  PdfAnnotationState2[\"Unmarked\"] = \"Unmarked\";\n  PdfAnnotationState2[\"Accepted\"] = \"Accepted\";\n  PdfAnnotationState2[\"Rejected\"] = \"Rejected\";\n  PdfAnnotationState2[\"Complete\"] = \"Complete\";\n  PdfAnnotationState2[\"Cancelled\"] = \"Cancelled\";\n  PdfAnnotationState2[\"None\"] = \"None\";\n  return PdfAnnotationState2;\n})(PdfAnnotationState || {});\nvar PdfAnnotationStateModel = /* @__PURE__ */ ((PdfAnnotationStateModel2) => {\n  PdfAnnotationStateModel2[\"Marked\"] = \"Marked\";\n  PdfAnnotationStateModel2[\"Reviewed\"] = \"Reviewed\";\n  return PdfAnnotationStateModel2;\n})(PdfAnnotationStateModel || {});\nvar PDF_FORM_FIELD_TYPE = /* @__PURE__ */ ((PDF_FORM_FIELD_TYPE2) => {\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"PUSHBUTTON\"] = 1] = \"PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"CHECKBOX\"] = 2] = \"CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"RADIOBUTTON\"] = 3] = \"RADIOBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"COMBOBOX\"] = 4] = \"COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"LISTBOX\"] = 5] = \"LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"TEXTFIELD\"] = 6] = \"TEXTFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"SIGNATURE\"] = 7] = \"SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA\"] = 8] = \"XFA\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_CHECKBOX\"] = 9] = \"XFA_CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_COMBOBOX\"] = 10] = \"XFA_COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_IMAGEFIELD\"] = 11] = \"XFA_IMAGEFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_LISTBOX\"] = 12] = \"XFA_LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_PUSHBUTTON\"] = 13] = \"XFA_PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_SIGNATURE\"] = 14] = \"XFA_SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_TEXTFIELD\"] = 15] = \"XFA_TEXTFIELD\";\n  return PDF_FORM_FIELD_TYPE2;\n})(PDF_FORM_FIELD_TYPE || {});\nvar PdfAnnotationColorType = /* @__PURE__ */ ((PdfAnnotationColorType2) => {\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"Color\"] = 0] = \"Color\";\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"InteriorColor\"] = 1] = \"InteriorColor\";\n  return PdfAnnotationColorType2;\n})(PdfAnnotationColorType || {});\nvar PdfAnnotationBorderStyle = /* @__PURE__ */ ((PdfAnnotationBorderStyle2) => {\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"SOLID\"] = 1] = \"SOLID\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"DASHED\"] = 2] = \"DASHED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"BEVELED\"] = 3] = \"BEVELED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"INSET\"] = 4] = \"INSET\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNDERLINE\"] = 5] = \"UNDERLINE\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"CLOUDY\"] = 6] = \"CLOUDY\";\n  return PdfAnnotationBorderStyle2;\n})(PdfAnnotationBorderStyle || {});\nvar PdfAnnotationFlags = /* @__PURE__ */ ((PdfAnnotationFlags2) => {\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NONE\"] = 0] = \"NONE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"INVISIBLE\"] = 1] = \"INVISIBLE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"HIDDEN\"] = 2] = \"HIDDEN\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"PRINT\"] = 4] = \"PRINT\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ZOOM\"] = 8] = \"NO_ZOOM\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ROTATE\"] = 16] = \"NO_ROTATE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_VIEW\"] = 32] = \"NO_VIEW\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"READ_ONLY\"] = 64] = \"READ_ONLY\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"LOCKED\"] = 128] = \"LOCKED\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"TOGGLE_NOVIEW\"] = 256] = \"TOGGLE_NOVIEW\";\n  return PdfAnnotationFlags2;\n})(PdfAnnotationFlags || {});\nvar PDF_FORM_FIELD_FLAG = /* @__PURE__ */ ((PDF_FORM_FIELD_FLAG2) => {\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NONE\"] = 0] = \"NONE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"READONLY\"] = 1] = \"READONLY\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"REQUIRED\"] = 2] = \"REQUIRED\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NOEXPORT\"] = 4] = \"NOEXPORT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_MULTIPLINE\"] = 4096] = \"TEXT_MULTIPLINE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_PASSWORD\"] = 8192] = \"TEXT_PASSWORD\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_COMBO\"] = 131072] = \"CHOICE_COMBO\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_EDIT\"] = 262144] = \"CHOICE_EDIT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_MULTL_SELECT\"] = 2097152] = \"CHOICE_MULTL_SELECT\";\n  return PDF_FORM_FIELD_FLAG2;\n})(PDF_FORM_FIELD_FLAG || {});\nvar PdfPageObjectType = /* @__PURE__ */ ((PdfPageObjectType2) => {\n  PdfPageObjectType2[PdfPageObjectType2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfPageObjectType2[PdfPageObjectType2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfPageObjectType2[PdfPageObjectType2[\"PATH\"] = 2] = \"PATH\";\n  PdfPageObjectType2[PdfPageObjectType2[\"IMAGE\"] = 3] = \"IMAGE\";\n  PdfPageObjectType2[PdfPageObjectType2[\"SHADING\"] = 4] = \"SHADING\";\n  PdfPageObjectType2[PdfPageObjectType2[\"FORM\"] = 5] = \"FORM\";\n  return PdfPageObjectType2;\n})(PdfPageObjectType || {});\nvar PdfAnnotationFlagName = Object.freeze({\n  [1 /* INVISIBLE */]: \"invisible\",\n  [2 /* HIDDEN */]: \"hidden\",\n  [4 /* PRINT */]: \"print\",\n  [8 /* NO_ZOOM */]: \"noZoom\",\n  [16 /* NO_ROTATE */]: \"noRotate\",\n  [32 /* NO_VIEW */]: \"noView\",\n  [64 /* READ_ONLY */]: \"readOnly\",\n  [128 /* LOCKED */]: \"locked\",\n  [256 /* TOGGLE_NOVIEW */]: \"toggleNoView\"\n});\nvar PdfAnnotationFlagValue = Object.entries(\n  PdfAnnotationFlagName\n).reduce(\n  (acc, [bit, name]) => {\n    acc[name] = Number(bit);\n    return acc;\n  },\n  {}\n);\nfunction flagsToNames(raw) {\n  return Object.keys(PdfAnnotationFlagName).filter((flag) => (raw & flag) !== 0).map((flag) => PdfAnnotationFlagName[flag]);\n}\nfunction namesToFlags(names) {\n  return names.reduce(\n    (mask, name) => mask | PdfAnnotationFlagValue[name],\n    0 /* NONE */\n  );\n}\nvar PdfSegmentObjectType = /* @__PURE__ */ ((PdfSegmentObjectType2) => {\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"LINETO\"] = 0] = \"LINETO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"BEZIERTO\"] = 1] = \"BEZIERTO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"MOVETO\"] = 2] = \"MOVETO\";\n  return PdfSegmentObjectType2;\n})(PdfSegmentObjectType || {});\nvar PdfEngineFeature = /* @__PURE__ */ ((PdfEngineFeature2) => {\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPage\"] = 0] = \"RenderPage\";\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPageRect\"] = 1] = \"RenderPageRect\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Thumbnails\"] = 2] = \"Thumbnails\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Bookmarks\"] = 3] = \"Bookmarks\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Annotations\"] = 4] = \"Annotations\";\n  return PdfEngineFeature2;\n})(PdfEngineFeature || {});\nvar PdfEngineOperation = /* @__PURE__ */ ((PdfEngineOperation2) => {\n  PdfEngineOperation2[PdfEngineOperation2[\"Create\"] = 0] = \"Create\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Read\"] = 1] = \"Read\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Update\"] = 2] = \"Update\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Delete\"] = 3] = \"Delete\";\n  return PdfEngineOperation2;\n})(PdfEngineOperation || {});\nvar MatchFlag = /* @__PURE__ */ ((MatchFlag2) => {\n  MatchFlag2[MatchFlag2[\"None\"] = 0] = \"None\";\n  MatchFlag2[MatchFlag2[\"MatchCase\"] = 1] = \"MatchCase\";\n  MatchFlag2[MatchFlag2[\"MatchWholeWord\"] = 2] = \"MatchWholeWord\";\n  MatchFlag2[MatchFlag2[\"MatchConsecutive\"] = 4] = \"MatchConsecutive\";\n  return MatchFlag2;\n})(MatchFlag || {});\nfunction unionFlags(flags) {\n  return flags.reduce((flag, currFlag) => {\n    return flag | currFlag;\n  }, 0 /* None */);\n}\nfunction compareSearchTarget(targetA, targetB) {\n  const flagA = unionFlags(targetA.flags);\n  const flagB = unionFlags(targetB.flags);\n  return flagA === flagB && targetA.keyword === targetB.keyword;\n}\nvar PdfPermission = /* @__PURE__ */ ((PdfPermission2) => {\n  PdfPermission2[PdfPermission2[\"PrintDocument\"] = 8] = \"PrintDocument\";\n  PdfPermission2[PdfPermission2[\"ModifyContent\"] = 16] = \"ModifyContent\";\n  PdfPermission2[PdfPermission2[\"CopyOrExtract\"] = 32] = \"CopyOrExtract\";\n  PdfPermission2[PdfPermission2[\"AddOrModifyTextAnnot\"] = 64] = \"AddOrModifyTextAnnot\";\n  PdfPermission2[PdfPermission2[\"FillInExistingForm\"] = 512] = \"FillInExistingForm\";\n  PdfPermission2[PdfPermission2[\"ExtractTextOrGraphics\"] = 1024] = \"ExtractTextOrGraphics\";\n  PdfPermission2[PdfPermission2[\"AssembleDocument\"] = 2048] = \"AssembleDocument\";\n  PdfPermission2[PdfPermission2[\"PrintHighQuality\"] = 4096] = \"PrintHighQuality\";\n  return PdfPermission2;\n})(PdfPermission || {});\nvar PdfPageFlattenFlag = /* @__PURE__ */ ((PdfPageFlattenFlag2) => {\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Display\"] = 0] = \"Display\";\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Print\"] = 1] = \"Print\";\n  return PdfPageFlattenFlag2;\n})(PdfPageFlattenFlag || {});\nvar PdfPageFlattenResult = /* @__PURE__ */ ((PdfPageFlattenResult2) => {\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Fail\"] = 0] = \"Fail\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Success\"] = 1] = \"Success\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"NothingToDo\"] = 2] = \"NothingToDo\";\n  return PdfPageFlattenResult2;\n})(PdfPageFlattenResult || {});\nvar PdfErrorCode = /* @__PURE__ */ ((PdfErrorCode2) => {\n  PdfErrorCode2[PdfErrorCode2[\"Ok\"] = 0] = \"Ok\";\n  PdfErrorCode2[PdfErrorCode2[\"Unknown\"] = 1] = \"Unknown\";\n  PdfErrorCode2[PdfErrorCode2[\"NotFound\"] = 2] = \"NotFound\";\n  PdfErrorCode2[PdfErrorCode2[\"WrongFormat\"] = 3] = \"WrongFormat\";\n  PdfErrorCode2[PdfErrorCode2[\"Password\"] = 4] = \"Password\";\n  PdfErrorCode2[PdfErrorCode2[\"Security\"] = 5] = \"Security\";\n  PdfErrorCode2[PdfErrorCode2[\"PageError\"] = 6] = \"PageError\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALoad\"] = 7] = \"XFALoad\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALayout\"] = 8] = \"XFALayout\";\n  PdfErrorCode2[PdfErrorCode2[\"Cancelled\"] = 9] = \"Cancelled\";\n  PdfErrorCode2[PdfErrorCode2[\"Initialization\"] = 10] = \"Initialization\";\n  PdfErrorCode2[PdfErrorCode2[\"NotReady\"] = 11] = \"NotReady\";\n  PdfErrorCode2[PdfErrorCode2[\"NotSupport\"] = 12] = \"NotSupport\";\n  PdfErrorCode2[PdfErrorCode2[\"LoadDoc\"] = 13] = \"LoadDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"DocNotOpen\"] = 14] = \"DocNotOpen\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCloseDoc\"] = 15] = \"CantCloseDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateNewDoc\"] = 16] = \"CantCreateNewDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantImportPages\"] = 17] = \"CantImportPages\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateAnnot\"] = 18] = \"CantCreateAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotRect\"] = 19] = \"CantSetAnnotRect\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotContent\"] = 20] = \"CantSetAnnotContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantRemoveInkList\"] = 21] = \"CantRemoveInkList\";\n  PdfErrorCode2[PdfErrorCode2[\"CantAddInkStoke\"] = 22] = \"CantAddInkStoke\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentSize\"] = 23] = \"CantReadAttachmentSize\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentContent\"] = 24] = \"CantReadAttachmentContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantFocusAnnot\"] = 25] = \"CantFocusAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectText\"] = 26] = \"CantSelectText\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectOption\"] = 27] = \"CantSelectOption\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCheckField\"] = 28] = \"CantCheckField\";\n  return PdfErrorCode2;\n})(PdfErrorCode || {});\nvar PdfTaskHelper = class {\n  /**\n   * Create a task\n   * @returns new task\n   */\n  static create() {\n    return new Task();\n  }\n  /**\n   * Create a task that has been resolved with value\n   * @param result - resolved value\n   * @returns resolved task\n   */\n  static resolve(result) {\n    const task = new Task();\n    task.resolve(result);\n    return task;\n  }\n  /**\n   * Create a task that has been rejected with error\n   * @param reason - rejected error\n   * @returns rejected task\n   */\n  static reject(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n  /**\n   * Create a task that has been aborted with error\n   * @param reason - aborted error\n   * @returns aborted task\n   */\n  static abort(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n};\n\n// src/color.ts\nfunction pdfAlphaColorToWebAlphaColor(c) {\n  const clamp = (n) => Math.max(0, Math.min(255, n));\n  const toHex = (n) => clamp(n).toString(16).padStart(2, \"0\");\n  const color = `#${toHex(c.red)}${toHex(c.green)}${toHex(c.blue)}`;\n  const opacity = clamp(c.alpha) / 255;\n  return { color, opacity };\n}\nfunction webAlphaColorToPdfAlphaColor({ color, opacity }) {\n  if (/^#?[0-9a-f]{3}$/i.test(color)) {\n    color = color.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, \"#$1$1$2$2$3$3\").toLowerCase();\n  }\n  const [, r, g, b] = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color) ?? (() => {\n    throw new Error(`Invalid hex colour: \\u201C${color}\\u201D`);\n  })();\n  const clamp = (n, hi = 255) => Math.max(0, Math.min(hi, n));\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: clamp(Math.round(opacity * 255))\n  };\n}\n\n// src/date.ts\nfunction pdfDateToDate(pdf) {\n  if (!pdf?.startsWith(\"D:\") || pdf.length < 16) return;\n  const y = +pdf.slice(2, 6);\n  const mo = +pdf.slice(6, 8) - 1;\n  const d = +pdf.slice(8, 10);\n  const H = +pdf.slice(10, 12);\n  const M = +pdf.slice(12, 14);\n  const S = +pdf.slice(14, 16);\n  return new Date(Date.UTC(y, mo, d, H, M, S));\n}\nfunction dateToPdfDate(date = /* @__PURE__ */ new Date()) {\n  const z = (n, len = 2) => n.toString().padStart(len, \"0\");\n  const YYYY = date.getUTCFullYear();\n  const MM = z(date.getUTCMonth() + 1);\n  const DD = z(date.getUTCDate());\n  const HH = z(date.getUTCHours());\n  const mm = z(date.getUTCMinutes());\n  const SS = z(date.getUTCSeconds());\n  return `D:${YYYY}${MM}${DD}${HH}${mm}${SS}`;\n}\n\n// src/index.ts\nfunction ignore() {\n}\nexport {\n  AllLogger,\n  AppearanceMode,\n  ConsoleLogger,\n  LevelLogger,\n  LogLevel,\n  MatchFlag,\n  MixedBlendMode,\n  NoopLogger,\n  PDF_FORM_FIELD_FLAG,\n  PDF_FORM_FIELD_TYPE,\n  PdfActionType,\n  PdfAnnotationBorderStyle,\n  PdfAnnotationColorType,\n  PdfAnnotationFlagName,\n  PdfAnnotationFlags,\n  PdfAnnotationObjectStatus,\n  PdfAnnotationState,\n  PdfAnnotationStateModel,\n  PdfAnnotationSubtype,\n  PdfAnnotationSubtypeName,\n  PdfBlendMode,\n  PdfBomOrZwnbsp,\n  PdfEngineFeature,\n  PdfEngineOperation,\n  PdfErrorCode,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF,\n  PdfPageFlattenFlag,\n  PdfPageFlattenResult,\n  PdfPageObjectType,\n  PdfPermission,\n  PdfSegmentObjectType,\n  PdfSoftHyphenMarker,\n  PdfTaskHelper,\n  PdfUnwantedTextMarkers,\n  PdfUnwantedTextRegex,\n  PdfWordJoiner,\n  PdfZeroWidthSpace,\n  PdfZoomMode,\n  PerfLogger,\n  Rotation,\n  Task,\n  TaskAbortedError,\n  TaskRejectedError,\n  TaskStage,\n  blendModeLabel,\n  blendModeSelectOptions,\n  blendModeToCss,\n  boundingRect,\n  calculateAngle,\n  calculateDegree,\n  compareSearchTarget,\n  cssToBlendMode,\n  dateToPdfDate,\n  flagsToNames,\n  getBlendModeInfo,\n  ignore,\n  makeMatrix,\n  namesToFlags,\n  pdfAlphaColorToWebAlphaColor,\n  pdfDateToDate,\n  quadToRect,\n  rectToQuad,\n  reduceBlendModes,\n  restoreOffset,\n  restorePosition,\n  restoreRect,\n  rotatePosition,\n  rotateRect,\n  scalePosition,\n  scaleRect,\n  stripPdfUnwantedMarkers,\n  swap,\n  toIntPos,\n  toIntRect,\n  toIntSize,\n  transformPosition,\n  transformRect,\n  transformSize,\n  uiBlendModeDisplay,\n  unionFlags,\n  webAlphaColorToPdfAlphaColor\n};\n//# sourceMappingURL=index.js.map","import { PdfDocumentObject, PdfPageObject, Rotation } from '@embedpdf/models';\nimport { PluginRegistryConfig } from '../types/plugin';\n\nexport interface CoreState {\n  scale: number;\n  rotation: Rotation;\n  document: PdfDocumentObject | null;\n  pages: PdfPageObject[][];\n  loading: boolean;\n  error: string | null;\n}\n\nexport const initialCoreState: (config?: PluginRegistryConfig) => CoreState = (config) => ({\n  scale: config?.scale ?? 1,\n  rotation: config?.rotation ?? Rotation.Degree0,\n  document: null,\n  pages: [],\n  loading: false,\n  error: null,\n});\n","import { Reducer } from './types';\nimport { CoreState } from './initial-state';\nimport {\n  CoreAction,\n  LOAD_DOCUMENT,\n  SET_DOCUMENT,\n  SET_DOCUMENT_ERROR,\n  SET_PAGES,\n  SET_ROTATION,\n  SET_SCALE,\n} from './actions';\n\nexport const coreReducer: Reducer<CoreState, CoreAction> = (state, action): CoreState => {\n  switch (action.type) {\n    case LOAD_DOCUMENT:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case SET_DOCUMENT:\n      return {\n        ...state,\n        document: action.payload,\n        pages: action.payload.pages.map((page) => [page]),\n        loading: false,\n        error: null,\n      };\n\n    case SET_ROTATION:\n      return {\n        ...state,\n        rotation: action.payload,\n      };\n\n    case SET_PAGES:\n      return {\n        ...state,\n        pages: action.payload,\n      };\n\n    case SET_DOCUMENT_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    case SET_SCALE:\n      return {\n        ...state,\n        scale: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { DependencyResolver } from '../utils/dependency-resolver';\nimport {\n  IPlugin,\n  PluginBatchRegistration,\n  PluginManifest,\n  PluginStatus,\n  PluginPackage,\n  PluginRegistryConfig,\n} from '../types/plugin';\nimport {\n  PluginRegistrationError,\n  PluginNotFoundError,\n  CircularDependencyError,\n  CapabilityNotFoundError,\n  PluginConfigurationError,\n} from '../types/errors';\nimport { ignore, PdfEngine, Rotation } from '@embedpdf/models';\nimport { Action, CoreState, Store, initialCoreState, Reducer } from '../store';\nimport { CoreAction } from '../store/actions';\nimport { coreReducer } from '../store/reducer';\n\n// Define a more flexible generic type for plugin registrations\ninterface PluginRegistration {\n  // Use existential types for the plugin package to allow accepting any plugin type\n  package: PluginPackage<any, any, any, any>;\n  config?: any;\n}\n\nexport class PluginRegistry {\n  private plugins: Map<string, IPlugin> = new Map();\n  private manifests: Map<string, PluginManifest> = new Map();\n  private capabilities: Map<string, string> = new Map(); // capability -> pluginId\n  private status: Map<string, PluginStatus> = new Map();\n  private resolver: DependencyResolver;\n  private configurations: Map<string, unknown> = new Map();\n  private engine: PdfEngine;\n  private engineInitialized = false;\n  private store: Store<CoreState, CoreAction>;\n  private initPromise: Promise<void> | null = null;\n\n  private pendingRegistrations: PluginRegistration[] = [];\n  private processingRegistrations: PluginRegistration[] = [];\n  private initialized = false;\n  private isInitializing = false;\n  private initialCoreState: CoreState;\n  private pluginsReadyPromise: Promise<void> | null = null;\n  private destroyed = false;\n\n  constructor(engine: PdfEngine, config?: PluginRegistryConfig) {\n    this.resolver = new DependencyResolver();\n    this.engine = engine;\n    this.initialCoreState = initialCoreState(config);\n    this.store = new Store<CoreState, CoreAction>(coreReducer, this.initialCoreState);\n  }\n\n  /**\n   * Ensure engine is initialized before proceeding\n   */\n  private async ensureEngineInitialized(): Promise<void> {\n    if (this.engineInitialized) {\n      return;\n    }\n\n    if (this.engine.initialize) {\n      const task = this.engine.initialize();\n      await task.toPromise();\n      this.engineInitialized = true;\n    } else {\n      this.engineInitialized = true;\n    }\n  }\n\n  /**\n   * Register a plugin without initializing it\n   */\n  registerPlugin<\n    TPlugin extends IPlugin<TConfig>,\n    TConfig = unknown,\n    TState = unknown,\n    TAction extends Action = Action,\n  >(\n    pluginPackage: PluginPackage<TPlugin, TConfig, TState, TAction>,\n    config?: Partial<TConfig>,\n  ): void {\n    if (this.initialized && !this.isInitializing) {\n      throw new PluginRegistrationError('Cannot register plugins after initialization');\n    }\n\n    this.validateManifest(pluginPackage.manifest);\n\n    // Use appropriate typing for store methods\n    this.store.addPluginReducer(\n      pluginPackage.manifest.id,\n      // We need one type assertion here since we can't fully reconcile TAction with Action\n      // due to TypeScript's type system limitations with generic variance\n      pluginPackage.reducer as Reducer<TState, Action>,\n      'function' === typeof pluginPackage.initialState\n        ? (pluginPackage.initialState as (coreState: CoreState, config: TConfig) => TState)(\n            this.initialCoreState,\n            {\n              ...pluginPackage.manifest.defaultConfig,\n              ...config,\n            },\n          )\n        : pluginPackage.initialState,\n    );\n\n    this.pendingRegistrations.push({\n      package: pluginPackage,\n      config,\n    });\n  }\n\n  /**\n   * Get the central store instance\n   */\n  getStore(): Store<CoreState, CoreAction> {\n    return this.store;\n  }\n\n  /**\n   * Get the engine instance\n   */\n  getEngine(): PdfEngine {\n    return this.engine;\n  }\n\n  /**\n   * Get a promise that resolves when all plugins are ready\n   */\n  public pluginsReady(): Promise<void> {\n    // Re-use the same promise every time it’s asked for\n    if (this.pluginsReadyPromise) {\n      return this.pluginsReadyPromise;\n    }\n\n    // Build the promise the *first* time it’s requested\n    this.pluginsReadyPromise = (async () => {\n      // 1. Wait until the registry itself has finished initialising\n      if (!this.initialized) {\n        await this.initialize();\n      }\n\n      // 2. Wait for every plugin’s ready() promise (if it has one)\n      const readyPromises = Array.from(this.plugins.values()).map((p) =>\n        typeof p.ready === 'function' ? p.ready() : Promise.resolve(),\n      );\n\n      await Promise.all(readyPromises); // resolves when the slowest is done\n    })();\n\n    return this.pluginsReadyPromise;\n  }\n\n  /**\n   * INITIALISE THE REGISTRY – runs once no-matter-how-many calls   *\n   */\n  async initialize(): Promise<void> {\n    if (this.destroyed) {\n      throw new PluginRegistrationError('Registry has been destroyed');\n    }\n\n    // If an initialisation is already in-flight (or finished)\n    // return the very same promise so callers can await it.\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n\n    // Wrap your existing body in a single promise and cache it\n    this.initPromise = (async () => {\n      if (this.initialized) {\n        throw new PluginRegistrationError('Registry is already initialized');\n      }\n\n      this.isInitializing = true;\n\n      try {\n        /* ---------------- original body starts ------------------ */\n        await this.ensureEngineInitialized();\n        // Check if destroyed after engine initialization\n        if (this.destroyed) {\n          return;\n        }\n\n        while (this.pendingRegistrations.length > 0) {\n          // Check if destroyed before processing each batch\n          if (this.destroyed) {\n            return;\n          }\n          this.processingRegistrations = [...this.pendingRegistrations];\n          this.pendingRegistrations = [];\n\n          for (const reg of this.processingRegistrations) {\n            const dependsOn = new Set<string>();\n            const allDeps = [...reg.package.manifest.requires, ...reg.package.manifest.optional];\n            for (const cap of allDeps) {\n              const provider = this.processingRegistrations.find((r) =>\n                r.package.manifest.provides.includes(cap),\n              );\n              if (provider) dependsOn.add(provider.package.manifest.id);\n            }\n            this.resolver.addNode(reg.package.manifest.id, [...dependsOn]);\n          }\n\n          const loadOrder = this.resolver.resolveLoadOrder();\n          for (const id of loadOrder) {\n            const reg = this.processingRegistrations.find((r) => r.package.manifest.id === id)!;\n            await this.initializePlugin(reg.package.manifest, reg.package.create, reg.config);\n          }\n\n          this.processingRegistrations = [];\n          this.resolver = new DependencyResolver();\n        }\n\n        for (const plugin of this.plugins.values()) {\n          await plugin.postInitialize?.().catch((e) => {\n            console.error(`Error in postInitialize for plugin ${plugin.id}`, e);\n            this.status.set(plugin.id, 'error');\n          });\n        }\n\n        this.initialized = true;\n        /* ----------------- original body ends ------------------- */\n      } catch (err) {\n        if (err instanceof Error) {\n          throw new CircularDependencyError(\n            `Failed to resolve plugin dependencies: ${err.message}`,\n          );\n        }\n        throw err;\n      } finally {\n        this.isInitializing = false;\n      }\n    })();\n\n    return this.initPromise;\n  }\n\n  /**\n   * Initialize a single plugin with all necessary checks\n   */\n  private async initializePlugin<TConfig>(\n    manifest: PluginManifest<TConfig>,\n    packageCreator: (\n      registry: PluginRegistry,\n      engine: PdfEngine,\n      config?: TConfig,\n    ) => IPlugin<TConfig>,\n    config?: Partial<TConfig>,\n  ): Promise<void> {\n    const finalConfig = {\n      ...manifest.defaultConfig,\n      ...config,\n    };\n\n    this.validateConfig(manifest.id, finalConfig, manifest.defaultConfig);\n\n    // Create plugin instance during initialization\n    const plugin = packageCreator(this, this.engine, finalConfig);\n    this.validatePlugin(plugin);\n\n    // Verify all required capabilities are available\n    for (const capability of manifest.requires) {\n      if (!this.capabilities.has(capability)) {\n        throw new PluginRegistrationError(\n          `Missing required capability: ${capability} for plugin ${manifest.id}`,\n        );\n      }\n    }\n\n    // Optional capabilities can be null, so we don't throw errors for them\n    for (const capability of manifest.optional) {\n      if (this.capabilities.has(capability)) {\n        // Optional capability is available, but we don't require it\n        console.debug(`Optional capability ${capability} is available for plugin ${manifest.id}`);\n      }\n    }\n\n    console.log('initializePlugin', manifest.id, manifest.provides);\n\n    // Register provided capabilities\n    for (const capability of manifest.provides) {\n      if (this.capabilities.has(capability)) {\n        throw new PluginRegistrationError(\n          `Capability ${capability} is already provided by plugin ${this.capabilities.get(capability)}`,\n        );\n      }\n      this.capabilities.set(capability, manifest.id);\n    }\n\n    // Store plugin and manifest\n    this.plugins.set(manifest.id, plugin);\n    this.manifests.set(manifest.id, manifest);\n    this.status.set(manifest.id, 'registered');\n    this.configurations.set(manifest.id, finalConfig);\n\n    try {\n      if (plugin.initialize) {\n        await plugin.initialize(finalConfig);\n      }\n      this.status.set(manifest.id, 'active');\n    } catch (error) {\n      // Cleanup on initialization failure\n      this.plugins.delete(manifest.id);\n      this.manifests.delete(manifest.id);\n      console.log('initializePlugin failed', manifest.id, manifest.provides);\n      manifest.provides.forEach((cap) => this.capabilities.delete(cap));\n      throw error;\n    }\n  }\n\n  getPluginConfig<TConfig>(pluginId: string): TConfig {\n    const config = this.configurations.get(pluginId);\n    if (!config) {\n      throw new PluginNotFoundError(`Configuration for plugin ${pluginId} not found`);\n    }\n    return config as TConfig;\n  }\n\n  private validateConfig(pluginId: string, config: unknown, defaultConfig: unknown): void {\n    // Check all required fields exist\n    const requiredKeys = Object.keys(defaultConfig as object);\n    const missingKeys = requiredKeys.filter((key) => !(config as object).hasOwnProperty(key));\n\n    if (missingKeys.length > 0) {\n      throw new PluginConfigurationError(\n        `Missing required configuration keys for plugin ${pluginId}: ${missingKeys.join(', ')}`,\n      );\n    }\n\n    // You could add more validation here:\n    // - Type checking\n    // - Value range validation\n    // - Format validation\n    // etc.\n  }\n\n  async updatePluginConfig<TConfig>(pluginId: string, config: Partial<TConfig>): Promise<void> {\n    const plugin = this.getPlugin(pluginId);\n\n    if (!plugin) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} not found`);\n    }\n\n    const manifest = this.manifests.get(pluginId);\n    const currentConfig = this.configurations.get(pluginId);\n\n    if (!manifest || !currentConfig) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} not found`);\n    }\n\n    // Merge new config with current\n    const newConfig = {\n      ...currentConfig,\n      ...config,\n    };\n\n    // Validate new configuration\n    this.validateConfig(pluginId, newConfig, manifest.defaultConfig);\n\n    // Store new configuration\n    this.configurations.set(pluginId, newConfig);\n\n    // Reinitialize plugin if needed\n    if (plugin.initialize) {\n      await plugin.initialize(newConfig);\n    }\n  }\n\n  /**\n   * Register multiple plugins at once\n   */\n  registerPluginBatch(registrations: PluginBatchRegistration<IPlugin<any>, any, any, any>[]): void {\n    for (const reg of registrations) {\n      this.registerPlugin(reg.package, reg.config);\n    }\n  }\n\n  /**\n   * Unregister a plugin\n   */\n  async unregisterPlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} is not registered`);\n    }\n\n    const manifest = this.manifests.get(pluginId);\n    if (!manifest) {\n      throw new PluginNotFoundError(`Manifest for plugin ${pluginId} not found`);\n    }\n\n    // Check if any other plugins depend on this one\n    for (const [otherId, otherManifest] of this.manifests.entries()) {\n      if (otherId === pluginId) continue;\n\n      const dependsOnThis = [...otherManifest.requires, ...otherManifest.optional].some((cap) =>\n        manifest.provides.includes(cap),\n      );\n\n      if (dependsOnThis) {\n        throw new PluginRegistrationError(\n          `Cannot unregister plugin ${pluginId}: plugin ${otherId} depends on it`,\n        );\n      }\n    }\n\n    // Cleanup plugin\n    try {\n      if (plugin.destroy) {\n        await plugin.destroy();\n      }\n\n      // Remove capabilities\n      for (const capability of manifest.provides) {\n        this.capabilities.delete(capability);\n      }\n\n      // Remove plugin and manifest\n      this.plugins.delete(pluginId);\n      this.manifests.delete(pluginId);\n      this.status.delete(pluginId);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`Failed to unregister plugin ${pluginId}: ${error.message}`);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Get a plugin instance\n   * @param pluginId The ID of the plugin to get\n   * @returns The plugin instance or null if not found\n   */\n  getPlugin<T extends IPlugin>(pluginId: string): T | null {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      return null;\n    }\n    return plugin as T;\n  }\n\n  /**\n   * Get a plugin that provides a specific capability\n   * @param capability The capability to get a provider for\n   * @returns The plugin providing the capability or null if not found\n   */\n  getCapabilityProvider(capability: string): IPlugin | null {\n    const pluginId = this.capabilities.get(capability);\n    if (!pluginId) {\n      return null;\n    }\n    return this.getPlugin(pluginId);\n  }\n\n  /**\n   * Check if a capability is available\n   */\n  hasCapability(capability: string): boolean {\n    return this.capabilities.has(capability);\n  }\n\n  /**\n   * Get all registered plugins\n   */\n  getAllPlugins(): IPlugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * Get plugin status\n   */\n  getPluginStatus(pluginId: string): PluginStatus {\n    const status = this.status.get(pluginId);\n    if (!status) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} not found`);\n    }\n    return status;\n  }\n\n  /**\n   * Validate plugin object\n   */\n  private validatePlugin(plugin: IPlugin): void {\n    if (!plugin.id) {\n      throw new PluginRegistrationError('Plugin must have an id');\n    }\n  }\n\n  /**\n   * Validate plugin manifest\n   */\n  private validateManifest(manifest: PluginManifest): void {\n    if (!manifest.id) {\n      throw new PluginRegistrationError('Manifest must have an id');\n    }\n    if (!manifest.name) {\n      throw new PluginRegistrationError('Manifest must have a name');\n    }\n    if (!manifest.version) {\n      throw new PluginRegistrationError('Manifest must have a version');\n    }\n    if (!Array.isArray(manifest.provides)) {\n      throw new PluginRegistrationError('Manifest must have a provides array');\n    }\n    if (!Array.isArray(manifest.requires)) {\n      throw new PluginRegistrationError('Manifest must have a requires array');\n    }\n    if (!Array.isArray(manifest.optional)) {\n      throw new PluginRegistrationError('Manifest must have an optional array');\n    }\n  }\n\n  isDestroyed(): boolean {\n    return this.destroyed;\n  }\n\n  /**\n   * DESTROY EVERYTHING – waits for any ongoing initialise(), once  *\n   */\n  async destroy(): Promise<void> {\n    if (this.destroyed) throw new PluginRegistrationError('Registry has already been destroyed');\n    this.destroyed = true;\n\n    // If initialisation is still underway, wait (success OR failure)\n    try {\n      await this.initPromise;\n    } catch {\n      /* ignore – still need to clean up */\n    }\n\n    /* ------- original teardown, unchanged except the guard ------ */\n    for (const plugin of Array.from(this.plugins.values()).reverse()) {\n      await plugin.destroy?.();\n    }\n\n    this.store.destroy();\n\n    this.plugins.clear();\n    this.manifests.clear();\n    this.capabilities.clear();\n    this.status.clear();\n    this.pendingRegistrations.length = 0;\n    this.processingRegistrations.length = 0;\n  }\n}\n","/**\n * Restrict a numeric value to the inclusive range [min, max].\n *\n * @example\n *   clamp( 5, 0, 10)  // 5\n *   clamp(-3, 0, 10)  // 0\n *   clamp(17, 0, 10)  // 10\n */\nexport function clamp(value: number, min: number, max: number): number {\n  return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Deeply compares two values (objects, arrays, primitives)\n * with the following rules:\n *  - Objects are compared ignoring property order.\n *  - Arrays are compared ignoring element order (multiset comparison).\n *  - Primitives are compared by strict equality.\n *  - null/undefined are treated as normal primitives.\n *\n * @param a First value\n * @param b Second value\n * @param visited Used internally to detect cycles\n */\nexport function arePropsEqual(a: any, b: any, visited?: Set<any>): boolean {\n  // Quick path for reference equality or same primitive\n  if (a === b) {\n    return true;\n  }\n\n  // Handle null/undefined mismatch\n  if (a == null || b == null) {\n    // If one is null/undefined and the other isn't, no match\n    return a === b;\n  }\n\n  // Check types\n  const aType = typeof a;\n  const bType = typeof b;\n  if (aType !== bType) return false;\n\n  // If they are both objects or arrays, handle recursively\n  if (aType === 'object') {\n    // Optionally handle cyclical references\n    if (!visited) visited = new Set();\n    const pairId = getPairId(a, b);\n    if (visited.has(pairId)) {\n      // Already compared these two objects => assume true to avoid infinite recursion\n      // or return false if you want to treat cycles as inequality\n      return true;\n    }\n    visited.add(pairId);\n\n    const aIsArray = Array.isArray(a);\n    const bIsArray = Array.isArray(b);\n    if (aIsArray && bIsArray) {\n      // Compare as arrays ignoring order\n      return arraysEqualUnordered(a, b, visited);\n    } else if (!aIsArray && !bIsArray) {\n      // Compare as plain objects (order of properties doesn't matter)\n      return objectsEqual(a, b, visited);\n    } else {\n      // One is array, the other is object => not equal\n      return false;\n    }\n  }\n\n  // If both are function, symbol, etc. - typically we might say false\n  // But you can decide your own logic for function or symbol equality\n  return false;\n}\n\nfunction getPairId(a: any, b: any) {\n  // Could do something more advanced. This is a cheap approach:\n  // e.g. use the memory reference or an object identity approach\n  return `${objectId(a)}__${objectId(b)}`;\n}\n\n/**\n * If you want stable object IDs, you'd need a WeakMap to store them.\n * This simplistic approach just calls toString on the object.\n */\nlet objectIdCounter = 0;\nconst objectIds = new WeakMap<object, number>();\n\nfunction objectId(obj: object): number {\n  if (!objectIds.has(obj)) {\n    objectIds.set(obj, ++objectIdCounter);\n  }\n  return objectIds.get(obj)!;\n}\n\nfunction arraysEqualUnordered(a: any[], b: any[], visited?: Set<any>): boolean {\n  if (a.length !== b.length) return false;\n\n  const used = new Array<boolean>(b.length).fill(false);\n\n  // For each element in a, find an unused matching element in b\n  outer: for (let i = 0; i < a.length; i++) {\n    const elemA = a[i];\n    for (let j = 0; j < b.length; j++) {\n      if (used[j]) continue; // already used that slot\n      if (arePropsEqual(elemA, b[j], visited)) {\n        used[j] = true;\n        continue outer; // found match for a[i], proceed\n      }\n    }\n    // If we never found a match\n    return false;\n  }\n\n  return true;\n}\n\nfunction objectsEqual(a: object, b: object, visited?: Set<any>): boolean {\n  // Get all prop keys\n  const aKeys = Object.keys(a).sort();\n  const bKeys = Object.keys(b).sort();\n  if (aKeys.length !== bKeys.length) return false;\n\n  // Compare each property name\n  for (let i = 0; i < aKeys.length; i++) {\n    if (aKeys[i] !== bKeys[i]) return false;\n  }\n\n  // Compare each property value\n  for (const key of aKeys) {\n    // @ts-ignore\n    const valA = a[key];\n    // @ts-ignore\n    const valB = b[key];\n    if (!arePropsEqual(valA, valB, visited)) {\n      return false;\n    }\n  }\n  return true;\n}\n","import{Component as n,createElement as t,options as e,toChildArray as r,Fragment as u,render as o,hydrate as i,createContext as l,createRef as c,cloneElement as f}from\"preact\";export{Component,Fragment,createContext,createElement,createRef}from\"preact\";import{useState as a,useLayoutEffect as s,useEffect as h,useCallback as v,useContext as d,useDebugValue as m,useId as p,useImperativeHandle as y,useMemo as _,useReducer as b,useRef as S}from\"preact/hooks\";export*from\"preact/hooks\";function g(n,t){for(var e in t)n[e]=t[e];return n}function E(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function C(n,t){var e=t(),r=a({t:{__:e,u:t}}),u=r[0].t,o=r[1];return s(function(){u.__=e,u.u=t,x(u)&&o({t:u})},[n,e,t]),h(function(){return x(u)&&o({t:u}),n(function(){x(u)&&o({t:u})})},[n]),e}function x(n){var t,e,r=n.u,u=n.__;try{var o=r();return!((t=u)===(e=o)&&(0!==t||1/t==1/e)||t!=t&&e!=e)}catch(n){return!0}}function R(n){n()}function w(n){return n}function k(){return[!1,R]}var I=s;function N(n,t){this.props=n,this.context=t}function M(n,e){function r(n){var t=this.props.ref,r=t==n.ref;return!r&&t&&(t.call?t(null):t.current=null),e?!e(this.props,n)||!r:E(this.props,n)}function u(e){return this.shouldComponentUpdate=r,t(n,e)}return u.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",u.prototype.isReactComponent=!0,u.__f=!0,u}(N.prototype=new n).isPureReactComponent=!0,N.prototype.shouldComponentUpdate=function(n,t){return E(this.props,n)||E(this.state,t)};var T=e.__b;e.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),T&&T(n)};var A=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function D(n){function t(t){var e=g({},t);return delete e.ref,n(e,t.ref||null)}return t.$$typeof=A,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var L=function(n,t){return null==n?null:r(r(n).map(t))},O={map:L,forEach:L,count:function(n){return n?r(n).length:0},only:function(n){var t=r(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:r},F=e.__e;e.__e=function(n,t,e,r){if(n.then)for(var u,o=t;o=o.__;)if((u=o.__c)&&u.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),u.__c(n,t);F(n,t,e,r)};var U=e.unmount;function V(n,t,e){return n&&(n.__c&&n.__c.__H&&(n.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),n.__c.__H=null),null!=(n=g({},n)).__c&&(n.__c.__P===e&&(n.__c.__P=t),n.__c.__e=!0,n.__c=null),n.__k=n.__k&&n.__k.map(function(n){return V(n,t,e)})),n}function W(n,t,e){return n&&e&&(n.__v=null,n.__k=n.__k&&n.__k.map(function(n){return W(n,t,e)}),n.__c&&n.__c.__P===t&&(n.__e&&e.appendChild(n.__e),n.__c.__e=!0,n.__c.__P=e)),n}function P(){this.__u=0,this.o=null,this.__b=null}function j(n){var t=n.__.__c;return t&&t.__a&&t.__a(n)}function z(n){var e,r,u;function o(o){if(e||(e=n()).then(function(n){r=n.default||n},function(n){u=n}),u)throw u;if(!r)throw e;return t(r,o)}return o.displayName=\"Lazy\",o.__f=!0,o}function B(){this.i=null,this.l=null}e.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&32&n.__u&&(n.type=null),U&&U(n)},(P.prototype=new n).__c=function(n,t){var e=t.__c,r=this;null==r.o&&(r.o=[]),r.o.push(e);var u=j(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__a){var n=r.state.__a;r.__v.__k[0]=W(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.o.pop();)t.forceUpdate()}};r.__u++||32&t.__u||r.setState({__a:r.__b=r.__v.__k[0]}),n.then(i,i)},P.prototype.componentWillUnmount=function(){this.o=[]},P.prototype.render=function(n,e){if(this.__b){if(this.__v.__k){var r=document.createElement(\"div\"),o=this.__v.__k[0].__c;this.__v.__k[0]=V(this.__b,r,o.__O=o.__P)}this.__b=null}var i=e.__a&&t(u,null,n.fallback);return i&&(i.__u&=-33),[t(u,null,e.__a?null:n.children),i]};var H=function(n,t,e){if(++e[1]===e[0]&&n.l.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.l.size))for(e=n.i;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.i=e=e[2]}};function Z(n){return this.getChildContext=function(){return n.context},n.children}function Y(n){var e=this,r=n.h;if(e.componentWillUnmount=function(){o(null,e.v),e.v=null,e.h=null},e.h&&e.h!==r&&e.componentWillUnmount(),!e.v){for(var u=e.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;e.h=r,e.v={nodeType:1,parentNode:r,childNodes:[],__k:{__m:u.__m},contains:function(){return!0},insertBefore:function(n,t){this.childNodes.push(n),e.h.insertBefore(n,t)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.h.removeChild(n)}}}o(t(Z,{context:e.context},n.__v),e.v)}function $(n,e){var r=t(Y,{__v:n,h:e});return r.containerInfo=e,r}(B.prototype=new n).__a=function(n){var t=this,e=j(t.__v),r=t.l.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),H(t,n,r)):u()};e?e(o):o()}},B.prototype.render=function(n){this.i=null,this.l=new Map;var t=r(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.l.set(t[e],this.i=[1,0,this.i]);return n.children},B.prototype.componentDidUpdate=B.prototype.componentDidMount=function(){var n=this;this.l.forEach(function(t,e){H(n,e,t)})};var q=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,G=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,J=/^on(Ani|Tra|Tou|BeforeInp|Compo)/,K=/[A-Z0-9]/g,Q=\"undefined\"!=typeof document,X=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/:/fil|che|ra/).test(n)};function nn(n,t,e){return null==t.__k&&(t.textContent=\"\"),o(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function tn(n,t,e){return i(n,t),\"function\"==typeof e&&e(),n?n.__c:null}n.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(t){Object.defineProperty(n.prototype,t,{configurable:!0,get:function(){return this[\"UNSAFE_\"+t]},set:function(n){Object.defineProperty(this,t,{configurable:!0,writable:!0,value:n})}})});var en=e.event;function rn(){}function un(){return this.cancelBubble}function on(){return this.defaultPrevented}e.event=function(n){return en&&(n=en(n)),n.persist=rn,n.isPropagationStopped=un,n.isDefaultPrevented=on,n.nativeEvent=n};var ln,cn={enumerable:!1,configurable:!0,get:function(){return this.class}},fn=e.vnode;e.vnode=function(n){\"string\"==typeof n.type&&function(n){var t=n.props,e=n.type,u={},o=-1===e.indexOf(\"-\");for(var i in t){var l=t[i];if(!(\"value\"===i&&\"defaultValue\"in t&&null==l||Q&&\"children\"===i&&\"noscript\"===e||\"class\"===i||\"className\"===i)){var c=i.toLowerCase();\"defaultValue\"===i&&\"value\"in t&&null==t.value?i=\"value\":\"download\"===i&&!0===l?l=\"\":\"translate\"===c&&\"no\"===l?l=!1:\"o\"===c[0]&&\"n\"===c[1]?\"ondoubleclick\"===c?i=\"ondblclick\":\"onchange\"!==c||\"input\"!==e&&\"textarea\"!==e||X(t.type)?\"onfocus\"===c?i=\"onfocusin\":\"onblur\"===c?i=\"onfocusout\":J.test(i)&&(i=c):c=i=\"oninput\":o&&G.test(i)?i=i.replace(K,\"-$&\").toLowerCase():null===l&&(l=void 0),\"oninput\"===c&&u[i=c]&&(i=\"oninputCapture\"),u[i]=l}}\"select\"==e&&u.multiple&&Array.isArray(u.value)&&(u.value=r(t.children).forEach(function(n){n.props.selected=-1!=u.value.indexOf(n.props.value)})),\"select\"==e&&null!=u.defaultValue&&(u.value=r(t.children).forEach(function(n){n.props.selected=u.multiple?-1!=u.defaultValue.indexOf(n.props.value):u.defaultValue==n.props.value})),t.class&&!t.className?(u.class=t.class,Object.defineProperty(u,\"className\",cn)):(t.className&&!t.class||t.class&&t.className)&&(u.class=u.className=t.className),n.props=u}(n),n.$$typeof=q,fn&&fn(n)};var an=e.__r;e.__r=function(n){an&&an(n),ln=n.__c};var sn=e.diffed;e.diffed=function(n){sn&&sn(n);var t=n.props,e=n.__e;null!=e&&\"textarea\"===n.type&&\"value\"in t&&t.value!==e.value&&(e.value=null==t.value?\"\":t.value),ln=null};var hn={ReactCurrentDispatcher:{current:{readContext:function(n){return ln.__n[n.__c].props.value},useCallback:v,useContext:d,useDebugValue:m,useDeferredValue:w,useEffect:h,useId:p,useImperativeHandle:y,useInsertionEffect:I,useLayoutEffect:s,useMemo:_,useReducer:b,useRef:S,useState:a,useSyncExternalStore:C,useTransition:k}}},vn=\"18.3.1\";function dn(n){return t.bind(null,n)}function mn(n){return!!n&&n.$$typeof===q}function pn(n){return mn(n)&&n.type===u}function yn(n){return!!n&&!!n.displayName&&(\"string\"==typeof n.displayName||n.displayName instanceof String)&&n.displayName.startsWith(\"Memo(\")}function _n(n){return mn(n)?f.apply(null,arguments):n}function bn(n){return!!n.__k&&(o(null,n),!0)}function Sn(n){return n&&(n.base||1===n.nodeType&&n)||null}var gn=function(n,t){return n(t)},En=function(n,t){return n(t)},Cn=u,xn=mn,Rn={useState:a,useId:p,useReducer:b,useEffect:h,useLayoutEffect:s,useInsertionEffect:I,useTransition:k,useDeferredValue:w,useSyncExternalStore:C,startTransition:R,useRef:S,useImperativeHandle:y,useMemo:_,useCallback:v,useContext:d,useDebugValue:m,version:\"18.3.1\",Children:O,render:nn,hydrate:tn,unmountComponentAtNode:bn,createPortal:$,createElement:t,createContext:l,createFactory:dn,cloneElement:_n,createRef:c,Fragment:u,isValidElement:mn,isElement:xn,isFragment:pn,isMemo:yn,findDOMNode:Sn,Component:n,PureComponent:N,memo:M,forwardRef:D,flushSync:En,unstable_batchedUpdates:gn,StrictMode:Cn,Suspense:P,SuspenseList:B,lazy:z,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:hn};export{O as Children,N as PureComponent,Cn as StrictMode,P as Suspense,B as SuspenseList,hn as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_n as cloneElement,dn as createFactory,$ as createPortal,Rn as default,Sn as findDOMNode,En as flushSync,D as forwardRef,tn as hydrate,xn as isElement,pn as isFragment,yn as isMemo,mn as isValidElement,z as lazy,M as memo,nn as render,R as startTransition,bn as unmountComponentAtNode,gn as unstable_batchedUpdates,w as useDeferredValue,I as useInsertionEffect,C as useSyncExternalStore,k as useTransition,vn as version};\n//# sourceMappingURL=compat.module.js.map\n","import { createContext } from 'react';\nimport type { PluginRegistry } from '@embedpdf/core';\n\nexport interface PDFContextState {\n  registry: PluginRegistry | null;\n  isInitializing: boolean;\n  pluginsReady: boolean;\n}\n\nexport const PDFContext = createContext<PDFContextState>({\n  registry: null,\n  isInitializing: true,\n  pluginsReady: false,\n});\n","import React, { useState, useEffect, useRef } from 'react';\nimport { PdfEngine } from '@embedpdf/models';\nimport { PluginRegistry } from '@embedpdf/core';\nimport type { IPlugin, PluginBatchRegistration } from '@embedpdf/core';\n\nimport { PDFContext, PDFContextState } from '../context';\n\ninterface EmbedPDFProps {\n  engine: PdfEngine;\n  onInitialized?: (registry: PluginRegistry) => Promise<void>;\n  plugins: PluginBatchRegistration<IPlugin<any>, any>[];\n  children: React.ReactNode | ((state: PDFContextState) => React.ReactNode);\n}\n\nexport function EmbedPDF({ engine, onInitialized, plugins, children }: EmbedPDFProps) {\n  const [registry, setRegistry] = useState<PluginRegistry | null>(null);\n  const [isInitializing, setIsInitializing] = useState<boolean>(true);\n  const [pluginsReady, setPluginsReady] = useState<boolean>(false);\n  const initRef = useRef<EmbedPDFProps['onInitialized']>(onInitialized);\n\n  useEffect(() => {\n    initRef.current = onInitialized; // update without triggering re-runs\n  }, [onInitialized]);\n\n  useEffect(() => {\n    const pdfViewer = new PluginRegistry(engine);\n    pdfViewer.registerPluginBatch(plugins);\n\n    const initialize = async () => {\n      await pdfViewer.initialize();\n      // if the registry is destroyed, don't do anything\n      if (pdfViewer.isDestroyed()) {\n        return;\n      }\n\n      /* always call the *latest* callback */\n      await initRef.current?.(pdfViewer);\n\n      // if the registry is destroyed, don't do anything\n      if (pdfViewer.isDestroyed()) {\n        return;\n      }\n\n      pdfViewer.pluginsReady().then(() => {\n        if (!pdfViewer.isDestroyed()) {\n          setPluginsReady(true);\n        }\n      });\n\n      // Provide the registry to children via context\n      setRegistry(pdfViewer);\n      setIsInitializing(false);\n    };\n\n    initialize().catch(console.error);\n\n    return () => {\n      pdfViewer.destroy();\n      setRegistry(null);\n      setIsInitializing(true);\n      setPluginsReady(false);\n    };\n  }, [engine, plugins]);\n\n  return (\n    <PDFContext.Provider value={{ registry, isInitializing, pluginsReady }}>\n      {typeof children === 'function'\n        ? children({ registry, isInitializing, pluginsReady })\n        : children}\n    </PDFContext.Provider>\n  );\n}\n","import { useContext } from 'react';\nimport { PDFContext, PDFContextState } from '../context';\n\n/**\n * Hook to access the PDF registry.\n * @returns The PDF registry or null during initialization\n */\nexport function useRegistry(): PDFContextState {\n  const contextValue = useContext(PDFContext);\n\n  // Error if used outside of context\n  if (contextValue === undefined) {\n    throw new Error('useCapability must be used within a PDFContext.Provider');\n  }\n\n  const { registry, isInitializing } = contextValue;\n\n  // During initialization, return null instead of throwing an error\n  if (isInitializing) {\n    return contextValue;\n  }\n\n  // At this point, initialization is complete but registry is still null, which is unexpected\n  if (registry === null) {\n    throw new Error('PDF registry failed to initialize properly');\n  }\n\n  return contextValue;\n}\n","import type { BasePlugin } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\ntype PluginState<T extends BasePlugin> = {\n  plugin: T | null;\n  isLoading: boolean;\n  ready: Promise<void>;\n};\n\n/**\n * Hook to access a plugin.\n * @param pluginId The ID of the plugin to access\n * @returns The plugin or null during initialization\n * @example\n * // Get zoom plugin\n * const zoom = usePlugin<ZoomPlugin>(ZoomPlugin.id);\n */\nexport function usePlugin<T extends BasePlugin>(pluginId: T['id']): PluginState<T> {\n  const { registry } = useRegistry();\n\n  if (registry === null) {\n    return {\n      plugin: null,\n      isLoading: true,\n      ready: new Promise(() => {}),\n    };\n  }\n\n  const plugin = registry.getPlugin<T>(pluginId);\n\n  if (!plugin) {\n    throw new Error(`Plugin ${pluginId} not found`);\n  }\n\n  return {\n    plugin,\n    isLoading: false,\n    ready: plugin.ready(),\n  };\n}\n","import type { BasePlugin } from '@embedpdf/core';\nimport { usePlugin } from './use-plugin';\n\ntype CapabilityState<T extends BasePlugin> = {\n  provides: ReturnType<NonNullable<T['provides']>> | null;\n  isLoading: boolean;\n  ready: Promise<void>;\n};\n\n/**\n * Hook to access a plugin's capability.\n * @param pluginId The ID of the plugin to access\n * @returns The capability provided by the plugin or null during initialization\n * @example\n * // Get zoom capability\n * const zoom = useCapability<ZoomPlugin>(ZoomPlugin.id);\n */\nexport function useCapability<T extends BasePlugin>(pluginId: T['id']): CapabilityState<T> {\n  const { plugin, isLoading, ready } = usePlugin<T>(pluginId);\n\n  if (!plugin) {\n    return {\n      provides: null,\n      isLoading,\n      ready,\n    };\n  }\n\n  if (!plugin.provides) {\n    throw new Error(`Plugin ${pluginId} does not provide a capability`);\n  }\n\n  return {\n    provides: plugin.provides() as ReturnType<NonNullable<T['provides']>>,\n    isLoading,\n    ready,\n  };\n}\n","import { useState, useEffect } from 'react';\nimport { CoreState, StoreState } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\n/**\n * Hook that provides access to the current global store state\n * and re-renders the component when the state changes\n */\nexport function useStoreState<T = CoreState>(): StoreState<T> | null {\n  const { registry } = useRegistry();\n  const [state, setState] = useState<StoreState<T> | null>(null);\n\n  useEffect(() => {\n    if (!registry) return;\n\n    // Get initial state\n    setState(registry.getStore().getState() as StoreState<T>);\n\n    // Subscribe to store changes\n    const unsubscribe = registry.getStore().subscribe((_action, newState) => {\n      setState(newState as StoreState<T>);\n    });\n\n    return () => unsubscribe();\n  }, [registry]);\n\n  return state;\n}\n","import { useState, useEffect } from 'react';\nimport { CoreState, arePropsEqual } from '@embedpdf/core';\nimport { useRegistry } from './use-registry';\n\n/**\n * Hook that provides access to the current core state\n * and re-renders the component only when the core state changes\n */\nexport function useCoreState(): CoreState | null {\n  const { registry } = useRegistry();\n  const [coreState, setCoreState] = useState<CoreState | null>(null);\n\n  useEffect(() => {\n    if (!registry) return;\n\n    const store = registry.getStore();\n\n    // Get initial core state\n    setCoreState(store.getState().core);\n\n    // Create a single subscription that handles all core actions\n    const unsubscribe = store.subscribe((action, newState, oldState) => {\n      // Only update if it's a core action and the core state changed\n      if (store.isCoreAction(action) && !arePropsEqual(newState.core, oldState.core)) {\n        setCoreState(newState.core);\n      }\n    });\n\n    return () => unsubscribe();\n  }, [registry]);\n\n  return coreState;\n}\n","import { BasePluginConfig, EventHook } from '@embedpdf/core';\nimport { Rect } from '@embedpdf/models';\nimport { ViewportMetrics } from '@embedpdf/plugin-viewport';\n\n/* ------------------------------------------------------------------ */\n/* public                                                               */\n/* ------------------------------------------------------------------ */\n\nexport enum ZoomMode {\n  Automatic = 'automatic',\n  FitPage = 'fit-page',\n  FitWidth = 'fit-width',\n}\n\nexport type ZoomLevel = ZoomMode | number;\n\nexport interface Point {\n  vx: number;\n  vy: number;\n}\n\nexport interface ZoomChangeEvent {\n  /** old and new *actual* scale factors */\n  oldZoom: number;\n  newZoom: number;\n\n  /** level used to obtain the newZoom (number | mode) */\n  level: ZoomLevel;\n\n  /** viewport point kept under the finger / mouse‑wheel focus */\n  center: Point;\n\n  /** where the viewport should scroll to after the scale change */\n  desiredScrollLeft: number;\n  desiredScrollTop: number;\n\n  /** metrics at the moment the zoom was requested                    */\n  viewport: ViewportMetrics;\n}\n\nexport interface ZoomCapability {\n  /** subscribe – returns the unsubscribe function */\n  onZoomChange: EventHook<ZoomChangeEvent>;\n  /** subscribe – returns the unsubscribe function */\n  onStateChange: EventHook<ZoomState>;\n\n  /** absolute requests -------------------------------------------------- */\n  requestZoom(level: ZoomLevel, center?: Point): void;\n  /** relative requests -------------------------------------------------- */\n  requestZoomBy(delta: number, center?: Point): void;\n\n  /** absolute requests -------------------------------------------------- */\n  zoomIn(): void;\n  zoomOut(): void;\n\n  zoomToArea(pageIndex: number, rect: Rect): void;\n\n  /** zoom in on an area -------------------------------------------------- */\n  enableMarqueeZoom(): void;\n  disableMarqueeZoom(): void;\n  toggleMarqueeZoom(): void;\n  isMarqueeZoomActive(): boolean;\n\n  getState(): ZoomState;\n  getPresets(): ZoomPreset[];\n}\n\n/* ------------------------------------------------------------------ */\n/* config / store                                                      */\n/* ------------------------------------------------------------------ */\n\nexport interface ZoomRangeStep {\n  min: number;\n  max: number;\n  step: number;\n}\n\nexport interface ZoomPreset {\n  name: string;\n  value: ZoomLevel;\n  icon?: string;\n}\n\nexport interface ZoomPluginConfig extends BasePluginConfig {\n  defaultZoomLevel: ZoomLevel;\n  minZoom?: number;\n  maxZoom?: number;\n  zoomStep?: number;\n  zoomRanges?: ZoomRangeStep[]; // Define different step sizes for different zoom ranges\n  presets?: ZoomPreset[]; // Preset zoom options for dropdown\n}\n\nexport interface ZoomState {\n  zoomLevel: ZoomLevel; // last **requested** level\n  currentZoomLevel: number; // actual numeric factor\n}\n\nexport enum VerticalZoomFocus {\n  Center,\n  Top,\n}\n\nexport interface ZoomRequest {\n  level: ZoomLevel;\n  delta?: number;\n  center?: Point;\n  focus?: VerticalZoomFocus;\n  /** Scroll so that the focal point ends up …\n   *  ▸ `\"keep\"`   (default) at the same viewport coords\n   *  ▸ `\"center\"` centred in the viewport  */\n  align?: 'keep' | 'center';\n}\n","import { PluginManifest } from '@embedpdf/core';\n\nimport { ZoomMode, ZoomPluginConfig } from './types';\n\nexport const ZOOM_PLUGIN_ID = 'zoom';\n\nexport const manifest: PluginManifest<ZoomPluginConfig> = {\n  id: ZOOM_PLUGIN_ID,\n  name: 'Zoom Plugin',\n  version: '1.0.0',\n  provides: ['zoom'],\n  requires: ['viewport', 'scroll'],\n  optional: ['interaction-manager'],\n  defaultConfig: {\n    enabled: true,\n    defaultZoomLevel: ZoomMode.Automatic,\n    minZoom: 0.2,\n    maxZoom: 60,\n    zoomStep: 0.1,\n    zoomRanges: [\n      {\n        min: 0.2,\n        max: 0.5,\n        step: 0.05,\n      },\n      {\n        min: 0.5,\n        max: 1.0,\n        step: 0.1,\n      },\n      {\n        min: 1.0,\n        max: 2.0,\n        step: 0.2,\n      },\n      {\n        min: 2.0,\n        max: 4.0,\n        step: 0.4,\n      },\n      {\n        min: 4.0,\n        max: 10.0,\n        step: 0.8,\n      },\n      {\n        min: 10.0,\n        max: 20.0,\n        step: 1.6,\n      },\n      {\n        min: 20.0,\n        max: 40.0,\n        step: 3.2,\n      },\n      {\n        min: 40.0,\n        max: 60.0,\n        step: 6.4,\n      },\n    ],\n    presets: [\n      {\n        name: 'Fit Page',\n        value: ZoomMode.FitPage,\n      },\n      {\n        name: 'Fit Width',\n        value: ZoomMode.FitWidth,\n      },\n      {\n        name: 'Automatic',\n        value: ZoomMode.Automatic,\n      },\n      {\n        name: '25%',\n        value: 0.25,\n      },\n      {\n        name: '50%',\n        value: 0.5,\n      },\n      {\n        name: '100%',\n        value: 1,\n      },\n      {\n        name: '125%',\n        value: 1.25,\n      },\n      {\n        name: '150%',\n        value: 1.5,\n      },\n      {\n        name: '200%',\n        value: 2,\n      },\n      {\n        name: '400%',\n        value: 4,\n      },\n      {\n        name: '800%',\n        value: 8,\n      },\n      {\n        name: '1600%',\n        value: 16,\n      },\n    ],\n  },\n};\n","import { Action } from '@embedpdf/core';\n\nimport { ZoomLevel } from './types';\n\n// Action Types\nexport const SET_ZOOM_LEVEL = 'SET_ZOOM_LEVEL';\nexport const SET_INITIAL_ZOOM_LEVEL = 'SET_INITIAL_ZOOM_LEVEL';\n\n// Action Interfaces\nexport interface SetZoomLevelAction extends Action {\n  type: typeof SET_ZOOM_LEVEL;\n  payload: {\n    zoomLevel: ZoomLevel;\n    currentZoomLevel: number;\n  };\n}\n\nexport interface SetInitialZoomLevelAction extends Action {\n  type: typeof SET_INITIAL_ZOOM_LEVEL;\n  payload: {\n    zoomLevel: ZoomLevel;\n  };\n}\n\n// Union Type for All Actions\nexport type ZoomAction = SetZoomLevelAction | SetInitialZoomLevelAction;\n\n// Action Creators\nexport function setZoomLevel(zoomLevel: ZoomLevel, currentZoomLevel: number): SetZoomLevelAction {\n  return {\n    type: SET_ZOOM_LEVEL,\n    payload: { zoomLevel, currentZoomLevel },\n  };\n}\n\nexport function setInitialZoomLevel(zoomLevel: ZoomLevel): SetInitialZoomLevelAction {\n  return {\n    type: SET_INITIAL_ZOOM_LEVEL,\n    payload: { zoomLevel },\n  };\n}\n","import { Reducer } from '@embedpdf/core';\n\nimport { SET_INITIAL_ZOOM_LEVEL, SET_ZOOM_LEVEL, ZoomAction } from './actions';\nimport { ZoomState, ZoomMode } from './types';\n\nexport const initialState: ZoomState = {\n  zoomLevel: ZoomMode.Automatic,\n  currentZoomLevel: 1,\n};\n\nexport const zoomReducer: Reducer<ZoomState, ZoomAction> = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ZOOM_LEVEL:\n      return {\n        ...state,\n        zoomLevel: action.payload.zoomLevel,\n        currentZoomLevel: action.payload.currentZoomLevel,\n      };\n    case SET_INITIAL_ZOOM_LEVEL:\n      return {\n        ...state,\n        zoomLevel: action.payload.zoomLevel,\n      };\n    default:\n      return state;\n  }\n};\n","export class DependencyResolver {\n  private dependencyGraph = new Map<string, Set<string>>();\n\n  addNode(id: string, dependencies: string[] = []) {\n    this.dependencyGraph.set(id, new Set(dependencies));\n  }\n\n  private hasCircularDependencies(): boolean {\n    const visited = new Set<string>();\n    const recursionStack = new Set<string>();\n\n    const dfs = (id: string): boolean => {\n      visited.add(id);\n      recursionStack.add(id);\n\n      const dependencies = this.dependencyGraph.get(id) || new Set();\n      for (const dep of dependencies) {\n        if (!visited.has(dep)) {\n          if (dfs(dep)) return true;\n        } else if (recursionStack.has(dep)) {\n          return true; // Circular dependency found\n        }\n      }\n\n      recursionStack.delete(id);\n      return false;\n    };\n\n    for (const id of this.dependencyGraph.keys()) {\n      if (!visited.has(id)) {\n        if (dfs(id)) return true;\n      }\n    }\n\n    return false;\n  }\n\n  resolveLoadOrder(): string[] {\n    if (this.hasCircularDependencies()) {\n      throw new Error('Circular dependencies detected');\n    }\n\n    const result: string[] = [];\n    const visited = new Set<string>();\n    const temp = new Set<string>();\n\n    const visit = (id: string) => {\n      if (temp.has(id)) throw new Error('Circular dependency');\n      if (visited.has(id)) return;\n\n      temp.add(id);\n\n      const dependencies = this.dependencyGraph.get(id) || new Set();\n      for (const dep of dependencies) {\n        visit(dep);\n      }\n\n      temp.delete(id);\n      visited.add(id);\n      result.push(id);\n    };\n\n    for (const id of this.dependencyGraph.keys()) {\n      if (!visited.has(id)) {\n        visit(id);\n      }\n    }\n\n    return result;\n  }\n}\n","export class PluginRegistrationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginRegistrationError';\n  }\n}\n\nexport class PluginNotFoundError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginNotFoundError';\n  }\n}\n\nexport class CircularDependencyError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CircularDependencyError';\n  }\n}\n\nexport class CapabilityNotFoundError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CapabilityNotFoundError';\n  }\n}\n\n// You might also want to add:\nexport class CapabilityConflictError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CapabilityConflictError';\n  }\n}\n\nexport class PluginInitializationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginInitializationError';\n  }\n}\n\nexport class PluginConfigurationError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PluginConfigurationError';\n  }\n}\n","import { Store } from './store';\nimport { Action } from './types';\n\n/**\n * A type-safe store handle for plugins, providing access to plugin-specific state and actions.\n */\nexport class PluginStore<PluginState, PluginAction extends Action> {\n  private store: Store<any, any>;\n  private pluginId: string;\n\n  /**\n   * Initializes the PluginStore with the main store and plugin ID.\n   * @param store The main store instance.\n   * @param pluginId The unique identifier for the plugin.\n   */\n  constructor(store: Store<any, any>, pluginId: string) {\n    this.store = store;\n    this.pluginId = pluginId;\n  }\n\n  /**\n   * Gets the current state of the plugin.\n   * @returns The plugin's state.\n   */\n  getState(): PluginState {\n    return this.store.getState().plugins[this.pluginId] as PluginState;\n  }\n\n  /**\n   * Dispatches an action for the plugin and returns the *new* global state.\n   * If you only need the plugin’s updated state, call `getState()` afterward.\n   * @param action The action to dispatch.\n   * @returns The updated global store state (after plugin reducer).\n   */\n  dispatch(action: PluginAction): PluginState {\n    return this.store.dispatchToPlugin(this.pluginId, action);\n  }\n\n  /**\n   * Subscribes to state changes only for this specific plugin.\n   * You now receive (action, newPluginState, oldPluginState) in the callback.\n   *\n   * @param listener The callback to invoke when plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToState(\n    listener: (action: PluginAction, newState: PluginState, oldState: PluginState) => void,\n  ) {\n    return this.store.subscribeToPlugin(this.pluginId, (action, newPluginState, oldPluginState) => {\n      listener(\n        action as PluginAction,\n        newPluginState as PluginState,\n        oldPluginState as PluginState,\n      );\n    });\n  }\n\n  /**\n   * Subscribes to a specific action type for the plugin.\n   * This still uses the main store's `onAction`, so you get the *global*\n   * old/new store states there. If you specifically want old/new plugin state,\n   * use `subscribeToState` instead.\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction<T extends PluginAction['type']>(\n    type: T,\n    handler: (\n      action: Extract<PluginAction, { type: T }>,\n      state: PluginState,\n      oldState: PluginState,\n    ) => void,\n  ) {\n    return this.store.onAction(type, (action, state, oldState) => {\n      handler(\n        action as Extract<PluginAction, { type: T }>,\n        state.plugins[this.pluginId] as PluginState,\n        oldState.plugins[this.pluginId] as PluginState,\n      );\n    });\n  }\n}\n","import { PdfDocumentObject, PdfPageObject, Rotation } from '@embedpdf/models';\n\nexport const LOAD_DOCUMENT = 'LOAD_DOCUMENT';\nexport const SET_DOCUMENT = 'SET_DOCUMENT';\nexport const SET_DOCUMENT_ERROR = 'SET_DOCUMENT_ERROR';\nexport const SET_SCALE = 'SET_SCALE';\nexport const SET_ROTATION = 'SET_ROTATION';\nexport const SET_PAGES = 'SET_PAGES';\n\nexport const CORE_ACTION_TYPES = [\n  LOAD_DOCUMENT,\n  SET_DOCUMENT,\n  SET_DOCUMENT_ERROR,\n  SET_SCALE,\n  SET_ROTATION,\n  SET_PAGES,\n] as const;\n\n// Action Type Interfaces\nexport interface LoadDocumentAction {\n  type: typeof LOAD_DOCUMENT;\n}\n\nexport interface SetDocumentAction {\n  type: typeof SET_DOCUMENT;\n  payload: PdfDocumentObject;\n}\n\nexport interface SetDocumentErrorAction {\n  type: typeof SET_DOCUMENT_ERROR;\n  payload: string;\n}\n\nexport interface SetScaleAction {\n  type: typeof SET_SCALE;\n  payload: number;\n}\n\nexport interface SetRotationAction {\n  type: typeof SET_ROTATION;\n  payload: Rotation;\n}\n\nexport interface SetPagesAction {\n  type: typeof SET_PAGES;\n  payload: PdfPageObject[][];\n}\n\nexport type DocumentAction =\n  | LoadDocumentAction\n  | SetDocumentAction\n  | SetDocumentErrorAction\n  | SetScaleAction\n  | SetRotationAction\n  | SetPagesAction;\n\n// Core actions\nexport type CoreAction = DocumentAction;\n\nexport const loadDocument = (): CoreAction => ({ type: LOAD_DOCUMENT });\nexport const setDocument = (document: PdfDocumentObject): CoreAction => ({\n  type: SET_DOCUMENT,\n  payload: document,\n});\nexport const setDocumentError = (error: string): CoreAction => ({\n  type: SET_DOCUMENT_ERROR,\n  payload: error,\n});\nexport const setScale = (scale: number): CoreAction => ({ type: SET_SCALE, payload: scale });\nexport const setRotation = (rotation: Rotation): CoreAction => ({\n  type: SET_ROTATION,\n  payload: rotation,\n});\nexport const setPages = (pages: PdfPageObject[][]): CoreAction => ({\n  type: SET_PAGES,\n  payload: pages,\n});\n","import { Reducer, Action, StoreState, StoreListener, PluginListener } from './types';\nimport { PluginStore } from './plugin-store';\nimport { CORE_ACTION_TYPES } from './actions';\n\n/**\n * A generic, type-safe store class managing core and plugin states, reducers, and subscriptions.\n * @template CoreState The type of the core state.\n * @template CoreAction The type of actions handled by core reducers (extends Action).\n */\nexport class Store<CoreState, CoreAction extends Action = Action> {\n  private state: StoreState<CoreState>;\n  private coreReducer: Reducer<CoreState, CoreAction>;\n  private pluginReducers: Record<string, Reducer<any, Action>> = {};\n\n  private listeners: StoreListener<CoreState>[] = [];\n  private pluginListeners: Record<string, PluginListener[]> = {};\n\n  /**\n   * Initializes the store with the provided core state.\n   * @param reducer          The core reducer function\n   * @param initialCoreState The initial core state\n   */\n  constructor(\n    reducer: Reducer<CoreState, CoreAction>,\n    public initialCoreState: CoreState,\n  ) {\n    this.state = { core: initialCoreState, plugins: {} };\n    this.coreReducer = reducer;\n  }\n\n  /**\n   * Adds a reducer for a plugin-specific state.\n   * @param pluginId The unique identifier for the plugin.\n   * @param reducer The reducer function for the plugin state.\n   * @param initialState The initial state for the plugin.\n   */\n  addPluginReducer<PluginState>(\n    pluginId: string,\n    reducer: Reducer<PluginState, Action>,\n    initialState: PluginState,\n  ) {\n    this.state.plugins[pluginId] = initialState;\n    this.pluginReducers[pluginId] = reducer;\n  }\n\n  /**\n   * Dispatches an action *only* to the core reducer.\n   * Notifies the global store listeners with (action, newState, oldState).\n   *\n   * @param action The action to dispatch, typed as CoreAction\n   * @returns The updated *global* store state\n   */\n  dispatchToCore(action: CoreAction): StoreState<CoreState> {\n    if (!this.coreReducer) {\n      return this.getState();\n    }\n\n    const oldState = this.getState();\n    // Update core state via its reducer\n    this.state.core = this.coreReducer(this.state.core, action);\n\n    const newState = this.getState();\n    // Notify all main-store subscribers\n    this.listeners.forEach((listener) => listener(action, newState, oldState));\n\n    return newState;\n  }\n\n  /**\n   * Dispatches an action *only* to a specific plugin.\n   * Optionally notifies global store listeners if `notifyGlobal` is true.\n   * Always notifies plugin-specific listeners with (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId   The plugin identifier\n   * @param action     The plugin action to dispatch\n   * @param notifyGlobal Whether to also notify global store listeners\n   * @returns The updated *global* store state\n   */\n  dispatchToPlugin<PluginAction extends Action>(\n    pluginId: string,\n    action: PluginAction,\n    notifyGlobal: boolean = true,\n  ): any {\n    const oldGlobalState = this.getState();\n\n    const reducer = this.pluginReducers[pluginId];\n    if (!reducer) {\n      // No plugin found, just return the old state\n      return oldGlobalState;\n    }\n\n    // Grab the old plugin state\n    const oldPluginState = oldGlobalState.plugins[pluginId];\n    // Reduce to new plugin state\n    const newPluginState = reducer(oldPluginState, action);\n    // Update the store's plugin slice\n    this.state.plugins[pluginId] = newPluginState;\n\n    const newGlobalState = this.getState();\n\n    // If we are notifying the main store subscribers about plugin changes\n    if (notifyGlobal) {\n      this.listeners.forEach((listener) => listener(action, newGlobalState, oldGlobalState));\n    }\n\n    // Notify plugin-specific listeners\n    if (this.pluginListeners[pluginId]) {\n      this.pluginListeners[pluginId].forEach((listener) => {\n        listener(action, newPluginState, oldPluginState);\n      });\n    }\n\n    return newPluginState;\n  }\n\n  /**\n   * Dispatches an action to update the state using:\n   * - the core reducer (if it's a CoreAction)\n   * - *all* plugin reducers (regardless of action type), with no global notify for each plugin\n   *\n   * Returns the new *global* store state after all reducers have processed the action.\n   *\n   * @param action The action to dispatch (can be CoreAction or any Action).\n   */\n  dispatch(action: CoreAction | Action): StoreState<CoreState> {\n    // Keep old state to notify global listeners *once*, after all reducers run.\n    const oldState = this.getState();\n    // 1) Apply core reducer (only if action is a CoreAction)\n    if (this.isCoreAction(action)) {\n      this.state.core = this.coreReducer(this.state.core, action);\n    }\n\n    // 2) Apply plugin reducers (without globally notifying after each plugin)\n    for (const pluginId in this.pluginReducers) {\n      const reducer = this.pluginReducers[pluginId];\n      const oldPluginState = oldState.plugins[pluginId];\n      if (reducer) {\n        this.state.plugins[pluginId] = reducer(oldPluginState, action);\n      }\n      // We do *not* notify global listeners or plugin listeners here,\n      // as that might be undesired \"fan-out\". If you want per-plugin subscription\n      // triggered on every dispatch, you can do so here, but that’s up to you.\n    }\n\n    // 3) Notify global listeners *once* with the final new state\n    const newState = this.getState();\n    this.listeners.forEach((listener) => listener(action, newState, oldState));\n\n    // 4) Return the new global store state\n    return newState;\n  }\n\n  /**\n   * Returns a shallow copy of the current state.\n   * @returns The current store state.\n   */\n  getState(): StoreState<CoreState> {\n    return {\n      core: { ...this.state.core },\n      plugins: { ...this.state.plugins },\n    };\n  }\n\n  /**\n   * Subscribes a listener to *global* state changes.\n   * The callback signature is now (action, newState, oldState).\n   *\n   * @param listener The callback to invoke on state changes\n   * @returns A function to unsubscribe the listener\n   */\n  subscribe(listener: StoreListener<CoreState>) {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter((l) => l !== listener);\n    };\n  }\n\n  /**\n   * Subscribes a listener to *plugin-specific* state changes.\n   * The callback signature is now (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId The unique identifier for the plugin.\n   * @param listener The callback to invoke on plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToPlugin(pluginId: string, listener: PluginListener) {\n    if (!(pluginId in this.state.plugins)) {\n      throw new Error(\n        `Plugin state not found for plugin \"${pluginId}\". Did you forget to call addPluginReducer?`,\n      );\n    }\n\n    if (!this.pluginListeners[pluginId]) {\n      this.pluginListeners[pluginId] = [];\n    }\n    this.pluginListeners[pluginId].push(listener);\n\n    return () => {\n      this.pluginListeners[pluginId] = this.pluginListeners[pluginId].filter((l) => l !== listener);\n      if (this.pluginListeners[pluginId].length === 0) {\n        delete this.pluginListeners[pluginId];\n      }\n    };\n  }\n\n  /**\n   * Subscribes to a specific action type (only from the core's action union).\n   * The callback signature is (action, newState, oldState).\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction<T extends CoreAction['type']>(\n    type: T,\n    handler: (\n      action: Extract<CoreAction, { type: T }>,\n      state: StoreState<CoreState>,\n      oldState: StoreState<CoreState>,\n    ) => void,\n  ) {\n    return this.subscribe((action, newState, oldState) => {\n      if (action.type === type) {\n        handler(action as Extract<CoreAction, { type: T }>, newState, oldState);\n      }\n    });\n  }\n\n  /**\n   * Gets a PluginStore handle for a specific plugin.\n   * @param pluginId The unique identifier for the plugin.\n   * @returns A PluginStore instance for the plugin.\n   */\n  getPluginStore<PluginState, PluginAction extends Action>(\n    pluginId: string,\n  ): PluginStore<PluginState, PluginAction> {\n    if (!(pluginId in this.state.plugins)) {\n      throw new Error(\n        `Plugin state not found for plugin \"${pluginId}\". Did you forget to call addPluginReducer?`,\n      );\n    }\n    return new PluginStore<PluginState, PluginAction>(this, pluginId);\n  }\n\n  /**\n   * Helper method to check if an action is a CoreAction.\n   * Adjust if you have a more refined way to differentiate CoreAction vs. any other Action.\n   */\n  public isCoreAction(action: Action): action is CoreAction {\n    // In many codebases you'd do something more robust here\n    // or rely on TypeScript's narrowing logic if possible.\n    return CORE_ACTION_TYPES.includes(action.type as (typeof CORE_ACTION_TYPES)[number]);\n  }\n\n  /**\n   * Destroy the store: drop every listener and plugin reducer\n   */\n  public destroy(): void {\n    // 1. empty listener collections\n    this.listeners.length = 0;\n    for (const id in this.pluginListeners) {\n      this.pluginListeners[id]?.splice?.(0);\n    }\n    this.pluginListeners = {};\n\n    // 2. wipe plugin reducers and states\n    this.pluginReducers = {};\n    this.state.plugins = {};\n\n    // 3. reset core state to initial\n    this.state.core = { ...this.initialCoreState };\n  }\n}\n","// src/geometry.ts\nvar Rotation = /* @__PURE__ */ ((Rotation2) => {\n  Rotation2[Rotation2[\"Degree0\"] = 0] = \"Degree0\";\n  Rotation2[Rotation2[\"Degree90\"] = 1] = \"Degree90\";\n  Rotation2[Rotation2[\"Degree180\"] = 2] = \"Degree180\";\n  Rotation2[Rotation2[\"Degree270\"] = 3] = \"Degree270\";\n  return Rotation2;\n})(Rotation || {});\nfunction toIntPos(p) {\n  return { x: Math.floor(p.x), y: Math.floor(p.y) };\n}\nfunction toIntSize(s) {\n  return { width: Math.ceil(s.width), height: Math.ceil(s.height) };\n}\nfunction toIntRect(r) {\n  return {\n    origin: toIntPos(r.origin),\n    size: toIntSize(r.size)\n  };\n}\nfunction calculateDegree(rotation) {\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return 0;\n    case 1 /* Degree90 */:\n      return 90;\n    case 2 /* Degree180 */:\n      return 180;\n    case 3 /* Degree270 */:\n      return 270;\n  }\n}\nfunction calculateAngle(rotation) {\n  return calculateDegree(rotation) * Math.PI / 180;\n}\nfunction swap(size) {\n  const { width, height } = size;\n  return {\n    width: height,\n    height: width\n  };\n}\nfunction transformSize(size, rotation, scaleFactor) {\n  size = rotation % 2 === 0 ? size : swap(size);\n  return {\n    width: size.width * scaleFactor,\n    height: size.height * scaleFactor\n  };\n}\nfunction quadToRect(q) {\n  const xs = [q.p1.x, q.p2.x, q.p3.x, q.p4.x];\n  const ys = [q.p1.y, q.p2.y, q.p3.y, q.p4.y];\n  return {\n    origin: { x: Math.min(...xs), y: Math.min(...ys) },\n    size: {\n      width: Math.max(...xs) - Math.min(...xs),\n      height: Math.max(...ys) - Math.min(...ys)\n    }\n  };\n}\nfunction rectToQuad(r) {\n  return {\n    p1: { x: r.origin.x, y: r.origin.y },\n    p2: { x: r.origin.x + r.size.width, y: r.origin.y },\n    p3: { x: r.origin.x + r.size.width, y: r.origin.y + r.size.height },\n    p4: { x: r.origin.x, y: r.origin.y + r.size.height }\n  };\n}\nfunction rotatePosition(containerSize, position, rotation) {\n  let x = position.x;\n  let y = position.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      x = position.x;\n      y = position.y;\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - position.y;\n      y = position.x;\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - position.x;\n      y = containerSize.height - position.y;\n      break;\n    case 3 /* Degree270 */:\n      x = position.y;\n      y = containerSize.width - position.x;\n      break;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction scalePosition(position, scaleFactor) {\n  return {\n    x: position.x * scaleFactor,\n    y: position.y * scaleFactor\n  };\n}\nfunction transformPosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(rotatePosition(containerSize, position, rotation), scaleFactor);\n}\nfunction restorePosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(\n    rotatePosition(containerSize, position, (4 - rotation) % 4),\n    1 / scaleFactor\n  );\n}\nfunction rotateRect(containerSize, rect, rotation) {\n  let x = rect.origin.x;\n  let y = rect.origin.y;\n  let size = rect.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - rect.origin.y - rect.size.height;\n      y = rect.origin.x;\n      size = swap(rect.size);\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - rect.origin.x - rect.size.width;\n      y = containerSize.height - rect.origin.y - rect.size.height;\n      break;\n    case 3 /* Degree270 */:\n      x = rect.origin.y;\n      y = containerSize.width - rect.origin.x - rect.size.width;\n      size = swap(rect.size);\n      break;\n  }\n  return {\n    origin: {\n      x,\n      y\n    },\n    size: {\n      width: size.width,\n      height: size.height\n    }\n  };\n}\nfunction scaleRect(rect, scaleFactor) {\n  return {\n    origin: {\n      x: rect.origin.x * scaleFactor,\n      y: rect.origin.y * scaleFactor\n    },\n    size: {\n      width: rect.size.width * scaleFactor,\n      height: rect.size.height * scaleFactor\n    }\n  };\n}\nfunction transformRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, rotation), scaleFactor);\n}\nfunction restoreRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, (4 - rotation) % 4), 1 / scaleFactor);\n}\nfunction restoreOffset(offset, rotation, scaleFactor) {\n  let offsetX = offset.x;\n  let offsetY = offset.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      offsetX = offset.x / scaleFactor;\n      offsetY = offset.y / scaleFactor;\n      break;\n    case 1 /* Degree90 */:\n      offsetX = offset.y / scaleFactor;\n      offsetY = -offset.x / scaleFactor;\n      break;\n    case 2 /* Degree180 */:\n      offsetX = -offset.x / scaleFactor;\n      offsetY = -offset.y / scaleFactor;\n      break;\n    case 3 /* Degree270 */:\n      offsetX = -offset.y / scaleFactor;\n      offsetY = offset.x / scaleFactor;\n      break;\n  }\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\nfunction boundingRect(rects) {\n  if (rects.length === 0) return null;\n  let minX = rects[0].origin.x, minY = rects[0].origin.y, maxX = rects[0].origin.x + rects[0].size.width, maxY = rects[0].origin.y + rects[0].size.height;\n  for (const r of rects) {\n    minX = Math.min(minX, r.origin.x);\n    minY = Math.min(minY, r.origin.y);\n    maxX = Math.max(maxX, r.origin.x + r.size.width);\n    maxY = Math.max(maxY, r.origin.y + r.size.height);\n  }\n  return {\n    origin: {\n      x: minX,\n      y: minY\n    },\n    size: {\n      width: maxX - minX,\n      height: maxY - minY\n    }\n  };\n}\nvar makeMatrix = (rectangle, rotation, scaleFactor) => {\n  const { width, height } = rectangle.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: -scaleFactor,\n        e: 0,\n        f: height * scaleFactor\n      };\n    case 1 /* Degree90 */:\n      return {\n        a: 0,\n        b: scaleFactor,\n        c: scaleFactor,\n        d: 0,\n        e: 0,\n        f: 0\n      };\n    case 2 /* Degree180 */:\n      return {\n        a: -scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: width * scaleFactor,\n        f: 0\n      };\n    case 3 /* Degree270 */:\n      return {\n        a: 0,\n        b: -scaleFactor,\n        c: -scaleFactor,\n        d: 0,\n        e: height * scaleFactor,\n        f: width * scaleFactor\n      };\n  }\n};\n\n// src/logger.ts\nvar NoopLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug() {\n  }\n  /** {@inheritDoc Logger.info} */\n  info() {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn() {\n  }\n  /** {@inheritDoc Logger.error} */\n  error() {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf() {\n  }\n};\nvar ConsoleLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    console.debug(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    console.info(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    console.warn(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    console.error(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    console.info(`${source}.${category}.${event}.${phase}`, ...args);\n  }\n};\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"Debug\"] = 0] = \"Debug\";\n  LogLevel2[LogLevel2[\"Info\"] = 1] = \"Info\";\n  LogLevel2[LogLevel2[\"Warn\"] = 2] = \"Warn\";\n  LogLevel2[LogLevel2[\"Error\"] = 3] = \"Error\";\n  return LogLevel2;\n})(LogLevel || {});\nvar LevelLogger = class {\n  /**\n   * create new LevelLogger\n   * @param logger - the original logger\n   * @param level - log level that used for filtering, all logs lower than this level will be filtered out\n   */\n  constructor(logger, level) {\n    this.logger = logger;\n    this.level = level;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    if (this.level <= 0 /* Debug */) {\n      this.logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    if (this.level <= 1 /* Info */) {\n      this.logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    if (this.level <= 2 /* Warn */) {\n      this.logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    if (this.level <= 3 /* Error */) {\n      this.logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    this.logger.perf(source, category, event, phase, ...args);\n  }\n};\nvar PerfLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor() {\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, identifier, ...args) {\n    switch (phase) {\n      case \"Begin\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        break;\n      case \"End\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        window.performance.measure(\n          `${source}.${category}.${event}.Measure.${identifier}`,\n          `${source}.${category}.${event}.Begin.${identifier}`,\n          `${source}.${category}.${event}.End.${identifier}`\n        );\n        break;\n    }\n  }\n};\nvar AllLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor(loggers) {\n    this.loggers = loggers;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    for (const logger of this.loggers) {\n      logger.perf(source, category, event, phase, ...args);\n    }\n  }\n};\n\n// src/task.ts\nvar TaskStage = /* @__PURE__ */ ((TaskStage2) => {\n  TaskStage2[TaskStage2[\"Pending\"] = 0] = \"Pending\";\n  TaskStage2[TaskStage2[\"Resolved\"] = 1] = \"Resolved\";\n  TaskStage2[TaskStage2[\"Rejected\"] = 2] = \"Rejected\";\n  TaskStage2[TaskStage2[\"Aborted\"] = 3] = \"Aborted\";\n  return TaskStage2;\n})(TaskStage || {});\nvar TaskAbortedError = class extends Error {\n  constructor(reason) {\n    super(`Task aborted: ${JSON.stringify(reason)}`);\n    this.name = \"TaskAbortedError\";\n  }\n};\nvar TaskRejectedError = class extends Error {\n  constructor(reason) {\n    super(`Task rejected: ${JSON.stringify(reason)}`);\n    this.name = \"TaskRejectedError\";\n  }\n};\nvar Task = class _Task {\n  constructor() {\n    this.state = {\n      stage: 0 /* Pending */\n    };\n    /**\n     * callbacks that will be executed when task is resolved\n     */\n    this.resolvedCallbacks = [];\n    /**\n     * callbacks that will be executed when task is rejected\n     */\n    this.rejectedCallbacks = [];\n    /**\n     * Promise that will be resolved when task is settled\n     */\n    this._promise = null;\n  }\n  /**\n   * Convert task to promise\n   * @returns promise that will be resolved when task is settled\n   */\n  toPromise() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this.wait(\n          (result) => resolve(result),\n          (error) => {\n            if (error.type === \"abort\") {\n              reject(new TaskAbortedError(error.reason));\n            } else {\n              reject(new TaskRejectedError(error.reason));\n            }\n          }\n        );\n      });\n    }\n    return this._promise;\n  }\n  /**\n   * wait for task to be settled\n   * @param resolvedCallback - callback for resolved value\n   * @param rejectedCallback - callback for rejected value\n   */\n  wait(resolvedCallback, rejectedCallback) {\n    switch (this.state.stage) {\n      case 0 /* Pending */:\n        this.resolvedCallbacks.push(resolvedCallback);\n        this.rejectedCallbacks.push(rejectedCallback);\n        break;\n      case 1 /* Resolved */:\n        resolvedCallback(this.state.result);\n        break;\n      case 2 /* Rejected */:\n        rejectedCallback({\n          type: \"reject\",\n          reason: this.state.reason\n        });\n        break;\n      case 3 /* Aborted */:\n        rejectedCallback({\n          type: \"abort\",\n          reason: this.state.reason\n        });\n        break;\n    }\n  }\n  /**\n   * resolve task with specific result\n   * @param result - result value\n   */\n  resolve(result) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 1 /* Resolved */,\n        result\n      };\n      for (const resolvedCallback of this.resolvedCallbacks) {\n        try {\n          resolvedCallback(result);\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * reject task with specific reason\n   * @param reason - abort reason\n   *\n   */\n  reject(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 2 /* Rejected */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"reject\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * abort task with specific reason\n   * @param reason - abort reason\n   */\n  abort(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 3 /* Aborted */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"abort\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * fail task with a TaskError from another task\n   * This is a convenience method for error propagation between tasks\n   * @param error - TaskError from another task\n   */\n  fail(error) {\n    if (error.type === \"abort\") {\n      this.abort(error.reason);\n    } else {\n      this.reject(error.reason);\n    }\n  }\n  /**\n   * Static method to wait for all tasks to resolve\n   * Returns a new task that resolves with an array of all results\n   * Rejects immediately if any task fails\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static all(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let resolvedCount = 0;\n    let isSettled = false;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          results[index] = result;\n          resolvedCount++;\n          if (resolvedCount === tasks.length) {\n            isSettled = true;\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method to wait for all tasks to settle (resolve, reject, or abort)\n   * Always resolves with an array of settlement results\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks settle\n   * @public\n   */\n  static allSettled(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let settledCount = 0;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          results[index] = { status: \"resolved\", value: result };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          results[index] = {\n            status: error.type === \"abort\" ? \"aborted\" : \"rejected\",\n            reason: error.reason\n          };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method that resolves/rejects with the first task that settles\n   *\n   * @param tasks - array of tasks to race\n   * @returns new task that settles with the first input task that settles\n   * @public\n   */\n  static race(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.reject(\"No tasks provided\");\n      return combinedTask;\n    }\n    let isSettled = false;\n    tasks.forEach((task) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          isSettled = true;\n          combinedTask.resolve(result);\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Utility to track progress of multiple tasks\n   *\n   * @param tasks - array of tasks to track\n   * @param onProgress - callback called when any task completes\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static withProgress(tasks, onProgress) {\n    const combinedTask = _Task.all(tasks);\n    if (onProgress) {\n      let completedCount = 0;\n      tasks.forEach((task) => {\n        task.wait(\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          }\n        );\n      });\n    }\n    return combinedTask;\n  }\n};\n\n// src/pdf.ts\nvar PdfSoftHyphenMarker = \"\\xAD\";\nvar PdfZeroWidthSpace = \"\\u200B\";\nvar PdfWordJoiner = \"\\u2060\";\nvar PdfBomOrZwnbsp = \"\\uFEFF\";\nvar PdfNonCharacterFFFE = \"\\uFFFE\";\nvar PdfNonCharacterFFFF = \"\\uFFFF\";\nvar PdfUnwantedTextMarkers = Object.freeze([\n  PdfSoftHyphenMarker,\n  PdfZeroWidthSpace,\n  PdfWordJoiner,\n  PdfBomOrZwnbsp,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF\n]);\nvar PdfUnwantedTextRegex = new RegExp(`[${PdfUnwantedTextMarkers.join(\"\")}]`, \"g\");\nfunction stripPdfUnwantedMarkers(text) {\n  return text.replace(PdfUnwantedTextRegex, \"\");\n}\nvar PdfZoomMode = /* @__PURE__ */ ((PdfZoomMode2) => {\n  PdfZoomMode2[PdfZoomMode2[\"Unknown\"] = 0] = \"Unknown\";\n  PdfZoomMode2[PdfZoomMode2[\"XYZ\"] = 1] = \"XYZ\";\n  PdfZoomMode2[PdfZoomMode2[\"FitPage\"] = 2] = \"FitPage\";\n  PdfZoomMode2[PdfZoomMode2[\"FitHorizontal\"] = 3] = \"FitHorizontal\";\n  PdfZoomMode2[PdfZoomMode2[\"FitVertical\"] = 4] = \"FitVertical\";\n  PdfZoomMode2[PdfZoomMode2[\"FitRectangle\"] = 5] = \"FitRectangle\";\n  return PdfZoomMode2;\n})(PdfZoomMode || {});\nvar PdfBlendMode = /* @__PURE__ */ ((PdfBlendMode2) => {\n  PdfBlendMode2[PdfBlendMode2[\"Normal\"] = 0] = \"Normal\";\n  PdfBlendMode2[PdfBlendMode2[\"Multiply\"] = 1] = \"Multiply\";\n  PdfBlendMode2[PdfBlendMode2[\"Screen\"] = 2] = \"Screen\";\n  PdfBlendMode2[PdfBlendMode2[\"Overlay\"] = 3] = \"Overlay\";\n  PdfBlendMode2[PdfBlendMode2[\"Darken\"] = 4] = \"Darken\";\n  PdfBlendMode2[PdfBlendMode2[\"Lighten\"] = 5] = \"Lighten\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorDodge\"] = 6] = \"ColorDodge\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorBurn\"] = 7] = \"ColorBurn\";\n  PdfBlendMode2[PdfBlendMode2[\"HardLight\"] = 8] = \"HardLight\";\n  PdfBlendMode2[PdfBlendMode2[\"SoftLight\"] = 9] = \"SoftLight\";\n  PdfBlendMode2[PdfBlendMode2[\"Difference\"] = 10] = \"Difference\";\n  PdfBlendMode2[PdfBlendMode2[\"Exclusion\"] = 11] = \"Exclusion\";\n  PdfBlendMode2[PdfBlendMode2[\"Hue\"] = 12] = \"Hue\";\n  PdfBlendMode2[PdfBlendMode2[\"Saturation\"] = 13] = \"Saturation\";\n  PdfBlendMode2[PdfBlendMode2[\"Color\"] = 14] = \"Color\";\n  PdfBlendMode2[PdfBlendMode2[\"Luminosity\"] = 15] = \"Luminosity\";\n  return PdfBlendMode2;\n})(PdfBlendMode || {});\nvar MixedBlendMode = Symbol(\"mixed\");\nvar BLEND_MODE_INFOS = Object.freeze([\n  { id: 0 /* Normal */, label: \"Normal\", css: \"normal\" },\n  { id: 1 /* Multiply */, label: \"Multiply\", css: \"multiply\" },\n  { id: 2 /* Screen */, label: \"Screen\", css: \"screen\" },\n  { id: 3 /* Overlay */, label: \"Overlay\", css: \"overlay\" },\n  { id: 4 /* Darken */, label: \"Darken\", css: \"darken\" },\n  { id: 5 /* Lighten */, label: \"Lighten\", css: \"lighten\" },\n  { id: 6 /* ColorDodge */, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7 /* ColorBurn */, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8 /* HardLight */, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9 /* SoftLight */, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10 /* Difference */, label: \"Difference\", css: \"difference\" },\n  { id: 11 /* Exclusion */, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12 /* Hue */, label: \"Hue\", css: \"hue\" },\n  { id: 13 /* Saturation */, label: \"Saturation\", css: \"saturation\" },\n  { id: 14 /* Color */, label: \"Color\", css: \"color\" },\n  { id: 15 /* Luminosity */, label: \"Luminosity\", css: \"luminosity\" }\n]);\nvar enumToInfo = BLEND_MODE_INFOS.reduce(\n  (m, info) => {\n    m[info.id] = info;\n    return m;\n  },\n  {}\n);\nvar cssToEnum = BLEND_MODE_INFOS.reduce((m, info) => {\n  m[info.css] = info.id;\n  return m;\n}, {});\nfunction getBlendModeInfo(mode) {\n  return enumToInfo[mode] ?? enumToInfo[0 /* Normal */];\n}\nfunction blendModeToCss(mode) {\n  return getBlendModeInfo(mode).css;\n}\nfunction cssToBlendMode(value) {\n  return cssToEnum[value];\n}\nfunction blendModeLabel(mode) {\n  return getBlendModeInfo(mode).label;\n}\nfunction reduceBlendModes(modes) {\n  if (!modes.length) return 0 /* Normal */;\n  const first = modes[0];\n  return modes.every((m) => m === first) ? first : MixedBlendMode;\n}\nvar blendModeSelectOptions = BLEND_MODE_INFOS.map((info) => ({\n  value: info.id,\n  label: info.label\n}));\nfunction uiBlendModeDisplay(value) {\n  return value === MixedBlendMode ? \"(mixed)\" : blendModeLabel(value);\n}\nvar PdfActionType = /* @__PURE__ */ ((PdfActionType2) => {\n  PdfActionType2[PdfActionType2[\"Unsupported\"] = 0] = \"Unsupported\";\n  PdfActionType2[PdfActionType2[\"Goto\"] = 1] = \"Goto\";\n  PdfActionType2[PdfActionType2[\"RemoteGoto\"] = 2] = \"RemoteGoto\";\n  PdfActionType2[PdfActionType2[\"URI\"] = 3] = \"URI\";\n  PdfActionType2[PdfActionType2[\"LaunchAppOrOpenFile\"] = 4] = \"LaunchAppOrOpenFile\";\n  return PdfActionType2;\n})(PdfActionType || {});\nvar PdfAnnotationSubtype = /* @__PURE__ */ ((PdfAnnotationSubtype2) => {\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINK\"] = 2] = \"LINK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FREETEXT\"] = 3] = \"FREETEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINE\"] = 4] = \"LINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUARE\"] = 5] = \"SQUARE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CIRCLE\"] = 6] = \"CIRCLE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYGON\"] = 7] = \"POLYGON\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYLINE\"] = 8] = \"POLYLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"HIGHLIGHT\"] = 9] = \"HIGHLIGHT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNDERLINE\"] = 10] = \"UNDERLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUIGGLY\"] = 11] = \"SQUIGGLY\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STRIKEOUT\"] = 12] = \"STRIKEOUT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STAMP\"] = 13] = \"STAMP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CARET\"] = 14] = \"CARET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"INK\"] = 15] = \"INK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POPUP\"] = 16] = \"POPUP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FILEATTACHMENT\"] = 17] = \"FILEATTACHMENT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SOUND\"] = 18] = \"SOUND\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"MOVIE\"] = 19] = \"MOVIE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WIDGET\"] = 20] = \"WIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SCREEN\"] = 21] = \"SCREEN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"PRINTERMARK\"] = 22] = \"PRINTERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TRAPNET\"] = 23] = \"TRAPNET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WATERMARK\"] = 24] = \"WATERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"THREED\"] = 25] = \"THREED\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"RICHMEDIA\"] = 26] = \"RICHMEDIA\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"XFAWIDGET\"] = 27] = \"XFAWIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"REDACT\"] = 28] = \"REDACT\";\n  return PdfAnnotationSubtype2;\n})(PdfAnnotationSubtype || {});\nvar PdfAnnotationSubtypeName = {\n  [0 /* UNKNOWN */]: \"unknow\",\n  [1 /* TEXT */]: \"text\",\n  [2 /* LINK */]: \"link\",\n  [3 /* FREETEXT */]: \"freetext\",\n  [4 /* LINE */]: \"line\",\n  [5 /* SQUARE */]: \"square\",\n  [6 /* CIRCLE */]: \"circle\",\n  [7 /* POLYGON */]: \"polygon\",\n  [8 /* POLYLINE */]: \"polyline\",\n  [9 /* HIGHLIGHT */]: \"highlight\",\n  [10 /* UNDERLINE */]: \"underline\",\n  [11 /* SQUIGGLY */]: \"squiggly\",\n  [12 /* STRIKEOUT */]: \"strikeout\",\n  [13 /* STAMP */]: \"stamp\",\n  [14 /* CARET */]: \"caret\",\n  [15 /* INK */]: \"ink\",\n  [16 /* POPUP */]: \"popup\",\n  [17 /* FILEATTACHMENT */]: \"fileattachment\",\n  [18 /* SOUND */]: \"sound\",\n  [19 /* MOVIE */]: \"movie\",\n  [20 /* WIDGET */]: \"widget\",\n  [21 /* SCREEN */]: \"screen\",\n  [22 /* PRINTERMARK */]: \"printermark\",\n  [23 /* TRAPNET */]: \"trapnet\",\n  [24 /* WATERMARK */]: \"watermark\",\n  [25 /* THREED */]: \"threed\",\n  [26 /* RICHMEDIA */]: \"richmedia\",\n  [27 /* XFAWIDGET */]: \"xfawidget\",\n  [28 /* REDACT */]: \"redact\"\n};\nvar PdfAnnotationObjectStatus = /* @__PURE__ */ ((PdfAnnotationObjectStatus2) => {\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Created\"] = 0] = \"Created\";\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Committed\"] = 1] = \"Committed\";\n  return PdfAnnotationObjectStatus2;\n})(PdfAnnotationObjectStatus || {});\nvar AppearanceMode = /* @__PURE__ */ ((AppearanceMode2) => {\n  AppearanceMode2[AppearanceMode2[\"Normal\"] = 0] = \"Normal\";\n  AppearanceMode2[AppearanceMode2[\"Rollover\"] = 1] = \"Rollover\";\n  AppearanceMode2[AppearanceMode2[\"Down\"] = 2] = \"Down\";\n  return AppearanceMode2;\n})(AppearanceMode || {});\nvar PdfAnnotationState = /* @__PURE__ */ ((PdfAnnotationState2) => {\n  PdfAnnotationState2[\"Marked\"] = \"Marked\";\n  PdfAnnotationState2[\"Unmarked\"] = \"Unmarked\";\n  PdfAnnotationState2[\"Accepted\"] = \"Accepted\";\n  PdfAnnotationState2[\"Rejected\"] = \"Rejected\";\n  PdfAnnotationState2[\"Complete\"] = \"Complete\";\n  PdfAnnotationState2[\"Cancelled\"] = \"Cancelled\";\n  PdfAnnotationState2[\"None\"] = \"None\";\n  return PdfAnnotationState2;\n})(PdfAnnotationState || {});\nvar PdfAnnotationStateModel = /* @__PURE__ */ ((PdfAnnotationStateModel2) => {\n  PdfAnnotationStateModel2[\"Marked\"] = \"Marked\";\n  PdfAnnotationStateModel2[\"Reviewed\"] = \"Reviewed\";\n  return PdfAnnotationStateModel2;\n})(PdfAnnotationStateModel || {});\nvar PDF_FORM_FIELD_TYPE = /* @__PURE__ */ ((PDF_FORM_FIELD_TYPE2) => {\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"PUSHBUTTON\"] = 1] = \"PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"CHECKBOX\"] = 2] = \"CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"RADIOBUTTON\"] = 3] = \"RADIOBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"COMBOBOX\"] = 4] = \"COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"LISTBOX\"] = 5] = \"LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"TEXTFIELD\"] = 6] = \"TEXTFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"SIGNATURE\"] = 7] = \"SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA\"] = 8] = \"XFA\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_CHECKBOX\"] = 9] = \"XFA_CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_COMBOBOX\"] = 10] = \"XFA_COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_IMAGEFIELD\"] = 11] = \"XFA_IMAGEFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_LISTBOX\"] = 12] = \"XFA_LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_PUSHBUTTON\"] = 13] = \"XFA_PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_SIGNATURE\"] = 14] = \"XFA_SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_TEXTFIELD\"] = 15] = \"XFA_TEXTFIELD\";\n  return PDF_FORM_FIELD_TYPE2;\n})(PDF_FORM_FIELD_TYPE || {});\nvar PdfAnnotationColorType = /* @__PURE__ */ ((PdfAnnotationColorType2) => {\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"Color\"] = 0] = \"Color\";\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"InteriorColor\"] = 1] = \"InteriorColor\";\n  return PdfAnnotationColorType2;\n})(PdfAnnotationColorType || {});\nvar PdfAnnotationBorderStyle = /* @__PURE__ */ ((PdfAnnotationBorderStyle2) => {\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"SOLID\"] = 1] = \"SOLID\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"DASHED\"] = 2] = \"DASHED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"BEVELED\"] = 3] = \"BEVELED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"INSET\"] = 4] = \"INSET\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNDERLINE\"] = 5] = \"UNDERLINE\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"CLOUDY\"] = 6] = \"CLOUDY\";\n  return PdfAnnotationBorderStyle2;\n})(PdfAnnotationBorderStyle || {});\nvar PdfAnnotationFlags = /* @__PURE__ */ ((PdfAnnotationFlags2) => {\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NONE\"] = 0] = \"NONE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"INVISIBLE\"] = 1] = \"INVISIBLE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"HIDDEN\"] = 2] = \"HIDDEN\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"PRINT\"] = 4] = \"PRINT\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ZOOM\"] = 8] = \"NO_ZOOM\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ROTATE\"] = 16] = \"NO_ROTATE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_VIEW\"] = 32] = \"NO_VIEW\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"READ_ONLY\"] = 64] = \"READ_ONLY\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"LOCKED\"] = 128] = \"LOCKED\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"TOGGLE_NOVIEW\"] = 256] = \"TOGGLE_NOVIEW\";\n  return PdfAnnotationFlags2;\n})(PdfAnnotationFlags || {});\nvar PDF_FORM_FIELD_FLAG = /* @__PURE__ */ ((PDF_FORM_FIELD_FLAG2) => {\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NONE\"] = 0] = \"NONE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"READONLY\"] = 1] = \"READONLY\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"REQUIRED\"] = 2] = \"REQUIRED\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NOEXPORT\"] = 4] = \"NOEXPORT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_MULTIPLINE\"] = 4096] = \"TEXT_MULTIPLINE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_PASSWORD\"] = 8192] = \"TEXT_PASSWORD\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_COMBO\"] = 131072] = \"CHOICE_COMBO\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_EDIT\"] = 262144] = \"CHOICE_EDIT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_MULTL_SELECT\"] = 2097152] = \"CHOICE_MULTL_SELECT\";\n  return PDF_FORM_FIELD_FLAG2;\n})(PDF_FORM_FIELD_FLAG || {});\nvar PdfPageObjectType = /* @__PURE__ */ ((PdfPageObjectType2) => {\n  PdfPageObjectType2[PdfPageObjectType2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfPageObjectType2[PdfPageObjectType2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfPageObjectType2[PdfPageObjectType2[\"PATH\"] = 2] = \"PATH\";\n  PdfPageObjectType2[PdfPageObjectType2[\"IMAGE\"] = 3] = \"IMAGE\";\n  PdfPageObjectType2[PdfPageObjectType2[\"SHADING\"] = 4] = \"SHADING\";\n  PdfPageObjectType2[PdfPageObjectType2[\"FORM\"] = 5] = \"FORM\";\n  return PdfPageObjectType2;\n})(PdfPageObjectType || {});\nvar PdfAnnotationFlagName = Object.freeze({\n  [1 /* INVISIBLE */]: \"invisible\",\n  [2 /* HIDDEN */]: \"hidden\",\n  [4 /* PRINT */]: \"print\",\n  [8 /* NO_ZOOM */]: \"noZoom\",\n  [16 /* NO_ROTATE */]: \"noRotate\",\n  [32 /* NO_VIEW */]: \"noView\",\n  [64 /* READ_ONLY */]: \"readOnly\",\n  [128 /* LOCKED */]: \"locked\",\n  [256 /* TOGGLE_NOVIEW */]: \"toggleNoView\"\n});\nvar PdfAnnotationFlagValue = Object.entries(\n  PdfAnnotationFlagName\n).reduce(\n  (acc, [bit, name]) => {\n    acc[name] = Number(bit);\n    return acc;\n  },\n  {}\n);\nfunction flagsToNames(raw) {\n  return Object.keys(PdfAnnotationFlagName).filter((flag) => (raw & flag) !== 0).map((flag) => PdfAnnotationFlagName[flag]);\n}\nfunction namesToFlags(names) {\n  return names.reduce(\n    (mask, name) => mask | PdfAnnotationFlagValue[name],\n    0 /* NONE */\n  );\n}\nvar PdfSegmentObjectType = /* @__PURE__ */ ((PdfSegmentObjectType2) => {\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"LINETO\"] = 0] = \"LINETO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"BEZIERTO\"] = 1] = \"BEZIERTO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"MOVETO\"] = 2] = \"MOVETO\";\n  return PdfSegmentObjectType2;\n})(PdfSegmentObjectType || {});\nvar PdfEngineFeature = /* @__PURE__ */ ((PdfEngineFeature2) => {\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPage\"] = 0] = \"RenderPage\";\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPageRect\"] = 1] = \"RenderPageRect\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Thumbnails\"] = 2] = \"Thumbnails\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Bookmarks\"] = 3] = \"Bookmarks\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Annotations\"] = 4] = \"Annotations\";\n  return PdfEngineFeature2;\n})(PdfEngineFeature || {});\nvar PdfEngineOperation = /* @__PURE__ */ ((PdfEngineOperation2) => {\n  PdfEngineOperation2[PdfEngineOperation2[\"Create\"] = 0] = \"Create\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Read\"] = 1] = \"Read\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Update\"] = 2] = \"Update\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Delete\"] = 3] = \"Delete\";\n  return PdfEngineOperation2;\n})(PdfEngineOperation || {});\nvar MatchFlag = /* @__PURE__ */ ((MatchFlag2) => {\n  MatchFlag2[MatchFlag2[\"None\"] = 0] = \"None\";\n  MatchFlag2[MatchFlag2[\"MatchCase\"] = 1] = \"MatchCase\";\n  MatchFlag2[MatchFlag2[\"MatchWholeWord\"] = 2] = \"MatchWholeWord\";\n  MatchFlag2[MatchFlag2[\"MatchConsecutive\"] = 4] = \"MatchConsecutive\";\n  return MatchFlag2;\n})(MatchFlag || {});\nfunction unionFlags(flags) {\n  return flags.reduce((flag, currFlag) => {\n    return flag | currFlag;\n  }, 0 /* None */);\n}\nfunction compareSearchTarget(targetA, targetB) {\n  const flagA = unionFlags(targetA.flags);\n  const flagB = unionFlags(targetB.flags);\n  return flagA === flagB && targetA.keyword === targetB.keyword;\n}\nvar PdfPermission = /* @__PURE__ */ ((PdfPermission2) => {\n  PdfPermission2[PdfPermission2[\"PrintDocument\"] = 8] = \"PrintDocument\";\n  PdfPermission2[PdfPermission2[\"ModifyContent\"] = 16] = \"ModifyContent\";\n  PdfPermission2[PdfPermission2[\"CopyOrExtract\"] = 32] = \"CopyOrExtract\";\n  PdfPermission2[PdfPermission2[\"AddOrModifyTextAnnot\"] = 64] = \"AddOrModifyTextAnnot\";\n  PdfPermission2[PdfPermission2[\"FillInExistingForm\"] = 512] = \"FillInExistingForm\";\n  PdfPermission2[PdfPermission2[\"ExtractTextOrGraphics\"] = 1024] = \"ExtractTextOrGraphics\";\n  PdfPermission2[PdfPermission2[\"AssembleDocument\"] = 2048] = \"AssembleDocument\";\n  PdfPermission2[PdfPermission2[\"PrintHighQuality\"] = 4096] = \"PrintHighQuality\";\n  return PdfPermission2;\n})(PdfPermission || {});\nvar PdfPageFlattenFlag = /* @__PURE__ */ ((PdfPageFlattenFlag2) => {\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Display\"] = 0] = \"Display\";\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Print\"] = 1] = \"Print\";\n  return PdfPageFlattenFlag2;\n})(PdfPageFlattenFlag || {});\nvar PdfPageFlattenResult = /* @__PURE__ */ ((PdfPageFlattenResult2) => {\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Fail\"] = 0] = \"Fail\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Success\"] = 1] = \"Success\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"NothingToDo\"] = 2] = \"NothingToDo\";\n  return PdfPageFlattenResult2;\n})(PdfPageFlattenResult || {});\nvar PdfErrorCode = /* @__PURE__ */ ((PdfErrorCode2) => {\n  PdfErrorCode2[PdfErrorCode2[\"Ok\"] = 0] = \"Ok\";\n  PdfErrorCode2[PdfErrorCode2[\"Unknown\"] = 1] = \"Unknown\";\n  PdfErrorCode2[PdfErrorCode2[\"NotFound\"] = 2] = \"NotFound\";\n  PdfErrorCode2[PdfErrorCode2[\"WrongFormat\"] = 3] = \"WrongFormat\";\n  PdfErrorCode2[PdfErrorCode2[\"Password\"] = 4] = \"Password\";\n  PdfErrorCode2[PdfErrorCode2[\"Security\"] = 5] = \"Security\";\n  PdfErrorCode2[PdfErrorCode2[\"PageError\"] = 6] = \"PageError\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALoad\"] = 7] = \"XFALoad\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALayout\"] = 8] = \"XFALayout\";\n  PdfErrorCode2[PdfErrorCode2[\"Cancelled\"] = 9] = \"Cancelled\";\n  PdfErrorCode2[PdfErrorCode2[\"Initialization\"] = 10] = \"Initialization\";\n  PdfErrorCode2[PdfErrorCode2[\"NotReady\"] = 11] = \"NotReady\";\n  PdfErrorCode2[PdfErrorCode2[\"NotSupport\"] = 12] = \"NotSupport\";\n  PdfErrorCode2[PdfErrorCode2[\"LoadDoc\"] = 13] = \"LoadDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"DocNotOpen\"] = 14] = \"DocNotOpen\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCloseDoc\"] = 15] = \"CantCloseDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateNewDoc\"] = 16] = \"CantCreateNewDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantImportPages\"] = 17] = \"CantImportPages\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateAnnot\"] = 18] = \"CantCreateAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotRect\"] = 19] = \"CantSetAnnotRect\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotContent\"] = 20] = \"CantSetAnnotContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantRemoveInkList\"] = 21] = \"CantRemoveInkList\";\n  PdfErrorCode2[PdfErrorCode2[\"CantAddInkStoke\"] = 22] = \"CantAddInkStoke\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentSize\"] = 23] = \"CantReadAttachmentSize\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentContent\"] = 24] = \"CantReadAttachmentContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantFocusAnnot\"] = 25] = \"CantFocusAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectText\"] = 26] = \"CantSelectText\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectOption\"] = 27] = \"CantSelectOption\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCheckField\"] = 28] = \"CantCheckField\";\n  return PdfErrorCode2;\n})(PdfErrorCode || {});\nvar PdfTaskHelper = class {\n  /**\n   * Create a task\n   * @returns new task\n   */\n  static create() {\n    return new Task();\n  }\n  /**\n   * Create a task that has been resolved with value\n   * @param result - resolved value\n   * @returns resolved task\n   */\n  static resolve(result) {\n    const task = new Task();\n    task.resolve(result);\n    return task;\n  }\n  /**\n   * Create a task that has been rejected with error\n   * @param reason - rejected error\n   * @returns rejected task\n   */\n  static reject(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n  /**\n   * Create a task that has been aborted with error\n   * @param reason - aborted error\n   * @returns aborted task\n   */\n  static abort(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n};\n\n// src/color.ts\nfunction pdfAlphaColorToWebAlphaColor(c) {\n  const clamp = (n) => Math.max(0, Math.min(255, n));\n  const toHex = (n) => clamp(n).toString(16).padStart(2, \"0\");\n  const color = `#${toHex(c.red)}${toHex(c.green)}${toHex(c.blue)}`;\n  const opacity = clamp(c.alpha) / 255;\n  return { color, opacity };\n}\nfunction webAlphaColorToPdfAlphaColor({ color, opacity }) {\n  if (/^#?[0-9a-f]{3}$/i.test(color)) {\n    color = color.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, \"#$1$1$2$2$3$3\").toLowerCase();\n  }\n  const [, r, g, b] = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color) ?? (() => {\n    throw new Error(`Invalid hex colour: \\u201C${color}\\u201D`);\n  })();\n  const clamp = (n, hi = 255) => Math.max(0, Math.min(hi, n));\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: clamp(Math.round(opacity * 255))\n  };\n}\n\n// src/date.ts\nfunction pdfDateToDate(pdf) {\n  if (!pdf?.startsWith(\"D:\") || pdf.length < 16) return;\n  const y = +pdf.slice(2, 6);\n  const mo = +pdf.slice(6, 8) - 1;\n  const d = +pdf.slice(8, 10);\n  const H = +pdf.slice(10, 12);\n  const M = +pdf.slice(12, 14);\n  const S = +pdf.slice(14, 16);\n  return new Date(Date.UTC(y, mo, d, H, M, S));\n}\nfunction dateToPdfDate(date = /* @__PURE__ */ new Date()) {\n  const z = (n, len = 2) => n.toString().padStart(len, \"0\");\n  const YYYY = date.getUTCFullYear();\n  const MM = z(date.getUTCMonth() + 1);\n  const DD = z(date.getUTCDate());\n  const HH = z(date.getUTCHours());\n  const mm = z(date.getUTCMinutes());\n  const SS = z(date.getUTCSeconds());\n  return `D:${YYYY}${MM}${DD}${HH}${mm}${SS}`;\n}\n\n// src/index.ts\nfunction ignore() {\n}\nexport {\n  AllLogger,\n  AppearanceMode,\n  ConsoleLogger,\n  LevelLogger,\n  LogLevel,\n  MatchFlag,\n  MixedBlendMode,\n  NoopLogger,\n  PDF_FORM_FIELD_FLAG,\n  PDF_FORM_FIELD_TYPE,\n  PdfActionType,\n  PdfAnnotationBorderStyle,\n  PdfAnnotationColorType,\n  PdfAnnotationFlagName,\n  PdfAnnotationFlags,\n  PdfAnnotationObjectStatus,\n  PdfAnnotationState,\n  PdfAnnotationStateModel,\n  PdfAnnotationSubtype,\n  PdfAnnotationSubtypeName,\n  PdfBlendMode,\n  PdfBomOrZwnbsp,\n  PdfEngineFeature,\n  PdfEngineOperation,\n  PdfErrorCode,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF,\n  PdfPageFlattenFlag,\n  PdfPageFlattenResult,\n  PdfPageObjectType,\n  PdfPermission,\n  PdfSegmentObjectType,\n  PdfSoftHyphenMarker,\n  PdfTaskHelper,\n  PdfUnwantedTextMarkers,\n  PdfUnwantedTextRegex,\n  PdfWordJoiner,\n  PdfZeroWidthSpace,\n  PdfZoomMode,\n  PerfLogger,\n  Rotation,\n  Task,\n  TaskAbortedError,\n  TaskRejectedError,\n  TaskStage,\n  blendModeLabel,\n  blendModeSelectOptions,\n  blendModeToCss,\n  boundingRect,\n  calculateAngle,\n  calculateDegree,\n  compareSearchTarget,\n  cssToBlendMode,\n  dateToPdfDate,\n  flagsToNames,\n  getBlendModeInfo,\n  ignore,\n  makeMatrix,\n  namesToFlags,\n  pdfAlphaColorToWebAlphaColor,\n  pdfDateToDate,\n  quadToRect,\n  rectToQuad,\n  reduceBlendModes,\n  restoreOffset,\n  restorePosition,\n  restoreRect,\n  rotatePosition,\n  rotateRect,\n  scalePosition,\n  scaleRect,\n  stripPdfUnwantedMarkers,\n  swap,\n  toIntPos,\n  toIntRect,\n  toIntSize,\n  transformPosition,\n  transformRect,\n  transformSize,\n  uiBlendModeDisplay,\n  unionFlags,\n  webAlphaColorToPdfAlphaColor\n};\n//# sourceMappingURL=index.js.map","import { PdfDocumentObject, PdfPageObject, Rotation } from '@embedpdf/models';\nimport { PluginRegistryConfig } from '../types/plugin';\n\nexport interface CoreState {\n  scale: number;\n  rotation: Rotation;\n  document: PdfDocumentObject | null;\n  pages: PdfPageObject[][];\n  loading: boolean;\n  error: string | null;\n}\n\nexport const initialCoreState: (config?: PluginRegistryConfig) => CoreState = (config) => ({\n  scale: config?.scale ?? 1,\n  rotation: config?.rotation ?? Rotation.Degree0,\n  document: null,\n  pages: [],\n  loading: false,\n  error: null,\n});\n","import { Reducer } from './types';\nimport { CoreState } from './initial-state';\nimport {\n  CoreAction,\n  LOAD_DOCUMENT,\n  SET_DOCUMENT,\n  SET_DOCUMENT_ERROR,\n  SET_PAGES,\n  SET_ROTATION,\n  SET_SCALE,\n} from './actions';\n\nexport const coreReducer: Reducer<CoreState, CoreAction> = (state, action): CoreState => {\n  switch (action.type) {\n    case LOAD_DOCUMENT:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n\n    case SET_DOCUMENT:\n      return {\n        ...state,\n        document: action.payload,\n        pages: action.payload.pages.map((page) => [page]),\n        loading: false,\n        error: null,\n      };\n\n    case SET_ROTATION:\n      return {\n        ...state,\n        rotation: action.payload,\n      };\n\n    case SET_PAGES:\n      return {\n        ...state,\n        pages: action.payload,\n      };\n\n    case SET_DOCUMENT_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n\n    case SET_SCALE:\n      return {\n        ...state,\n        scale: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { DependencyResolver } from '../utils/dependency-resolver';\nimport {\n  IPlugin,\n  PluginBatchRegistration,\n  PluginManifest,\n  PluginStatus,\n  PluginPackage,\n  PluginRegistryConfig,\n} from '../types/plugin';\nimport {\n  PluginRegistrationError,\n  PluginNotFoundError,\n  CircularDependencyError,\n  CapabilityNotFoundError,\n  PluginConfigurationError,\n} from '../types/errors';\nimport { ignore, PdfEngine, Rotation } from '@embedpdf/models';\nimport { Action, CoreState, Store, initialCoreState, Reducer } from '../store';\nimport { CoreAction } from '../store/actions';\nimport { coreReducer } from '../store/reducer';\n\n// Define a more flexible generic type for plugin registrations\ninterface PluginRegistration {\n  // Use existential types for the plugin package to allow accepting any plugin type\n  package: PluginPackage<any, any, any, any>;\n  config?: any;\n}\n\nexport class PluginRegistry {\n  private plugins: Map<string, IPlugin> = new Map();\n  private manifests: Map<string, PluginManifest> = new Map();\n  private capabilities: Map<string, string> = new Map(); // capability -> pluginId\n  private status: Map<string, PluginStatus> = new Map();\n  private resolver: DependencyResolver;\n  private configurations: Map<string, unknown> = new Map();\n  private engine: PdfEngine;\n  private engineInitialized = false;\n  private store: Store<CoreState, CoreAction>;\n  private initPromise: Promise<void> | null = null;\n\n  private pendingRegistrations: PluginRegistration[] = [];\n  private processingRegistrations: PluginRegistration[] = [];\n  private initialized = false;\n  private isInitializing = false;\n  private initialCoreState: CoreState;\n  private pluginsReadyPromise: Promise<void> | null = null;\n  private destroyed = false;\n\n  constructor(engine: PdfEngine, config?: PluginRegistryConfig) {\n    this.resolver = new DependencyResolver();\n    this.engine = engine;\n    this.initialCoreState = initialCoreState(config);\n    this.store = new Store<CoreState, CoreAction>(coreReducer, this.initialCoreState);\n  }\n\n  /**\n   * Ensure engine is initialized before proceeding\n   */\n  private async ensureEngineInitialized(): Promise<void> {\n    if (this.engineInitialized) {\n      return;\n    }\n\n    if (this.engine.initialize) {\n      const task = this.engine.initialize();\n      await task.toPromise();\n      this.engineInitialized = true;\n    } else {\n      this.engineInitialized = true;\n    }\n  }\n\n  /**\n   * Register a plugin without initializing it\n   */\n  registerPlugin<\n    TPlugin extends IPlugin<TConfig>,\n    TConfig = unknown,\n    TState = unknown,\n    TAction extends Action = Action,\n  >(\n    pluginPackage: PluginPackage<TPlugin, TConfig, TState, TAction>,\n    config?: Partial<TConfig>,\n  ): void {\n    if (this.initialized && !this.isInitializing) {\n      throw new PluginRegistrationError('Cannot register plugins after initialization');\n    }\n\n    this.validateManifest(pluginPackage.manifest);\n\n    // Use appropriate typing for store methods\n    this.store.addPluginReducer(\n      pluginPackage.manifest.id,\n      // We need one type assertion here since we can't fully reconcile TAction with Action\n      // due to TypeScript's type system limitations with generic variance\n      pluginPackage.reducer as Reducer<TState, Action>,\n      'function' === typeof pluginPackage.initialState\n        ? (pluginPackage.initialState as (coreState: CoreState, config: TConfig) => TState)(\n            this.initialCoreState,\n            {\n              ...pluginPackage.manifest.defaultConfig,\n              ...config,\n            },\n          )\n        : pluginPackage.initialState,\n    );\n\n    this.pendingRegistrations.push({\n      package: pluginPackage,\n      config,\n    });\n  }\n\n  /**\n   * Get the central store instance\n   */\n  getStore(): Store<CoreState, CoreAction> {\n    return this.store;\n  }\n\n  /**\n   * Get the engine instance\n   */\n  getEngine(): PdfEngine {\n    return this.engine;\n  }\n\n  /**\n   * Get a promise that resolves when all plugins are ready\n   */\n  public pluginsReady(): Promise<void> {\n    // Re-use the same promise every time it’s asked for\n    if (this.pluginsReadyPromise) {\n      return this.pluginsReadyPromise;\n    }\n\n    // Build the promise the *first* time it’s requested\n    this.pluginsReadyPromise = (async () => {\n      // 1. Wait until the registry itself has finished initialising\n      if (!this.initialized) {\n        await this.initialize();\n      }\n\n      // 2. Wait for every plugin’s ready() promise (if it has one)\n      const readyPromises = Array.from(this.plugins.values()).map((p) =>\n        typeof p.ready === 'function' ? p.ready() : Promise.resolve(),\n      );\n\n      await Promise.all(readyPromises); // resolves when the slowest is done\n    })();\n\n    return this.pluginsReadyPromise;\n  }\n\n  /**\n   * INITIALISE THE REGISTRY – runs once no-matter-how-many calls   *\n   */\n  async initialize(): Promise<void> {\n    if (this.destroyed) {\n      throw new PluginRegistrationError('Registry has been destroyed');\n    }\n\n    // If an initialisation is already in-flight (or finished)\n    // return the very same promise so callers can await it.\n    if (this.initPromise) {\n      return this.initPromise;\n    }\n\n    // Wrap your existing body in a single promise and cache it\n    this.initPromise = (async () => {\n      if (this.initialized) {\n        throw new PluginRegistrationError('Registry is already initialized');\n      }\n\n      this.isInitializing = true;\n\n      try {\n        /* ---------------- original body starts ------------------ */\n        await this.ensureEngineInitialized();\n        // Check if destroyed after engine initialization\n        if (this.destroyed) {\n          return;\n        }\n\n        while (this.pendingRegistrations.length > 0) {\n          // Check if destroyed before processing each batch\n          if (this.destroyed) {\n            return;\n          }\n          this.processingRegistrations = [...this.pendingRegistrations];\n          this.pendingRegistrations = [];\n\n          for (const reg of this.processingRegistrations) {\n            const dependsOn = new Set<string>();\n            const allDeps = [...reg.package.manifest.requires, ...reg.package.manifest.optional];\n            for (const cap of allDeps) {\n              const provider = this.processingRegistrations.find((r) =>\n                r.package.manifest.provides.includes(cap),\n              );\n              if (provider) dependsOn.add(provider.package.manifest.id);\n            }\n            this.resolver.addNode(reg.package.manifest.id, [...dependsOn]);\n          }\n\n          const loadOrder = this.resolver.resolveLoadOrder();\n          for (const id of loadOrder) {\n            const reg = this.processingRegistrations.find((r) => r.package.manifest.id === id)!;\n            await this.initializePlugin(reg.package.manifest, reg.package.create, reg.config);\n          }\n\n          this.processingRegistrations = [];\n          this.resolver = new DependencyResolver();\n        }\n\n        for (const plugin of this.plugins.values()) {\n          await plugin.postInitialize?.().catch((e) => {\n            console.error(`Error in postInitialize for plugin ${plugin.id}`, e);\n            this.status.set(plugin.id, 'error');\n          });\n        }\n\n        this.initialized = true;\n        /* ----------------- original body ends ------------------- */\n      } catch (err) {\n        if (err instanceof Error) {\n          throw new CircularDependencyError(\n            `Failed to resolve plugin dependencies: ${err.message}`,\n          );\n        }\n        throw err;\n      } finally {\n        this.isInitializing = false;\n      }\n    })();\n\n    return this.initPromise;\n  }\n\n  /**\n   * Initialize a single plugin with all necessary checks\n   */\n  private async initializePlugin<TConfig>(\n    manifest: PluginManifest<TConfig>,\n    packageCreator: (\n      registry: PluginRegistry,\n      engine: PdfEngine,\n      config?: TConfig,\n    ) => IPlugin<TConfig>,\n    config?: Partial<TConfig>,\n  ): Promise<void> {\n    const finalConfig = {\n      ...manifest.defaultConfig,\n      ...config,\n    };\n\n    this.validateConfig(manifest.id, finalConfig, manifest.defaultConfig);\n\n    // Create plugin instance during initialization\n    const plugin = packageCreator(this, this.engine, finalConfig);\n    this.validatePlugin(plugin);\n\n    // Verify all required capabilities are available\n    for (const capability of manifest.requires) {\n      if (!this.capabilities.has(capability)) {\n        throw new PluginRegistrationError(\n          `Missing required capability: ${capability} for plugin ${manifest.id}`,\n        );\n      }\n    }\n\n    // Optional capabilities can be null, so we don't throw errors for them\n    for (const capability of manifest.optional) {\n      if (this.capabilities.has(capability)) {\n        // Optional capability is available, but we don't require it\n        console.debug(`Optional capability ${capability} is available for plugin ${manifest.id}`);\n      }\n    }\n\n    console.log('initializePlugin', manifest.id, manifest.provides);\n\n    // Register provided capabilities\n    for (const capability of manifest.provides) {\n      if (this.capabilities.has(capability)) {\n        throw new PluginRegistrationError(\n          `Capability ${capability} is already provided by plugin ${this.capabilities.get(capability)}`,\n        );\n      }\n      this.capabilities.set(capability, manifest.id);\n    }\n\n    // Store plugin and manifest\n    this.plugins.set(manifest.id, plugin);\n    this.manifests.set(manifest.id, manifest);\n    this.status.set(manifest.id, 'registered');\n    this.configurations.set(manifest.id, finalConfig);\n\n    try {\n      if (plugin.initialize) {\n        await plugin.initialize(finalConfig);\n      }\n      this.status.set(manifest.id, 'active');\n    } catch (error) {\n      // Cleanup on initialization failure\n      this.plugins.delete(manifest.id);\n      this.manifests.delete(manifest.id);\n      console.log('initializePlugin failed', manifest.id, manifest.provides);\n      manifest.provides.forEach((cap) => this.capabilities.delete(cap));\n      throw error;\n    }\n  }\n\n  getPluginConfig<TConfig>(pluginId: string): TConfig {\n    const config = this.configurations.get(pluginId);\n    if (!config) {\n      throw new PluginNotFoundError(`Configuration for plugin ${pluginId} not found`);\n    }\n    return config as TConfig;\n  }\n\n  private validateConfig(pluginId: string, config: unknown, defaultConfig: unknown): void {\n    // Check all required fields exist\n    const requiredKeys = Object.keys(defaultConfig as object);\n    const missingKeys = requiredKeys.filter((key) => !(config as object).hasOwnProperty(key));\n\n    if (missingKeys.length > 0) {\n      throw new PluginConfigurationError(\n        `Missing required configuration keys for plugin ${pluginId}: ${missingKeys.join(', ')}`,\n      );\n    }\n\n    // You could add more validation here:\n    // - Type checking\n    // - Value range validation\n    // - Format validation\n    // etc.\n  }\n\n  async updatePluginConfig<TConfig>(pluginId: string, config: Partial<TConfig>): Promise<void> {\n    const plugin = this.getPlugin(pluginId);\n\n    if (!plugin) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} not found`);\n    }\n\n    const manifest = this.manifests.get(pluginId);\n    const currentConfig = this.configurations.get(pluginId);\n\n    if (!manifest || !currentConfig) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} not found`);\n    }\n\n    // Merge new config with current\n    const newConfig = {\n      ...currentConfig,\n      ...config,\n    };\n\n    // Validate new configuration\n    this.validateConfig(pluginId, newConfig, manifest.defaultConfig);\n\n    // Store new configuration\n    this.configurations.set(pluginId, newConfig);\n\n    // Reinitialize plugin if needed\n    if (plugin.initialize) {\n      await plugin.initialize(newConfig);\n    }\n  }\n\n  /**\n   * Register multiple plugins at once\n   */\n  registerPluginBatch(registrations: PluginBatchRegistration<IPlugin<any>, any, any, any>[]): void {\n    for (const reg of registrations) {\n      this.registerPlugin(reg.package, reg.config);\n    }\n  }\n\n  /**\n   * Unregister a plugin\n   */\n  async unregisterPlugin(pluginId: string): Promise<void> {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} is not registered`);\n    }\n\n    const manifest = this.manifests.get(pluginId);\n    if (!manifest) {\n      throw new PluginNotFoundError(`Manifest for plugin ${pluginId} not found`);\n    }\n\n    // Check if any other plugins depend on this one\n    for (const [otherId, otherManifest] of this.manifests.entries()) {\n      if (otherId === pluginId) continue;\n\n      const dependsOnThis = [...otherManifest.requires, ...otherManifest.optional].some((cap) =>\n        manifest.provides.includes(cap),\n      );\n\n      if (dependsOnThis) {\n        throw new PluginRegistrationError(\n          `Cannot unregister plugin ${pluginId}: plugin ${otherId} depends on it`,\n        );\n      }\n    }\n\n    // Cleanup plugin\n    try {\n      if (plugin.destroy) {\n        await plugin.destroy();\n      }\n\n      // Remove capabilities\n      for (const capability of manifest.provides) {\n        this.capabilities.delete(capability);\n      }\n\n      // Remove plugin and manifest\n      this.plugins.delete(pluginId);\n      this.manifests.delete(pluginId);\n      this.status.delete(pluginId);\n    } catch (error) {\n      if (error instanceof Error) {\n        throw new Error(`Failed to unregister plugin ${pluginId}: ${error.message}`);\n      }\n      throw error;\n    }\n  }\n\n  /**\n   * Get a plugin instance\n   * @param pluginId The ID of the plugin to get\n   * @returns The plugin instance or null if not found\n   */\n  getPlugin<T extends IPlugin>(pluginId: string): T | null {\n    const plugin = this.plugins.get(pluginId);\n    if (!plugin) {\n      return null;\n    }\n    return plugin as T;\n  }\n\n  /**\n   * Get a plugin that provides a specific capability\n   * @param capability The capability to get a provider for\n   * @returns The plugin providing the capability or null if not found\n   */\n  getCapabilityProvider(capability: string): IPlugin | null {\n    const pluginId = this.capabilities.get(capability);\n    if (!pluginId) {\n      return null;\n    }\n    return this.getPlugin(pluginId);\n  }\n\n  /**\n   * Check if a capability is available\n   */\n  hasCapability(capability: string): boolean {\n    return this.capabilities.has(capability);\n  }\n\n  /**\n   * Get all registered plugins\n   */\n  getAllPlugins(): IPlugin[] {\n    return Array.from(this.plugins.values());\n  }\n\n  /**\n   * Get plugin status\n   */\n  getPluginStatus(pluginId: string): PluginStatus {\n    const status = this.status.get(pluginId);\n    if (!status) {\n      throw new PluginNotFoundError(`Plugin ${pluginId} not found`);\n    }\n    return status;\n  }\n\n  /**\n   * Validate plugin object\n   */\n  private validatePlugin(plugin: IPlugin): void {\n    if (!plugin.id) {\n      throw new PluginRegistrationError('Plugin must have an id');\n    }\n  }\n\n  /**\n   * Validate plugin manifest\n   */\n  private validateManifest(manifest: PluginManifest): void {\n    if (!manifest.id) {\n      throw new PluginRegistrationError('Manifest must have an id');\n    }\n    if (!manifest.name) {\n      throw new PluginRegistrationError('Manifest must have a name');\n    }\n    if (!manifest.version) {\n      throw new PluginRegistrationError('Manifest must have a version');\n    }\n    if (!Array.isArray(manifest.provides)) {\n      throw new PluginRegistrationError('Manifest must have a provides array');\n    }\n    if (!Array.isArray(manifest.requires)) {\n      throw new PluginRegistrationError('Manifest must have a requires array');\n    }\n    if (!Array.isArray(manifest.optional)) {\n      throw new PluginRegistrationError('Manifest must have an optional array');\n    }\n  }\n\n  isDestroyed(): boolean {\n    return this.destroyed;\n  }\n\n  /**\n   * DESTROY EVERYTHING – waits for any ongoing initialise(), once  *\n   */\n  async destroy(): Promise<void> {\n    if (this.destroyed) throw new PluginRegistrationError('Registry has already been destroyed');\n    this.destroyed = true;\n\n    // If initialisation is still underway, wait (success OR failure)\n    try {\n      await this.initPromise;\n    } catch {\n      /* ignore – still need to clean up */\n    }\n\n    /* ------- original teardown, unchanged except the guard ------ */\n    for (const plugin of Array.from(this.plugins.values()).reverse()) {\n      await plugin.destroy?.();\n    }\n\n    this.store.destroy();\n\n    this.plugins.clear();\n    this.manifests.clear();\n    this.capabilities.clear();\n    this.status.clear();\n    this.pendingRegistrations.length = 0;\n    this.processingRegistrations.length = 0;\n  }\n}\n","/**\n * Restrict a numeric value to the inclusive range [min, max].\n *\n * @example\n *   clamp( 5, 0, 10)  // 5\n *   clamp(-3, 0, 10)  // 0\n *   clamp(17, 0, 10)  // 10\n */\nexport function clamp(value: number, min: number, max: number): number {\n  return value < min ? min : value > max ? max : value;\n}\n\n/**\n * Deeply compares two values (objects, arrays, primitives)\n * with the following rules:\n *  - Objects are compared ignoring property order.\n *  - Arrays are compared ignoring element order (multiset comparison).\n *  - Primitives are compared by strict equality.\n *  - null/undefined are treated as normal primitives.\n *\n * @param a First value\n * @param b Second value\n * @param visited Used internally to detect cycles\n */\nexport function arePropsEqual(a: any, b: any, visited?: Set<any>): boolean {\n  // Quick path for reference equality or same primitive\n  if (a === b) {\n    return true;\n  }\n\n  // Handle null/undefined mismatch\n  if (a == null || b == null) {\n    // If one is null/undefined and the other isn't, no match\n    return a === b;\n  }\n\n  // Check types\n  const aType = typeof a;\n  const bType = typeof b;\n  if (aType !== bType) return false;\n\n  // If they are both objects or arrays, handle recursively\n  if (aType === 'object') {\n    // Optionally handle cyclical references\n    if (!visited) visited = new Set();\n    const pairId = getPairId(a, b);\n    if (visited.has(pairId)) {\n      // Already compared these two objects => assume true to avoid infinite recursion\n      // or return false if you want to treat cycles as inequality\n      return true;\n    }\n    visited.add(pairId);\n\n    const aIsArray = Array.isArray(a);\n    const bIsArray = Array.isArray(b);\n    if (aIsArray && bIsArray) {\n      // Compare as arrays ignoring order\n      return arraysEqualUnordered(a, b, visited);\n    } else if (!aIsArray && !bIsArray) {\n      // Compare as plain objects (order of properties doesn't matter)\n      return objectsEqual(a, b, visited);\n    } else {\n      // One is array, the other is object => not equal\n      return false;\n    }\n  }\n\n  // If both are function, symbol, etc. - typically we might say false\n  // But you can decide your own logic for function or symbol equality\n  return false;\n}\n\nfunction getPairId(a: any, b: any) {\n  // Could do something more advanced. This is a cheap approach:\n  // e.g. use the memory reference or an object identity approach\n  return `${objectId(a)}__${objectId(b)}`;\n}\n\n/**\n * If you want stable object IDs, you'd need a WeakMap to store them.\n * This simplistic approach just calls toString on the object.\n */\nlet objectIdCounter = 0;\nconst objectIds = new WeakMap<object, number>();\n\nfunction objectId(obj: object): number {\n  if (!objectIds.has(obj)) {\n    objectIds.set(obj, ++objectIdCounter);\n  }\n  return objectIds.get(obj)!;\n}\n\nfunction arraysEqualUnordered(a: any[], b: any[], visited?: Set<any>): boolean {\n  if (a.length !== b.length) return false;\n\n  const used = new Array<boolean>(b.length).fill(false);\n\n  // For each element in a, find an unused matching element in b\n  outer: for (let i = 0; i < a.length; i++) {\n    const elemA = a[i];\n    for (let j = 0; j < b.length; j++) {\n      if (used[j]) continue; // already used that slot\n      if (arePropsEqual(elemA, b[j], visited)) {\n        used[j] = true;\n        continue outer; // found match for a[i], proceed\n      }\n    }\n    // If we never found a match\n    return false;\n  }\n\n  return true;\n}\n\nfunction objectsEqual(a: object, b: object, visited?: Set<any>): boolean {\n  // Get all prop keys\n  const aKeys = Object.keys(a).sort();\n  const bKeys = Object.keys(b).sort();\n  if (aKeys.length !== bKeys.length) return false;\n\n  // Compare each property name\n  for (let i = 0; i < aKeys.length; i++) {\n    if (aKeys[i] !== bKeys[i]) return false;\n  }\n\n  // Compare each property value\n  for (const key of aKeys) {\n    // @ts-ignore\n    const valA = a[key];\n    // @ts-ignore\n    const valB = b[key];\n    if (!arePropsEqual(valA, valB, visited)) {\n      return false;\n    }\n  }\n  return true;\n}\n","import { CoreState } from './initial-state';\nimport { transformSize, PdfPageObjectWithRotatedSize } from '@embedpdf/models';\n\nexport const getPagesWithRotatedSize = (state: CoreState): PdfPageObjectWithRotatedSize[][] => {\n  return state.pages.map((page) =>\n    page.map((p) => ({\n      ...p,\n      rotatedSize: transformSize(p.size, state.rotation, 1),\n    })),\n  );\n};\n","import { Action } from '../store';\nimport { IPlugin, PluginBatchRegistration, PluginPackage } from '../types/plugin';\n\n/**\n * Helper function to create a properly typed plugin registration\n */\nexport function createPluginRegistration<\n  T extends IPlugin<TConfig>,\n  TConfig,\n  TState,\n  TAction extends Action,\n>(\n  pluginPackage: PluginPackage<T, TConfig, TState, TAction>,\n  config?: Partial<TConfig>,\n): PluginBatchRegistration<T, TConfig, any, any> {\n  return {\n    package: pluginPackage,\n    config,\n  };\n}\n","import { IPlugin } from '../types/plugin';\nimport { PluginRegistry } from '../registry/plugin-registry';\nimport { Action, CoreAction, CoreState, PluginStore, Store, StoreState } from '../store';\n\nexport interface StateChangeHandler<TState> {\n  (state: TState): void;\n}\n\nexport abstract class BasePlugin<\n  TConfig = unknown,\n  TCapability = unknown,\n  TState = unknown,\n  TAction extends Action = Action,\n> implements IPlugin<TConfig>\n{\n  static readonly id: string;\n\n  protected pluginStore: PluginStore<TState, TAction>;\n  protected coreStore: Store<CoreState, CoreAction>;\n  // Track debounced actions\n  private debouncedActions: Record<string, number> = {};\n  private unsubscribeFromState: (() => void) | null = null;\n  private unsubscribeFromCoreStore: (() => void) | null = null;\n\n  private _capability?: Readonly<TCapability>;\n\n  private readyPromise: Promise<void>;\n  private readyResolve!: () => void;\n\n  constructor(\n    public readonly id: string,\n    protected registry: PluginRegistry,\n  ) {\n    if (id !== (this.constructor as typeof BasePlugin).id) {\n      throw new Error(\n        `Plugin ID mismatch: ${id} !== ${(this.constructor as typeof BasePlugin).id}`,\n      );\n    }\n    this.coreStore = this.registry.getStore();\n    this.pluginStore = this.coreStore.getPluginStore<TState, TAction>(this.id);\n    this.unsubscribeFromState = this.pluginStore.subscribeToState((action, newState, oldState) => {\n      this.onStoreUpdated(oldState, newState);\n    });\n    this.unsubscribeFromCoreStore = this.coreStore.subscribe((action, newState, oldState) => {\n      this.onCoreStoreUpdated(oldState, newState);\n    });\n\n    // Initialize ready state\n    this.readyPromise = new Promise((resolve) => {\n      this.readyResolve = resolve;\n    });\n    // By default, plugins are ready immediately\n    this.readyResolve();\n  }\n\n  /** Construct the public capability (called once & cached). */\n  protected abstract buildCapability(): TCapability;\n\n  public provides(): Readonly<TCapability> {\n    if (!this._capability) {\n      const cap = this.buildCapability();\n\n      this._capability = Object.freeze(cap);\n    }\n    return this._capability;\n  }\n\n  /**\n   * Initialize plugin with config\n   */\n  abstract initialize(config: TConfig): Promise<void>;\n\n  /**\n   *  Get a copy of the current state\n   */\n  protected get state(): Readonly<TState> {\n    return this.pluginStore.getState();\n  }\n\n  /**\n   *  Get a copy of the current core state\n   */\n  protected get coreState(): Readonly<StoreState<CoreState>> {\n    return this.coreStore.getState();\n  }\n\n  /**\n   * @deprecated  use `this.state` Get a copy of the current state\n   */\n  protected getState(): TState {\n    return this.pluginStore.getState();\n  }\n\n  /**\n   * @deprecated  use `this.coreState` Get a copy of the current core state\n   */\n  protected getCoreState(): StoreState<CoreState> {\n    return this.coreStore.getState();\n  }\n\n  /**\n   * Core Dispatch\n   */\n  protected dispatchCoreAction(action: CoreAction): StoreState<CoreState> {\n    return this.coreStore.dispatchToCore(action);\n  }\n\n  /**\n   * Dispatch an action to all plugins\n   */\n  protected dispatchToAllPlugins(action: TAction): StoreState<CoreState> {\n    return this.coreStore.dispatch(action);\n  }\n\n  /**\n   * Dispatch an action\n   */\n  protected dispatch(action: TAction): TState {\n    return this.pluginStore.dispatch(action);\n  }\n\n  /**\n   * Dispatch an action with debouncing to prevent rapid repeated calls\n   * @param action The action to dispatch\n   * @param debounceTime Time in ms to debounce (default: 100ms)\n   * @returns boolean indicating whether the action was dispatched or debounced\n   */\n  protected debouncedDispatch(action: TAction, debounceTime: number = 100): boolean {\n    const now = Date.now();\n    const lastActionTime = this.debouncedActions[action.type] || 0;\n\n    if (now - lastActionTime >= debounceTime) {\n      this.debouncedActions[action.type] = now;\n      this.dispatch(action);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Subscribe to state changes\n   */\n  protected subscribe(listener: (action: TAction, state: TState) => void): () => void {\n    return this.pluginStore.subscribeToState(listener);\n  }\n\n  /**\n   * Subscribe to core store changes\n   */\n  protected subscribeToCoreStore(\n    listener: (action: Action, state: StoreState<CoreState>) => void,\n  ): () => void {\n    return this.coreStore.subscribe(listener);\n  }\n\n  /**\n   * Called when the plugin store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  protected onStoreUpdated(oldState: TState, newState: TState): void {\n    // Default implementation does nothing - can be overridden by plugins\n  }\n\n  /**\n   * Called when the core store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  protected onCoreStoreUpdated(\n    oldState: StoreState<CoreState>,\n    newState: StoreState<CoreState>,\n  ): void {\n    // Default implementation does nothing - can be overridden by plugins\n  }\n\n  /**\n   * Cleanup method to be called when plugin is being destroyed\n   */\n  public destroy(): void {\n    if (this.unsubscribeFromState) {\n      this.unsubscribeFromState();\n      this.unsubscribeFromState = null;\n    }\n    if (this.unsubscribeFromCoreStore) {\n      this.unsubscribeFromCoreStore();\n      this.unsubscribeFromCoreStore = null;\n    }\n  }\n\n  /**\n   * Returns a promise that resolves when the plugin is ready\n   */\n  public ready(): Promise<void> {\n    return this.readyPromise;\n  }\n\n  /**\n   * Mark the plugin as ready\n   */\n  protected markReady(): void {\n    this.readyResolve();\n  }\n\n  /**\n   * Reset the ready state (useful for plugins that need to reinitialize)\n   */\n  protected resetReady(): void {\n    this.readyPromise = new Promise((resolve) => {\n      this.readyResolve = resolve;\n    });\n  }\n}\n","export type EventHandler<T> = (data: T) => void;\n\nexport interface BaseEventControlOptions {\n  wait: number;\n}\n\nexport interface DebounceOptions extends BaseEventControlOptions {\n  mode: 'debounce';\n}\n\nexport interface ThrottleOptions extends BaseEventControlOptions {\n  mode: 'throttle';\n  throttleMode?: 'leading-trailing' | 'trailing';\n}\n\nexport type EventControlOptions = DebounceOptions | ThrottleOptions;\n\nexport class EventControl<T> {\n  private timeoutId?: number;\n  private lastRun: number = 0;\n\n  constructor(\n    private handler: EventHandler<T>,\n    private options: EventControlOptions,\n  ) {}\n\n  handle = (data: T): void => {\n    if (this.options.mode === 'debounce') {\n      this.debounce(data);\n    } else {\n      this.throttle(data);\n    }\n  };\n\n  private debounce(data: T): void {\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n\n    this.timeoutId = window.setTimeout(() => {\n      this.handler(data);\n      this.timeoutId = undefined;\n    }, this.options.wait);\n  }\n\n  private throttle(data: T): void {\n    if (this.options.mode === 'debounce') return;\n\n    const now = Date.now();\n    const throttleMode = this.options.throttleMode || 'leading-trailing';\n\n    if (now - this.lastRun >= this.options.wait) {\n      if (throttleMode === 'leading-trailing') {\n        this.handler(data);\n      }\n      this.lastRun = now;\n    }\n\n    // Always schedule the trailing execution\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n\n    this.timeoutId = window.setTimeout(\n      () => {\n        this.handler(data);\n        this.lastRun = Date.now();\n        this.timeoutId = undefined;\n      },\n      this.options.wait - (now - this.lastRun),\n    );\n  }\n\n  destroy(): void {\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n}\n","import { EventControl, EventControlOptions } from './event-control';\nimport { arePropsEqual } from './math';\n\n/* ------------------------------------------------------------------ */\n/* basic types                                                        */\n/* ------------------------------------------------------------------ */\nexport type Listener<T = any> = (value: T) => void;\nexport type Unsubscribe = () => void;\n\n/* ------------------------------------------------------------------ */\n/* EventListener                                                      */\n/* ------------------------------------------------------------------ */\nexport type EventListener<T> =\n  | ((listener: Listener<T>) => Unsubscribe)\n  | ((listener: Listener<T>, options?: EventControlOptions) => Unsubscribe);\n\n/* ------------------------------------------------------------ */\n/* helpers for typing `.on()` with an optional second argument  */\n/* ------------------------------------------------------------ */\nexport type EventHook<T = any> = EventListener<T>;\n/* ------------------------------------------------------------------ */\n/* minimal “dumb” emitter (no value cache, no equality)               */\n/* ------------------------------------------------------------------ */\nexport interface Emitter<T = any> {\n  emit(value?: T): void;\n  on(listener: Listener<T>): Unsubscribe;\n  off(listener: Listener<T>): void;\n  clear(): void;\n}\n\nexport function createEmitter<T = any>(): Emitter<T> {\n  const listeners = new Set<Listener<T>>();\n\n  const on: EventHook<T> = (l: Listener<T>) => {\n    listeners.add(l);\n    return () => listeners.delete(l);\n  };\n\n  return {\n    emit: (v = undefined as T) => listeners.forEach((l) => l(v)),\n    on,\n    off: (l) => listeners.delete(l),\n    clear: () => listeners.clear(),\n  };\n}\n\n/* ------------------------------------------------------------ */\n/* public interface                                              */\n/* ------------------------------------------------------------ */\nexport interface BehaviorEmitter<T = any> extends Omit<Emitter<T>, 'on' | 'off'> {\n  readonly value?: T;\n  on: EventHook<T>;\n  off(listener: Listener<T>): void;\n  select<U>(selector: (v: T) => U, equality?: (a: U, b: U) => boolean): EventHook<U>;\n}\n\n/* ------------------------------------------------------------ */\n/* implementation                                               */\n/* ------------------------------------------------------------ */\nexport function createBehaviorEmitter<T = any>(\n  initial?: T,\n  equality: (a: T, b: T) => boolean = arePropsEqual,\n): BehaviorEmitter<T> {\n  const listeners = new Set<Listener<T>>();\n  const proxyMap = new Map<Listener<T>, { wrapped: Listener<T>; destroy: () => void }>();\n  let _value = initial; // cached value\n\n  /* -------------- helpers ----------------------------------- */\n  const notify = (v: T) => listeners.forEach((l) => l(v));\n\n  const baseOn: EventHook<T> = (listener: Listener<T>, options?: EventControlOptions) => {\n    /* wrap & remember if we have control options ------------------ */\n    let realListener = listener;\n    let destroy = () => {};\n\n    if (options) {\n      const ctl = new EventControl(listener, options);\n      realListener = ctl.handle as Listener<T>;\n      destroy = () => ctl.destroy();\n      proxyMap.set(listener, { wrapped: realListener, destroy });\n    }\n\n    /* immediate replay of last value ------------------------------ */\n    if (_value !== undefined) realListener(_value);\n\n    listeners.add(realListener);\n\n    return () => {\n      listeners.delete(realListener);\n      destroy();\n      proxyMap.delete(listener);\n    };\n  };\n\n  /* -------------- public object ------------------------------ */\n  return {\n    /* emitter behaviour ---------------------------------------- */\n    get value() {\n      return _value;\n    },\n\n    emit(v = undefined as T) {\n      if (_value === undefined || !equality(_value, v)) {\n        _value = v;\n        notify(v);\n      }\n    },\n\n    on: baseOn,\n    off(listener: Listener<T>) {\n      /* did we wrap this listener? */\n      const proxy = proxyMap.get(listener);\n      if (proxy) {\n        listeners.delete(proxy.wrapped);\n        proxy.destroy();\n        proxyMap.delete(listener);\n      } else {\n        listeners.delete(listener);\n      }\n    },\n\n    clear() {\n      listeners.clear();\n      proxyMap.forEach((p) => p.destroy());\n      proxyMap.clear();\n    },\n\n    /* derived hook --------------------------------------------- */\n    select<U>(selector: (v: T) => U, eq: (a: U, b: U) => boolean = arePropsEqual): EventHook<U> {\n      return (listener: Listener<U>, options?: EventControlOptions) => {\n        let prev: U | undefined;\n\n        /* replay */\n        if (_value !== undefined) {\n          const mapped = selector(_value);\n          prev = mapped;\n          listener(mapped);\n        }\n\n        /* subscribe to parent */\n        return baseOn(\n          (next) => {\n            const mapped = selector(next);\n            if (prev === undefined || !eq(prev, mapped)) {\n              prev = mapped;\n              listener(mapped);\n            }\n          },\n          options as EventControlOptions | undefined,\n        ); // pass control opts straight through\n      };\n    },\n  };\n}\n","/* ------------------------------------------------------------------ */\n/*  enumEntries – iterate over enum-keyed Records with strong typing  */\n/* ------------------------------------------------------------------ */\n\ntype EnumKey = string | number;\n\n/**\n * Iterate over a Record whose keys are enum members (numeric or string),\n * getting back a fully-typed `[key, value]` tuple array.\n *\n * Usage:\n *   for (const [subtype, defaults] of enumEntries(this.state.toolDefaults)) {\n *     // subtype is inferred as keyof ToolDefaultsBySubtype\n *   }\n */\nexport function enumEntries<E extends EnumKey, V>(record: Record<E, V>): Array<[E, V]> {\n  // Tell TS the values are V (not unknown) *before* we map.\n  return (Object.entries(record) as [string, V][]).map(([k, v]) => {\n    // Numeric enums come out of Object.entries as \"0\", \"1\", …  → convert.\n    const maybeNum = Number(k);\n    const typedKey: E =\n      Number.isFinite(maybeNum) && k.trim() !== '' // looks like a number?\n        ? (maybeNum as unknown as E) // numeric enum key\n        : (k as unknown as E); // string enum key\n\n    return [typedKey, v]; // v is already typed as V\n  });\n}\n","/**\n * Clockwise direction\n * @public\n */\nexport enum Rotation {\n  Degree0 = 0,\n  Degree90 = 1,\n  Degree180 = 2,\n  Degree270 = 3,\n}\n\n/** Clamp a Position to device-pixel integers (floor) */\nexport function toIntPos(p: Position): Position {\n  return { x: Math.floor(p.x), y: Math.floor(p.y) };\n}\n\n/** Clamp a Size so it never truncates right / bottom (ceil) */\nexport function toIntSize(s: Size): Size {\n  return { width: Math.ceil(s.width), height: Math.ceil(s.height) };\n}\n\n/** Apply both rules to a Rect */\nexport function toIntRect(r: Rect): Rect {\n  return {\n    origin: toIntPos(r.origin),\n    size: toIntSize(r.size),\n  };\n}\n\n/**\n * Calculate degree that match the rotation type\n * @param rotation - type of rotation\n * @returns rotated degree\n *\n * @public\n */\nexport function calculateDegree(rotation: Rotation) {\n  switch (rotation) {\n    case Rotation.Degree0:\n      return 0;\n    case Rotation.Degree90:\n      return 90;\n    case Rotation.Degree180:\n      return 180;\n    case Rotation.Degree270:\n      return 270;\n  }\n}\n\n/**\n * Calculate angle that match the rotation type\n * @param rotation - type of rotation\n * @returns rotated angle\n *\n * @public\n */\nexport function calculateAngle(rotation: Rotation) {\n  return (calculateDegree(rotation) * Math.PI) / 180;\n}\n\n/**\n * Represent the size of object\n *\n * @public\n */\nexport interface Size {\n  /**\n   * width of the object\n   */\n  width: number;\n\n  /**\n   * height of the object\n   */\n  height: number;\n}\n\n/**\n * Represents a rectangle defined by its left, top, right, and bottom edges\n *\n * @public\n */\nexport interface Box {\n  /**\n   * The x-coordinate of the left edge\n   */\n  left: number;\n\n  /**\n   * The y-coordinate of the top edge\n   */\n  top: number;\n\n  /**\n   * The x-coordinate of the right edge\n   */\n  right: number;\n\n  /**\n   * The y-coordinate of the bottom edge\n   */\n  bottom: number;\n}\n\n/**\n * Swap the width and height of the size object\n * @param size - the original size\n * @returns swapped size\n *\n * @public\n */\nexport function swap(size: Size): Size {\n  const { width, height } = size;\n\n  return {\n    width: height,\n    height: width,\n  };\n}\n\n/**\n * Transform size with specified rotation angle and scale factor\n * @param size - orignal size of rect\n * @param rotation - rotation angle\n * @param scaleFactor - - scale factor\n * @returns size that has been transformed\n *\n * @public\n */\nexport function transformSize(size: Size, rotation: Rotation, scaleFactor: number): Size {\n  size = rotation % 2 === 0 ? size : swap(size);\n\n  return {\n    width: size.width * scaleFactor,\n    height: size.height * scaleFactor,\n  };\n}\n\n/**\n * position of point\n *\n * @public\n */\nexport interface Position {\n  /**\n   * x coordinate\n   */\n  x: number;\n\n  /**\n   * y coordinate\n   */\n  y: number;\n}\n\n/**\n * Quadrilateral\n *\n * @public\n */\nexport interface Quad {\n  p1: Position;\n  p2: Position;\n  p3: Position;\n  p4: Position;\n}\n\n/**\n * Convert quadrilateral to rectangle\n * @param q - quadrilateral\n * @returns rectangle\n *\n * @public\n */\nexport function quadToRect(q: Quad): Rect {\n  const xs = [q.p1.x, q.p2.x, q.p3.x, q.p4.x];\n  const ys = [q.p1.y, q.p2.y, q.p3.y, q.p4.y];\n\n  return {\n    origin: { x: Math.min(...xs), y: Math.min(...ys) },\n    size: {\n      width: Math.max(...xs) - Math.min(...xs),\n      height: Math.max(...ys) - Math.min(...ys),\n    },\n  };\n}\n\n/**\n * Convert rectangle to quadrilateral\n * @param r - rectangle\n * @returns quadrilateral\n *\n * @public\n */\nexport function rectToQuad(r: Rect): Quad {\n  return {\n    p1: { x: r.origin.x, y: r.origin.y },\n    p2: { x: r.origin.x + r.size.width, y: r.origin.y },\n    p3: { x: r.origin.x + r.size.width, y: r.origin.y + r.size.height },\n    p4: { x: r.origin.x, y: r.origin.y + r.size.height },\n  };\n}\n\n/**\n * Rotate the container and calculate the new position for a point\n * in specified position\n * @param containerSize - size of the container\n * @param position - position of the point\n * @param rotation - rotated angle\n * @returns new position of the point\n *\n * @public\n */\nexport function rotatePosition(\n  containerSize: Size,\n  position: Position,\n  rotation: Rotation,\n): Position {\n  let x = position.x;\n  let y = position.y;\n\n  switch (rotation) {\n    case Rotation.Degree0:\n      x = position.x;\n      y = position.y;\n      break;\n    case Rotation.Degree90:\n      x = containerSize.height - position.y;\n      y = position.x;\n      break;\n    case Rotation.Degree180:\n      x = containerSize.width - position.x;\n      y = containerSize.height - position.y;\n      break;\n    case Rotation.Degree270:\n      x = position.y;\n      y = containerSize.width - position.x;\n      break;\n  }\n\n  return {\n    x,\n    y,\n  };\n}\n\n/**\n * Calculate the position of point by scaling the container\n * @param position - position of the point\n * @param scaleFactor - factor of scaling\n * @returns new position of point\n *\n * @public\n */\nexport function scalePosition(position: Position, scaleFactor: number): Position {\n  return {\n    x: position.x * scaleFactor,\n    y: position.y * scaleFactor,\n  };\n}\n\n/**\n * Calculate the position of the point by applying the specified transformation\n * @param containerSize - size of container\n * @param position - position of the point\n * @param rotation - rotated angle\n * @param scaleFactor - factor of scaling\n * @returns new position of point\n *\n * @public\n */\nexport function transformPosition(\n  containerSize: Size,\n  position: Position,\n  rotation: Rotation,\n  scaleFactor: number,\n): Position {\n  return scalePosition(rotatePosition(containerSize, position, rotation), scaleFactor);\n}\n\n/**\n * Restore the position in a transformed cotainer\n * @param containerSize - size of the container\n * @param position - position of the point\n * @param rotation - rotated angle\n * @param scaleFactor - factor of scaling\n * @returns the original position of the point\n *\n * @public\n */\nexport function restorePosition(\n  containerSize: Size,\n  position: Position,\n  rotation: Rotation,\n  scaleFactor: number,\n): Position {\n  return scalePosition(\n    rotatePosition(containerSize, position, (4 - rotation) % 4),\n    1 / scaleFactor,\n  );\n}\n\n/**\n * representation of rectangle\n *\n * @public\n */\nexport interface Rect {\n  /**\n   * origin of the rectangle\n   */\n  origin: Position;\n\n  /**\n   * size of the rectangle\n   */\n  size: Size;\n}\n\n/**\n * Calculate the rect after rotated the container\n * @param containerSize - size of container\n * @param rect - target rect\n * @param rotation - rotation angle\n * @returns rotated rect\n *\n * @public\n */\nexport function rotateRect(containerSize: Size, rect: Rect, rotation: Rotation): Rect {\n  let x = rect.origin.x;\n  let y = rect.origin.y;\n  let size = rect.size;\n\n  switch (rotation) {\n    case Rotation.Degree0:\n      break;\n    case Rotation.Degree90:\n      x = containerSize.height - rect.origin.y - rect.size.height;\n      y = rect.origin.x;\n      size = swap(rect.size);\n      break;\n    case Rotation.Degree180:\n      x = containerSize.width - rect.origin.x - rect.size.width;\n      y = containerSize.height - rect.origin.y - rect.size.height;\n      break;\n    case Rotation.Degree270:\n      x = rect.origin.y;\n      y = containerSize.width - rect.origin.x - rect.size.width;\n      size = swap(rect.size);\n      break;\n  }\n\n  return {\n    origin: {\n      x,\n      y,\n    },\n    size: {\n      width: size.width,\n      height: size.height,\n    },\n  };\n}\n\n/**\n * Scale the rectangle\n * @param rect - rectangle\n * @param scaleFactor - factor of scaling\n * @returns new rectangle\n *\n * @public\n */\nexport function scaleRect(rect: Rect, scaleFactor: number): Rect {\n  return {\n    origin: {\n      x: rect.origin.x * scaleFactor,\n      y: rect.origin.y * scaleFactor,\n    },\n    size: {\n      width: rect.size.width * scaleFactor,\n      height: rect.size.height * scaleFactor,\n    },\n  };\n}\n\n/**\n * Calculate new rectangle after transforming the container\n * @param containerSize - size of the container\n * @param rect - the target rectangle\n * @param rotation - rotated angle\n * @param scaleFactor - factor of scaling\n * @returns new rectangle after transformation\n *\n * @public\n */\nexport function transformRect(\n  containerSize: Size,\n  rect: Rect,\n  rotation: Rotation,\n  scaleFactor: number,\n): Rect {\n  return scaleRect(rotateRect(containerSize, rect, rotation), scaleFactor);\n}\n\n/**\n * Calculate new rectangle before transforming the container\n * @param containerSize - size of the container\n * @param rect - the target rectangle\n * @param rotation - rotated angle\n * @param scaleFactor - factor of scaling\n * @returns original rectangle before transformation\n *\n * @public\n */\nexport function restoreRect(\n  containerSize: Size,\n  rect: Rect,\n  rotation: Rotation,\n  scaleFactor: number,\n): Rect {\n  return scaleRect(rotateRect(containerSize, rect, (4 - rotation) % 4), 1 / scaleFactor);\n}\n\n/**\n * Calculate the original offset in a transformed container\n * @param offset - position of the point\n * @param rotation - rotated angle\n * @param scaleFactor - factor of scaling\n * @returns original position of the point\n *\n * @public\n */\nexport function restoreOffset(offset: Position, rotation: Rotation, scaleFactor: number): Position {\n  let offsetX = offset.x;\n  let offsetY = offset.y;\n  switch (rotation) {\n    case Rotation.Degree0:\n      offsetX = offset.x / scaleFactor;\n      offsetY = offset.y / scaleFactor;\n      break;\n    case Rotation.Degree90:\n      offsetX = offset.y / scaleFactor;\n      offsetY = -offset.x / scaleFactor;\n      break;\n    case Rotation.Degree180:\n      offsetX = -offset.x / scaleFactor;\n      offsetY = -offset.y / scaleFactor;\n      break;\n    case Rotation.Degree270:\n      offsetX = -offset.y / scaleFactor;\n      offsetY = offset.x / scaleFactor;\n      break;\n  }\n\n  return {\n    x: offsetX,\n    y: offsetY,\n  };\n}\n\n/**\n * Return the smallest rectangle that encloses *all* `rects`.\n * If the array is empty, returns `null`.\n *\n * @param rects - array of rectangles\n * @returns smallest rectangle that encloses all the rectangles\n *\n * @public\n */\nexport function boundingRect(rects: Rect[]): Rect | null {\n  if (rects.length === 0) return null;\n\n  let minX = rects[0].origin.x,\n    minY = rects[0].origin.y,\n    maxX = rects[0].origin.x + rects[0].size.width,\n    maxY = rects[0].origin.y + rects[0].size.height;\n\n  for (const r of rects) {\n    minX = Math.min(minX, r.origin.x);\n    minY = Math.min(minY, r.origin.y);\n    maxX = Math.max(maxX, r.origin.x + r.size.width);\n    maxY = Math.max(maxY, r.origin.y + r.size.height);\n  }\n\n  return {\n    origin: {\n      x: minX,\n      y: minY,\n    },\n    size: {\n      width: maxX - minX,\n      height: maxY - minY,\n    },\n  };\n}\n\nexport interface Matrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\n/**\n * Build a CTM that maps *PDF-space* inside the annotation\n * → *device-space* inside the bitmap, honouring\n * zoom (scaleFactor × dpr) **and** page-rotation.\n */\n/** build the CTM for any page-rotation */\nexport const makeMatrix = (rectangle: Rect, rotation: Rotation, scaleFactor: number): Matrix => {\n  const { width, height } = rectangle.size;\n\n  switch (rotation) {\n    case Rotation.Degree0: // normal\n      return {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: -scaleFactor,\n        e: 0,\n        f: height * scaleFactor,\n      };\n\n    case Rotation.Degree90: // +90° CW\n      //  matrix =   [ 0  s ]   after flip-Y → no extra translation needed\n      //              [ s  0 ]\n      return {\n        a: 0,\n        b: scaleFactor,\n        c: scaleFactor,\n        d: 0,\n        e: 0,\n        f: 0,\n      };\n\n    case Rotation.Degree180: // +180°\n      return {\n        a: -scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: width * scaleFactor,\n        f: 0,\n      };\n\n    case Rotation.Degree270: // +270° CW  (= 90° CCW)\n      //  flips the other way, so we nudge it back inside the bitmap\n      return {\n        a: 0,\n        b: -scaleFactor,\n        c: -scaleFactor,\n        d: 0,\n        e: height * scaleFactor,\n        f: width * scaleFactor,\n      };\n  }\n};\n","/**\n * logger for logging\n *\n * @public\n */\nexport interface Logger {\n  /**\n   * Log debug message\n   * @param source - source of log\n   * @param category - category of log\n   * @param args - parameters of log\n   * @returns\n   *\n   * @public\n   */\n  debug: (source: string, category: string, ...args: any) => void;\n\n  /**\n   * Log infor message\n   * @param source - source of log\n   * @param category - category of log\n   * @param args - parameters of log\n   * @returns\n   *\n   * @public\n   */\n  info: (source: string, category: string, ...args: any) => void;\n\n  /**\n   * Log warning message\n   * @param source - source of log\n   * @param category - category of log\n   * @param args - parameters of log\n   * @returns\n   *\n   * @public\n   */\n  warn: (source: string, category: string, ...args: any) => void;\n  /**\n   * Log error message\n   * @param source - source of log\n   * @param category - category of log\n   * @param args - parameters of log\n   * @returns\n   *\n   * @public\n   */\n  error: (source: string, category: string, ...args: any) => void;\n\n  /**\n   * Log performance log\n   * @param source - source of log\n   * @param category - category of log\n   * @param event - event of log\n   * @param phase - event phase of log\n   * @param args - parameters of log\n   * @returns\n   *\n   * @public\n   */\n  perf: (\n    source: string,\n    category: string,\n    event: string,\n    phase: 'Begin' | 'End',\n    ...args: any\n  ) => void;\n}\n\n/**\n * Logger that log nothing, it will ignore all the logs\n *\n * @public\n */\nexport class NoopLogger implements Logger {\n  /** {@inheritDoc Logger.debug} */\n  debug() {}\n  /** {@inheritDoc Logger.info} */\n  info() {}\n  /** {@inheritDoc Logger.warn} */\n  warn() {}\n  /** {@inheritDoc Logger.error} */\n  error() {}\n  /** {@inheritDoc Logger.perf} */\n  perf() {}\n}\n\n/**\n * Logger that use console as the output\n *\n * @public\n */\nexport class ConsoleLogger implements Logger {\n  /** {@inheritDoc Logger.debug} */\n  debug(source: string, category: string, ...args: any) {\n    console.debug(`${source}.${category}`, ...args);\n  }\n\n  /** {@inheritDoc Logger.info} */\n  info(source: string, category: string, ...args: any) {\n    console.info(`${source}.${category}`, ...args);\n  }\n\n  /** {@inheritDoc Logger.warn} */\n  warn(source: string, category: string, ...args: any) {\n    console.warn(`${source}.${category}`, ...args);\n  }\n\n  /** {@inheritDoc Logger.error} */\n  error(source: string, category: string, ...args: any) {\n    console.error(`${source}.${category}`, ...args);\n  }\n\n  /** {@inheritDoc Logger.perf} */\n  perf(source: string, category: string, event: string, phase: 'Begin' | 'End', ...args: any) {\n    console.info(`${source}.${category}.${event}.${phase}`, ...args);\n  }\n}\n\n/**\n * Level of log\n *\n * @public\n */\nexport enum LogLevel {\n  Debug = 0,\n  Info,\n  Warn,\n  Error,\n}\n\n/**\n * Logger that support filtering by log level\n *\n * @public\n */\nexport class LevelLogger implements Logger {\n  /**\n   * create new LevelLogger\n   * @param logger - the original logger\n   * @param level - log level that used for filtering, all logs lower than this level will be filtered out\n   */\n  constructor(\n    private logger: Logger,\n    private level: LogLevel,\n  ) {}\n\n  /** {@inheritDoc Logger.debug} */\n  debug(source: string, category: string, ...args: any) {\n    if (this.level <= LogLevel.Debug) {\n      this.logger.debug(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.info} */\n  info(source: string, category: string, ...args: any) {\n    if (this.level <= LogLevel.Info) {\n      this.logger.info(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.warn} */\n  warn(source: string, category: string, ...args: any) {\n    if (this.level <= LogLevel.Warn) {\n      this.logger.warn(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.error} */\n  error(source: string, category: string, ...args: any) {\n    if (this.level <= LogLevel.Error) {\n      this.logger.error(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.perf} */\n  perf(source: string, category: string, event: string, phase: 'Begin' | 'End', ...args: any) {\n    this.logger.perf(source, category, event, phase, ...args);\n  }\n}\n\n/**\n * Logger for performance tracking\n *\n * @public\n */\nexport class PerfLogger implements Logger {\n  /**\n   * create new PerfLogger\n   */\n  constructor() {}\n\n  /** {@inheritDoc Logger.debug} */\n  debug(source: string, category: string, ...args: any) {}\n\n  /** {@inheritDoc Logger.info} */\n  info(source: string, category: string, ...args: any) {}\n\n  /** {@inheritDoc Logger.warn} */\n  warn(source: string, category: string, ...args: any) {}\n\n  /** {@inheritDoc Logger.error} */\n  error(source: string, category: string, ...args: any) {}\n\n  /** {@inheritDoc Logger.perf} */\n  perf(\n    source: string,\n    category: string,\n    event: string,\n    phase: 'Begin' | 'End',\n    identifier: string,\n    ...args: any\n  ) {\n    switch (phase) {\n      case 'Begin':\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args,\n        });\n        break;\n      case 'End':\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args,\n        });\n        window.performance.measure(\n          `${source}.${category}.${event}.Measure.${identifier}`,\n          `${source}.${category}.${event}.Begin.${identifier}`,\n          `${source}.${category}.${event}.End.${identifier}`,\n        );\n        break;\n    }\n  }\n}\n\n/**\n * Logger that will track and call child loggers\n *\n * @public\n */\nexport class AllLogger implements Logger {\n  /**\n   * create new PerfLogger\n   */\n  constructor(private loggers: Logger[]) {}\n\n  /** {@inheritDoc Logger.debug} */\n  debug(source: string, category: string, ...args: any) {\n    for (const logger of this.loggers) {\n      logger.debug(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.info} */\n  info(source: string, category: string, ...args: any) {\n    for (const logger of this.loggers) {\n      logger.info(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.warn} */\n  warn(source: string, category: string, ...args: any) {\n    for (const logger of this.loggers) {\n      logger.warn(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.error} */\n  error(source: string, category: string, ...args: any) {\n    for (const logger of this.loggers) {\n      logger.error(source, category, ...args);\n    }\n  }\n\n  /** {@inheritDoc Logger.perf} */\n  perf(source: string, category: string, event: string, phase: 'Begin' | 'End', ...args: any) {\n    for (const logger of this.loggers) {\n      logger.perf(source, category, event, phase, ...args);\n    }\n  }\n}\n","/**\n * Stage of task\n *\n * @public\n */\nexport enum TaskStage {\n  /**\n   * Task is pending, means it just start executing\n   */\n  Pending = 0,\n  /**\n   * Task is succeed\n   */\n  Resolved = 1,\n  /**\n   * Task is failed\n   */\n  Rejected = 2,\n  /**\n   * Task is aborted\n   */\n  Aborted = 3,\n}\n\nexport interface TaskError<D> {\n  /**\n   * task error type\n   */\n  type: 'reject' | 'abort';\n  /**\n   * task error\n   */\n  reason: D;\n}\n\n/**\n * callback that will be called when task is resolved\n *\n * @public\n */\nexport type ResolvedCallback<R> = (r: R) => void;\n\n/**\n * callback that will be called when task is rejected\n *\n * @public\n */\nexport type RejectedCallback<D> = (e: TaskError<D>) => void;\n\n/**\n * Task state in different stage\n *\n * @public\n */\nexport type TaskState<R, D> =\n  | {\n      stage: TaskStage.Pending;\n    }\n  | {\n      stage: TaskStage.Resolved;\n      result: R;\n    }\n  | {\n      stage: TaskStage.Rejected;\n      reason: D;\n    }\n  | {\n      stage: TaskStage.Aborted;\n      reason: D;\n    };\n\n/**\n * Result type for allSettled\n *\n * @public\n */\nexport type TaskSettledResult<R, D> =\n  | { status: 'resolved'; value: R }\n  | { status: 'rejected'; reason: D }\n  | { status: 'aborted'; reason: D };\n\nexport class TaskAbortedError<D> extends Error {\n  constructor(reason: D) {\n    super(`Task aborted: ${JSON.stringify(reason)}`);\n    this.name = 'TaskAbortedError';\n  }\n}\n\nexport class TaskRejectedError<D> extends Error {\n  constructor(reason: D) {\n    super(`Task rejected: ${JSON.stringify(reason)}`);\n    this.name = 'TaskRejectedError';\n  }\n}\n\n/**\n * Base class of task\n *\n * @public\n */\nexport class Task<R, D> {\n  state: TaskState<R, D> = {\n    stage: TaskStage.Pending,\n  };\n  /**\n   * callbacks that will be executed when task is resolved\n   */\n  resolvedCallbacks: ResolvedCallback<R>[] = [];\n  /**\n   * callbacks that will be executed when task is rejected\n   */\n  rejectedCallbacks: RejectedCallback<D>[] = [];\n\n  /**\n   * Promise that will be resolved when task is settled\n   */\n  private _promise: Promise<R> | null = null;\n\n  /**\n   * Convert task to promise\n   * @returns promise that will be resolved when task is settled\n   */\n  toPromise(): Promise<R> {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this.wait(\n          (result) => resolve(result),\n          (error) => {\n            if (error.type === 'abort') {\n              reject(new TaskAbortedError(error.reason));\n            } else {\n              reject(new TaskRejectedError(error.reason));\n            }\n          },\n        );\n      });\n    }\n    return this._promise;\n  }\n\n  /**\n   * wait for task to be settled\n   * @param resolvedCallback - callback for resolved value\n   * @param rejectedCallback - callback for rejected value\n   */\n  wait(resolvedCallback: ResolvedCallback<R>, rejectedCallback: RejectedCallback<D>) {\n    switch (this.state.stage) {\n      case TaskStage.Pending:\n        this.resolvedCallbacks.push(resolvedCallback);\n        this.rejectedCallbacks.push(rejectedCallback);\n        break;\n      case TaskStage.Resolved:\n        resolvedCallback(this.state.result);\n        break;\n      case TaskStage.Rejected:\n        rejectedCallback({\n          type: 'reject',\n          reason: this.state.reason,\n        });\n        break;\n      case TaskStage.Aborted:\n        rejectedCallback({\n          type: 'abort',\n          reason: this.state.reason,\n        });\n        break;\n    }\n  }\n\n  /**\n   * resolve task with specific result\n   * @param result - result value\n   */\n  resolve(result: R) {\n    if (this.state.stage === TaskStage.Pending) {\n      this.state = {\n        stage: TaskStage.Resolved,\n        result,\n      };\n      for (const resolvedCallback of this.resolvedCallbacks) {\n        try {\n          resolvedCallback(result);\n        } catch (e) {\n          /* ignore */\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n\n  /**\n   * reject task with specific reason\n   * @param reason - abort reason\n   *\n   */\n  reject(reason: D) {\n    if (this.state.stage === TaskStage.Pending) {\n      this.state = {\n        stage: TaskStage.Rejected,\n        reason,\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: 'reject',\n            reason,\n          });\n        } catch (e) {\n          /*ignore */\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n\n  /**\n   * abort task with specific reason\n   * @param reason - abort reason\n   */\n  abort(reason: D) {\n    if (this.state.stage === TaskStage.Pending) {\n      this.state = {\n        stage: TaskStage.Aborted,\n        reason,\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: 'abort',\n            reason,\n          });\n        } catch (e) {\n          /* ignore */\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n\n  /**\n   * fail task with a TaskError from another task\n   * This is a convenience method for error propagation between tasks\n   * @param error - TaskError from another task\n   */\n  fail(error: TaskError<D>) {\n    if (error.type === 'abort') {\n      this.abort(error.reason);\n    } else {\n      this.reject(error.reason);\n    }\n  }\n\n  /**\n   * Static method to wait for all tasks to resolve\n   * Returns a new task that resolves with an array of all results\n   * Rejects immediately if any task fails\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static all<R extends readonly Task<any, any>[]>(\n    tasks: R,\n  ): Task<{ [K in keyof R]: R[K] extends Task<infer U, any> ? U : never }, any> {\n    type ResultType = { [K in keyof R]: R[K] extends Task<infer U, any> ? U : never };\n\n    const combinedTask = new Task<ResultType, any>();\n\n    if (tasks.length === 0) {\n      combinedTask.resolve([] as any);\n      return combinedTask;\n    }\n\n    const results: any[] = new Array(tasks.length);\n    let resolvedCount = 0;\n    let isSettled = false;\n\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n\n          results[index] = result;\n          resolvedCount++;\n\n          if (resolvedCount === tasks.length) {\n            isSettled = true;\n            combinedTask.resolve(results as ResultType);\n          }\n        },\n        (error) => {\n          if (isSettled) return;\n\n          isSettled = true;\n          if (error.type === 'abort') {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        },\n      );\n    });\n\n    return combinedTask;\n  }\n\n  /**\n   * Static method to wait for all tasks to settle (resolve, reject, or abort)\n   * Always resolves with an array of settlement results\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks settle\n   * @public\n   */\n  static allSettled<R extends readonly Task<any, any>[]>(\n    tasks: R,\n  ): Task<\n    { [K in keyof R]: R[K] extends Task<infer U, infer E> ? TaskSettledResult<U, E> : never },\n    never\n  > {\n    type ResultType = {\n      [K in keyof R]: R[K] extends Task<infer U, infer E> ? TaskSettledResult<U, E> : never;\n    };\n\n    const combinedTask = new Task<ResultType, never>();\n\n    if (tasks.length === 0) {\n      combinedTask.resolve([] as any);\n      return combinedTask;\n    }\n\n    const results: any[] = new Array(tasks.length);\n    let settledCount = 0;\n\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          results[index] = { status: 'resolved', value: result };\n          settledCount++;\n\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results as ResultType);\n          }\n        },\n        (error) => {\n          results[index] = {\n            status: error.type === 'abort' ? 'aborted' : 'rejected',\n            reason: error.reason,\n          };\n          settledCount++;\n\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results as ResultType);\n          }\n        },\n      );\n    });\n\n    return combinedTask;\n  }\n\n  /**\n   * Static method that resolves/rejects with the first task that settles\n   *\n   * @param tasks - array of tasks to race\n   * @returns new task that settles with the first input task that settles\n   * @public\n   */\n  static race<R extends readonly Task<any, any>[]>(\n    tasks: R,\n  ): Task<\n    R[number] extends Task<infer U, any> ? U : never,\n    R[number] extends Task<any, infer E> ? E : never\n  > {\n    type ResultType = R[number] extends Task<infer U, any> ? U : never;\n    type ErrorType = R[number] extends Task<any, infer E> ? E : never;\n\n    const combinedTask = new Task<ResultType, ErrorType>();\n\n    if (tasks.length === 0) {\n      combinedTask.reject('No tasks provided' as ErrorType);\n      return combinedTask;\n    }\n\n    let isSettled = false;\n\n    tasks.forEach((task) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          isSettled = true;\n          combinedTask.resolve(result);\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === 'abort') {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        },\n      );\n    });\n\n    return combinedTask;\n  }\n\n  /**\n   * Utility to track progress of multiple tasks\n   *\n   * @param tasks - array of tasks to track\n   * @param onProgress - callback called when any task completes\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static withProgress<R extends readonly Task<any, any>[]>(\n    tasks: R,\n    onProgress?: (completed: number, total: number) => void,\n  ): Task<{ [K in keyof R]: R[K] extends Task<infer U, any> ? U : never }, any> {\n    const combinedTask = Task.all(tasks);\n\n    if (onProgress) {\n      let completedCount = 0;\n      tasks.forEach((task) => {\n        task.wait(\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n        );\n      });\n    }\n\n    return combinedTask;\n  }\n}\n\n/**\n * Type that represent the result of executing task\n */\nexport type TaskReturn<T extends Task<any, any>> =\n  T extends Task<infer R, infer E>\n    ? { type: 'result'; value: R } | { type: 'error'; value: TaskError<E> }\n    : never;\n","import { WebAlphaColor } from './color';\nimport { Size, Rect, Position, Rotation, Quad } from './geometry';\nimport { Task, TaskError } from './task';\n\n/**\n * Representation of pdf page\n *\n * @public\n */\nexport interface PdfPageObject {\n  /**\n   * Index of this page, starts from 0\n   */\n  index: number;\n\n  /**\n   * Orignal size of this page\n   */\n  size: Size;\n}\n\n/**\n * Representation of pdf page with rotated size\n *\n * @public\n */\nexport interface PdfPageObjectWithRotatedSize extends PdfPageObject {\n  /**\n   * Rotated size of this page\n   */\n  rotatedSize: Size;\n}\n\n/**\n * Representation of pdf document\n *\n * @public\n */\nexport interface PdfDocumentObject {\n  /**\n   * Identity of document\n   */\n  id: string;\n\n  /**\n   * Count of pages in this document\n   */\n  pageCount: number;\n\n  /**\n   * Pages in this document\n   */\n  pages: PdfPageObject[];\n}\n\n/**\n * metadata of pdf document\n *\n * @public\n */\nexport interface PdfMetadataObject {\n  /**\n   * title of the document\n   */\n  title: string;\n  /**\n   * author of the document\n   */\n  author: string;\n  /**\n   * subject of the document\n   */\n  subject: string;\n  /**\n   * keywords of the document\n   */\n  keywords: string;\n  /**\n   * producer of the document\n   */\n  producer: string;\n  /**\n   * creator of the document\n   */\n  creator: string;\n  /**\n   * creation date of the document\n   */\n  creationDate: string;\n  /**\n   * modification date of the document\n   */\n  modificationDate: string;\n}\n\n/**\n * Unicode **soft-hyphen** marker (`U+00AD`).\n * Often embedded by PDF generators as discretionary hyphens.\n *\n * @public\n */\nexport const PdfSoftHyphenMarker = '\\u00AD';\n\n/**\n * Unicode **zero-width space** (`U+200B`).\n *\n * @public\n */\nexport const PdfZeroWidthSpace = '\\u200B';\n\n/**\n * Unicode **word-joiner** (`U+2060`) – zero-width no-break.\n *\n * @public\n */\nexport const PdfWordJoiner = '\\u2060';\n\n/**\n * Unicode **byte-order mark / zero-width&nbsp;no-break space** (`U+FEFF`).\n *\n * @public\n */\nexport const PdfBomOrZwnbsp = '\\uFEFF';\n\n/**\n * Unicode non-character `U+FFFE`.\n *\n * @public\n */\nexport const PdfNonCharacterFFFE = '\\uFFFE';\n\n/**\n * Unicode non-character `U+FFFF`.\n *\n * @public\n */\nexport const PdfNonCharacterFFFF = '\\uFFFF';\n\n/**\n * **Frozen list** of all unwanted markers in canonical order.\n *\n * @public\n */\nexport const PdfUnwantedTextMarkers = Object.freeze([\n  PdfSoftHyphenMarker,\n  PdfZeroWidthSpace,\n  PdfWordJoiner,\n  PdfBomOrZwnbsp,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF,\n] as const);\n\n/**\n * Compiled regular expression that matches any unwanted marker.\n *\n * @public\n */\nexport const PdfUnwantedTextRegex = new RegExp(`[${PdfUnwantedTextMarkers.join('')}]`, 'g');\n\n/**\n * Remove all {@link PdfUnwantedTextMarkers | unwanted markers} from *text*.\n *\n * @param text - raw text extracted from PDF\n * @returns cleaned text\n *\n * @public\n */\nexport function stripPdfUnwantedMarkers(text: string): string {\n  return text.replace(PdfUnwantedTextRegex, '');\n}\n\n/**\n * zoom mode\n *\n * @public\n */\nexport enum PdfZoomMode {\n  Unknown = 0,\n  /**\n   * Zoom level with specified offset.\n   */\n  XYZ = 1,\n  /**\n   * Fit both the width and height of the page (whichever smaller).\n   */\n  FitPage = 2,\n  /**\n   * Fit the page width.\n   */\n  FitHorizontal = 3,\n  /**\n   * Fit the page height.\n   */\n  FitVertical = 4,\n  /**\n   * Fit a specific rectangle area within the window.\n   */\n  FitRectangle = 5,\n}\n\n/**\n * Blend mode\n *\n * @public\n */\nexport enum PdfBlendMode {\n  Normal = 0,\n  Multiply = 1,\n  Screen = 2,\n  Overlay = 3,\n  Darken = 4,\n  Lighten = 5,\n  ColorDodge = 6,\n  ColorBurn = 7,\n  HardLight = 8,\n  SoftLight = 9,\n  Difference = 10,\n  Exclusion = 11,\n  Hue = 12,\n  Saturation = 13,\n  Color = 14,\n  Luminosity = 15,\n}\n\n/** Extra UI sentinel for “multiple different values selected”. */\nexport const MixedBlendMode = Symbol('mixed');\nexport type UiBlendModeValue = PdfBlendMode | typeof MixedBlendMode;\n\ninterface BlendModeInfo {\n  /** Pdf enum value */\n  id: PdfBlendMode;\n  /** Human label for UI */\n  label: string;\n  /** CSS mix-blend-mode token */\n  css: string;\n}\n\n/** Canonical ordered descriptor list (matches enum numeric order). */\nconst BLEND_MODE_INFOS: readonly BlendModeInfo[] = Object.freeze([\n  { id: PdfBlendMode.Normal, label: 'Normal', css: 'normal' },\n  { id: PdfBlendMode.Multiply, label: 'Multiply', css: 'multiply' },\n  { id: PdfBlendMode.Screen, label: 'Screen', css: 'screen' },\n  { id: PdfBlendMode.Overlay, label: 'Overlay', css: 'overlay' },\n  { id: PdfBlendMode.Darken, label: 'Darken', css: 'darken' },\n  { id: PdfBlendMode.Lighten, label: 'Lighten', css: 'lighten' },\n  { id: PdfBlendMode.ColorDodge, label: 'Color Dodge', css: 'color-dodge' },\n  { id: PdfBlendMode.ColorBurn, label: 'Color Burn', css: 'color-burn' },\n  { id: PdfBlendMode.HardLight, label: 'Hard Light', css: 'hard-light' },\n  { id: PdfBlendMode.SoftLight, label: 'Soft Light', css: 'soft-light' },\n  { id: PdfBlendMode.Difference, label: 'Difference', css: 'difference' },\n  { id: PdfBlendMode.Exclusion, label: 'Exclusion', css: 'exclusion' },\n  { id: PdfBlendMode.Hue, label: 'Hue', css: 'hue' },\n  { id: PdfBlendMode.Saturation, label: 'Saturation', css: 'saturation' },\n  { id: PdfBlendMode.Color, label: 'Color', css: 'color' },\n  { id: PdfBlendMode.Luminosity, label: 'Luminosity', css: 'luminosity' },\n]);\n\n/* Build O(1) maps once */\nconst enumToInfo: Record<PdfBlendMode, BlendModeInfo> = BLEND_MODE_INFOS.reduce(\n  (m, info) => {\n    m[info.id] = info;\n    return m;\n  },\n  {} as Record<PdfBlendMode, BlendModeInfo>,\n);\n\nconst cssToEnum = BLEND_MODE_INFOS.reduce<Record<string, PdfBlendMode>>((m, info) => {\n  m[info.css] = info.id;\n  return m;\n}, {});\n\n/** Get descriptor (falls back to Normal if unknown number sneaks in).\n *\n * @public\n */\nexport function getBlendModeInfo(mode: PdfBlendMode): BlendModeInfo {\n  return enumToInfo[mode] ?? enumToInfo[PdfBlendMode.Normal];\n}\n\n/** Convert enum → CSS value for `mix-blend-mode`.\n *\n * @public\n */\nexport function blendModeToCss(mode: PdfBlendMode): string {\n  return getBlendModeInfo(mode).css;\n}\n\n/** Convert CSS token → enum (returns undefined if not recognized).\n *\n * @public\n */\nexport function cssToBlendMode(value: string): PdfBlendMode | undefined {\n  return cssToEnum[value as keyof typeof cssToEnum];\n}\n\n/** Enum → UI label.\n *\n * @public\n */\nexport function blendModeLabel(mode: PdfBlendMode): string {\n  return getBlendModeInfo(mode).label;\n}\n\n/**\n * For a selection of annotations: returns the common enum value, or Mixed sentinel.\n *\n * @public\n */\nexport function reduceBlendModes(modes: readonly PdfBlendMode[]): UiBlendModeValue {\n  if (!modes.length) return PdfBlendMode.Normal;\n  const first = modes[0];\n  return modes.every((m) => m === first) ? first : MixedBlendMode;\n}\n\n/** Options for a <select>.\n *\n * @public\n */\nexport const blendModeSelectOptions = BLEND_MODE_INFOS.map((info) => ({\n  value: info.id,\n  label: info.label,\n}));\n\n/** Provide a label when Mixed sentinel used (UI convenience).\n *\n * @public\n */\nexport function uiBlendModeDisplay(value: UiBlendModeValue): string {\n  return value === MixedBlendMode ? '(mixed)' : blendModeLabel(value);\n}\n\n/**\n * Representation of the linked destination\n *\n * @public\n */\nexport interface PdfDestinationObject {\n  /**\n   * Index of target page\n   */\n  pageIndex: number;\n  /**\n   * zoom config for target destination\n   */\n  zoom:\n    | {\n        mode: PdfZoomMode.Unknown;\n      }\n    | { mode: PdfZoomMode.XYZ; params: { x: number; y: number; zoom: number } }\n    | {\n        mode: PdfZoomMode.FitPage;\n      }\n    | {\n        mode: PdfZoomMode.FitHorizontal;\n      }\n    | {\n        mode: PdfZoomMode.FitVertical;\n      }\n    | {\n        mode: PdfZoomMode.FitRectangle;\n      };\n  view: number[];\n}\n\n/**\n * Type of pdf action\n *\n * @public\n */\nexport enum PdfActionType {\n  Unsupported = 0,\n  /**\n   * Goto specified position in this document\n   */\n  Goto = 1,\n  /**\n   * Goto specified position in another document\n   */\n  RemoteGoto = 2,\n  /**\n   * Goto specified URI\n   */\n  URI = 3,\n  /**\n   * Launch specifed application\n   */\n  LaunchAppOrOpenFile = 4,\n}\n\nexport type PdfImage = {\n  data: Uint8ClampedArray;\n  width: number;\n  height: number;\n};\n\n/**\n * Representation of pdf action\n *\n * @public\n */\nexport type PdfActionObject =\n  | {\n      type: PdfActionType.Unsupported;\n    }\n  | {\n      type: PdfActionType.Goto;\n      destination: PdfDestinationObject;\n    }\n  | {\n      type: PdfActionType.RemoteGoto;\n      destination: PdfDestinationObject;\n    }\n  | {\n      type: PdfActionType.URI;\n      uri: string;\n    }\n  | {\n      type: PdfActionType.LaunchAppOrOpenFile;\n      path: string;\n    };\n\n/**\n * target of pdf link\n *\n * @public\n */\nexport type PdfLinkTarget =\n  | {\n      type: 'action';\n      action: PdfActionObject;\n    }\n  | {\n      type: 'destination';\n      destination: PdfDestinationObject;\n    };\n\n/**\n * PDF bookmark\n *\n * @public\n */\nexport interface PdfBookmarkObject {\n  /**\n   * title of bookmark\n   */\n  title: string;\n\n  /**\n   * target of bookmark\n   */\n  target?: PdfLinkTarget | undefined;\n\n  /**\n   * bookmarks in the next level\n   */\n  children?: PdfBookmarkObject[];\n}\n\n/**\n * Pdf Signature\n *\n * @public\n */\nexport interface PdfSignatureObject {\n  /**\n   * contents of signature\n   */\n  contents: ArrayBuffer;\n\n  /**\n   * byte range of signature\n   */\n  byteRange: ArrayBuffer;\n\n  /**\n   * sub filters of signature\n   */\n  subFilter: ArrayBuffer;\n\n  /**\n   * reason of signature\n   */\n  reason: string;\n\n  /**\n   * creation time of signature\n   */\n  time: string;\n\n  /**\n   * MDP\n   */\n  docMDP: number;\n}\n\n/**\n * Bookmark tree of pdf\n *\n * @public\n */\nexport interface PdfBookmarksObject {\n  bookmarks: PdfBookmarkObject[];\n}\n\n/**\n * Text rectangle in pdf page\n *\n * @public\n */\nexport interface PdfTextRectObject {\n  /**\n   * Font of the text\n   */\n  font: {\n    /**\n     * font family\n     */\n    family: string;\n\n    /**\n     * font size\n     */\n    size: number;\n  };\n\n  /**\n   * content in this rectangle area\n   */\n  content: string;\n\n  /**\n   * rectangle of the text\n   */\n  rect: Rect;\n}\n\n/**\n * Color\n *\n * @public\n */\nexport interface PdfAlphaColor {\n  /**\n   * red\n   */\n  red: number;\n  /**\n   * green\n   */\n  green: number;\n  /**\n   * blue\n   */\n  blue: number;\n  /**\n   * alpha\n   */\n  alpha: number;\n}\n\n/**\n * Annotation type\n *\n * @public\n */\nexport enum PdfAnnotationSubtype {\n  UNKNOWN = 0,\n  TEXT,\n  LINK,\n  FREETEXT,\n  LINE,\n  SQUARE,\n  CIRCLE,\n  POLYGON,\n  POLYLINE,\n  HIGHLIGHT,\n  UNDERLINE,\n  SQUIGGLY,\n  STRIKEOUT,\n  STAMP,\n  CARET,\n  INK,\n  POPUP,\n  FILEATTACHMENT,\n  SOUND,\n  MOVIE,\n  WIDGET,\n  SCREEN,\n  PRINTERMARK,\n  TRAPNET,\n  WATERMARK,\n  THREED,\n  RICHMEDIA,\n  XFAWIDGET,\n  REDACT,\n}\n\n/**\n * Name of annotation type\n *\n * @public\n */\nexport const PdfAnnotationSubtypeName: Record<PdfAnnotationSubtype, string> = {\n  [PdfAnnotationSubtype.UNKNOWN]: 'unknow',\n  [PdfAnnotationSubtype.TEXT]: 'text',\n  [PdfAnnotationSubtype.LINK]: 'link',\n  [PdfAnnotationSubtype.FREETEXT]: 'freetext',\n  [PdfAnnotationSubtype.LINE]: 'line',\n  [PdfAnnotationSubtype.SQUARE]: 'square',\n  [PdfAnnotationSubtype.CIRCLE]: 'circle',\n  [PdfAnnotationSubtype.POLYGON]: 'polygon',\n  [PdfAnnotationSubtype.POLYLINE]: 'polyline',\n  [PdfAnnotationSubtype.HIGHLIGHT]: 'highlight',\n  [PdfAnnotationSubtype.UNDERLINE]: 'underline',\n  [PdfAnnotationSubtype.SQUIGGLY]: 'squiggly',\n  [PdfAnnotationSubtype.STRIKEOUT]: 'strikeout',\n  [PdfAnnotationSubtype.STAMP]: 'stamp',\n  [PdfAnnotationSubtype.CARET]: 'caret',\n  [PdfAnnotationSubtype.INK]: 'ink',\n  [PdfAnnotationSubtype.POPUP]: 'popup',\n  [PdfAnnotationSubtype.FILEATTACHMENT]: 'fileattachment',\n  [PdfAnnotationSubtype.SOUND]: 'sound',\n  [PdfAnnotationSubtype.MOVIE]: 'movie',\n  [PdfAnnotationSubtype.WIDGET]: 'widget',\n  [PdfAnnotationSubtype.SCREEN]: 'screen',\n  [PdfAnnotationSubtype.PRINTERMARK]: 'printermark',\n  [PdfAnnotationSubtype.TRAPNET]: 'trapnet',\n  [PdfAnnotationSubtype.WATERMARK]: 'watermark',\n  [PdfAnnotationSubtype.THREED]: 'threed',\n  [PdfAnnotationSubtype.RICHMEDIA]: 'richmedia',\n  [PdfAnnotationSubtype.XFAWIDGET]: 'xfawidget',\n  [PdfAnnotationSubtype.REDACT]: 'redact',\n};\n\n/**\n * Status of pdf annotation\n *\n * @public\n */\nexport enum PdfAnnotationObjectStatus {\n  /**\n   * Annotation is created\n   */\n  Created,\n  /**\n   * Annotation is committed to PDF file\n   */\n  Committed,\n}\n\n/**\n * Appearance mode\n *\n * @public\n */\nexport enum AppearanceMode {\n  Normal = 0,\n  Rollover = 1,\n  Down = 2,\n}\n\n/**\n * State of pdf annotation\n *\n * @public\n */\nexport enum PdfAnnotationState {\n  /**\n   * Annotation is active\n   */\n  Marked = 'Marked',\n  /**\n   * Annotation is unmarked\n   */\n  Unmarked = 'Unmarked',\n  /**\n   * Annotation is ink\n   */\n  Accepted = 'Accepted',\n  /**\n   * Annotation is rejected\n   */\n  Rejected = 'Rejected',\n  /**\n   * Annotation is complete\n   */\n  Complete = 'Complete',\n  /**\n   * Annotation is cancelled\n   */\n  Cancelled = 'Cancelled',\n  /**\n   * Annotation is none\n   */\n  None = 'None',\n}\n\n/**\n * State model of pdf annotation\n *\n * @public\n */\nexport enum PdfAnnotationStateModel {\n  /**\n   * Annotation is marked\n   */\n  Marked = 'Marked',\n  /**\n   * Annotation is reviewed\n   */\n  Reviewed = 'Reviewed',\n}\n\n/**\n * Basic information of pdf annotation\n *\n * @public\n */\nexport interface PdfAnnotationObjectBase {\n  /**\n   * Author of the annotation\n   */\n  author?: string;\n\n  /**\n   * Modified date of the annotation\n   */\n  modified?: Date;\n\n  /**\n   * blend mode of annotation\n   */\n  blendMode?: PdfBlendMode;\n\n  /**\n   * intent of annotation\n   */\n  intent?: string;\n\n  /**\n   * Sub type of annotation\n   */\n  type: PdfAnnotationSubtype;\n\n  /**\n   * The index of page that this annotation belong to\n   */\n  pageIndex: number;\n\n  /**\n   * id of the annotation\n   */\n  id: number;\n\n  /**\n   * Rectangle of the annotation\n   */\n  rect: Rect;\n}\n\n/**\n * Popup annotation\n *\n * @public\n */\nexport interface PdfPopupAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.POPUP;\n  /**\n   * Contents of the popup\n   */\n  contents: string;\n\n  /**\n   * Whether the popup is opened or not\n   */\n  open: boolean;\n\n  /**\n   * In reply to id\n   */\n  inReplyToId?: number;\n}\n\n/**\n * Pdf Link annotation\n *\n * @public\n */\nexport interface PdfLinkAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.LINK;\n  /**\n   * Text of the link\n   */\n  text: string;\n  /**\n   * target of the link\n   */\n  target: PdfLinkTarget | undefined;\n}\n\n/**\n * Pdf Text annotation\n *\n * @public\n */\nexport interface PdfTextAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.TEXT;\n  /**\n   * Text contents of the annotation\n   */\n  contents: string;\n\n  /**\n   * color of text annotation\n   */\n  color?: string;\n\n  /**\n   * opacity of text annotation\n   */\n  opacity?: number;\n\n  /**\n   * In reply to id\n   */\n  inReplyToId?: number;\n\n  /**\n   * State of the text annotation\n   */\n  state?: PdfAnnotationState;\n\n  /**\n   * State model of the text annotation\n   */\n  stateModel?: PdfAnnotationStateModel;\n}\n\n/**\n * Type of form field\n *\n * @public\n */\nexport enum PDF_FORM_FIELD_TYPE {\n  /**\n   * Unknow\n   */\n  UNKNOWN = 0,\n  /**\n   * push button type\n   */\n  PUSHBUTTON = 1,\n  /**\n   * check box type.\n   */\n  CHECKBOX = 2,\n  /**\n   * radio button type.\n   */\n  RADIOBUTTON = 3,\n  /**\n   * combo box type.\n   */\n  COMBOBOX = 4,\n  /**\n   * list box type.\n   */\n  LISTBOX = 5,\n  /**\n   *  text field type\n   */\n  TEXTFIELD = 6,\n  /**\n   * signature field type.\n   */\n  SIGNATURE = 7,\n  /**\n   * Generic XFA type.\n   */\n  XFA = 8,\n  /**\n   * XFA check box type.\n   */\n  XFA_CHECKBOX = 9,\n  /**\n   * XFA combo box type.\n   */\n  XFA_COMBOBOX = 10,\n  /**\n   * XFA image field type.\n   */\n  XFA_IMAGEFIELD = 11,\n  /**\n   * XFA list box type.\n   */\n  XFA_LISTBOX = 12,\n  /**\n   * XFA push button type.\n   */\n  XFA_PUSHBUTTON = 13,\n  /**\n   * XFA signture field type.\n   */\n  XFA_SIGNATURE = 14,\n  /**\n   * XFA text field type.\n   */\n  XFA_TEXTFIELD = 15,\n}\n\nexport enum PdfAnnotationColorType {\n  Color = 0,\n  InteriorColor = 1,\n}\n\n/**\n * Border style of pdf annotation\n *\n * @public\n */\nexport enum PdfAnnotationBorderStyle {\n  UNKNOWN = 0,\n  SOLID = 1,\n  DASHED = 2,\n  BEVELED = 3,\n  INSET = 4,\n  UNDERLINE = 5,\n  CLOUDY = 6,\n}\n\n/**\n * Flag of pdf annotation\n *\n * @public\n */\nexport enum PdfAnnotationFlags {\n  NONE = 0,\n  INVISIBLE = 1 << 0,\n  HIDDEN = 1 << 1,\n  PRINT = 1 << 2,\n  NO_ZOOM = 1 << 3,\n  NO_ROTATE = 1 << 4,\n  NO_VIEW = 1 << 5,\n  READ_ONLY = 1 << 6,\n  LOCKED = 1 << 7,\n  TOGGLE_NOVIEW = 1 << 8,\n}\n\n/**\n * Flag of form field\n *\n * @public\n */\nexport enum PDF_FORM_FIELD_FLAG {\n  NONE = 0,\n  READONLY = 1 << 0,\n  REQUIRED = 1 << 1,\n  NOEXPORT = 1 << 2,\n  TEXT_MULTIPLINE = 1 << 12,\n  TEXT_PASSWORD = 1 << 13,\n  CHOICE_COMBO = 1 << 17,\n  CHOICE_EDIT = 1 << 18,\n  CHOICE_MULTL_SELECT = 1 << 21,\n}\n\n/**\n * Type of pdf object\n *\n * @public\n */\nexport enum PdfPageObjectType {\n  UNKNOWN = 0,\n  TEXT = 1,\n  PATH = 2,\n  IMAGE = 3,\n  SHADING = 4,\n  FORM = 5,\n}\n\n/**\n * Options of pdf widget annotation\n *\n * @public\n */\nexport interface PdfWidgetAnnoOption {\n  label: string;\n  isSelected: boolean;\n}\n\nexport type PdfAnnotationFlagName =\n  | 'invisible'\n  | 'hidden'\n  | 'print'\n  | 'noZoom'\n  | 'noRotate'\n  | 'noView'\n  | 'readOnly'\n  | 'locked'\n  | 'toggleNoView';\n\ntype FlagMap = Partial<\n  Record<Exclude<PdfAnnotationFlags, PdfAnnotationFlags.NONE>, PdfAnnotationFlagName>\n>;\n\nexport const PdfAnnotationFlagName: Readonly<FlagMap> = Object.freeze({\n  [PdfAnnotationFlags.INVISIBLE]: 'invisible',\n  [PdfAnnotationFlags.HIDDEN]: 'hidden',\n  [PdfAnnotationFlags.PRINT]: 'print',\n  [PdfAnnotationFlags.NO_ZOOM]: 'noZoom',\n  [PdfAnnotationFlags.NO_ROTATE]: 'noRotate',\n  [PdfAnnotationFlags.NO_VIEW]: 'noView',\n  [PdfAnnotationFlags.READ_ONLY]: 'readOnly',\n  [PdfAnnotationFlags.LOCKED]: 'locked',\n  [PdfAnnotationFlags.TOGGLE_NOVIEW]: 'toggleNoView',\n} as const);\n\n/** Build a reverse map once so look-ups are O(1)                      */\nconst PdfAnnotationFlagValue: Record<PdfAnnotationFlagName, PdfAnnotationFlags> = Object.entries(\n  PdfAnnotationFlagName,\n).reduce(\n  (acc, [bit, name]) => {\n    acc[name as PdfAnnotationFlagName] = Number(bit) as PdfAnnotationFlags;\n    return acc;\n  },\n  {} as Record<PdfAnnotationFlagName, PdfAnnotationFlags>,\n);\n\n/**\n * Convert the raw bit-mask coming from `FPDFAnnot_GetFlags()` into\n * an array of human-readable flag names (“invisible”, “print”…).\n */\nexport function flagsToNames(raw: number): PdfAnnotationFlagName[] {\n  return (\n    Object.keys(PdfAnnotationFlagName) as unknown as Exclude<\n      PdfAnnotationFlags,\n      PdfAnnotationFlags.NONE\n    >[]\n  )\n    .filter((flag) => (raw & flag) !== 0)\n    .map((flag) => PdfAnnotationFlagName[flag]!);\n}\n\n/**\n * Convert an array of flag-names back into the numeric mask that\n * PDFium expects for `FPDFAnnot_SetFlags()`.\n */\nexport function namesToFlags(names: readonly PdfAnnotationFlagName[]): PdfAnnotationFlags {\n  return names.reduce<PdfAnnotationFlags>(\n    (mask, name) => mask | PdfAnnotationFlagValue[name],\n    PdfAnnotationFlags.NONE,\n  );\n}\n\n/**\n * Field of PDF widget annotation\n *\n * @public\n */\nexport interface PdfWidgetAnnoField {\n  /**\n   * flag of field\n   */\n  flag: PDF_FORM_FIELD_FLAG;\n  /**\n   * name of field\n   */\n  name: string;\n  /**\n   * alternate name of field\n   */\n  alternateName: string;\n  /**\n   * type of field\n   */\n  type: PDF_FORM_FIELD_TYPE;\n  /**\n   * value of field\n   */\n  value: string;\n  /**\n   * whether field is checked\n   */\n  isChecked: boolean;\n  /**\n   * options of field\n   */\n  options: PdfWidgetAnnoOption[];\n}\n\n/**\n * PDF widget object\n *\n * @public\n */\nexport interface PdfWidgetAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.WIDGET;\n  /**\n   * Field of pdf widget object\n   */\n  field: PdfWidgetAnnoField;\n}\n\n/**\n * Pdf file attachments annotation\n *\n * @public\n */\nexport interface PdfFileAttachmentAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.FILEATTACHMENT;\n}\n\n/**\n * ink list in pdf ink annotation\n *\n * @public\n */\nexport interface PdfInkListObject {\n  points: Position[];\n}\n\n/**\n * Pdf ink annotation\n *\n * @public\n */\nexport interface PdfInkAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.INK;\n  /**\n   * ink list of annotation\n   */\n  inkList: PdfInkListObject[];\n  /**\n   * color of ink annotation\n   */\n  color: string;\n\n  /**\n   * opacity of ink annotation\n   */\n  opacity: number;\n\n  /**\n   * stroke-width of ink annotation\n   */\n  strokeWidth: number;\n}\n\n/**\n * Pdf polygon annotation\n *\n * @public\n */\nexport interface PdfPolygonAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.POLYGON;\n  /**\n   * vertices of annotation\n   */\n  vertices: Position[];\n}\n\n/**\n * PDF polyline annotation\n *\n * @public\n */\nexport interface PdfPolylineAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.POLYLINE;\n  /**\n   * vertices of annotation\n   */\n  vertices: Position[];\n}\n\n/**\n * PDF line annotation\n *\n * @public\n */\nexport interface PdfLineAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.LINE;\n  /**\n   * start point of line\n   */\n  startPoint: Position;\n  /**\n   * end point of line\n   */\n  endPoint: Position;\n}\n\n/**\n * PDF highlight annotation\n *\n * @public\n */\nexport interface PdfHighlightAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.HIGHLIGHT;\n\n  /**\n   * Text contents of the highlight annotation\n   */\n  contents?: string;\n\n  /**\n   * color of highlight annotation\n   */\n  color: string;\n\n  /**\n   * opacity of highlight annotation\n   */\n  opacity: number;\n\n  /**\n   * quads of highlight area\n   */\n  segmentRects: Rect[];\n}\n\n/**\n * Matrix for transformation, in the form [a b c d e f], equivalent to:\n * | a  b  0 |\n * | c  d  0 |\n * | e  f  1 |\n *\n * Translation is performed with [1 0 0 1 tx ty].\n * Scaling is performed with [sx 0 0 sy 0 0].\n * See PDF Reference 1.7, 4.2.2 Common Transformations for more.\n */\nexport interface PdfTransformMatrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\n/**\n * type of segment type in pdf path object\n *\n * @public\n */\nexport enum PdfSegmentObjectType {\n  UNKNOWN = -1,\n  LINETO = 0,\n  BEZIERTO = 1,\n  MOVETO = 2,\n}\n\n/**\n * segment of path object\n *\n * @public\n */\nexport interface PdfSegmentObject {\n  type: PdfSegmentObjectType;\n  /**\n   * point of the segment\n   */\n  point: Position;\n  /**\n   * whether this segment close the path\n   */\n  isClosed: boolean;\n}\n\n/**\n * Pdf path object\n *\n * @public\n */\nexport interface PdfPathObject {\n  type: PdfPageObjectType.PATH;\n  /**\n   * bound that contains the path\n   */\n  bounds: { left: number; bottom: number; right: number; top: number };\n  /**\n   * segments of the path\n   */\n  segments: PdfSegmentObject[];\n  /**\n   * transform matrix\n   */\n  matrix: PdfTransformMatrix;\n}\n\n/**\n * Pdf image object\n *\n * @public\n */\nexport interface PdfImageObject {\n  type: PdfPageObjectType.IMAGE;\n  /**\n   * data of the image\n   */\n  imageData: ImageData;\n  /**\n   * transform matrix\n   */\n  matrix: PdfTransformMatrix;\n}\n\n/**\n * Pdf form object\n *\n * @public\n */\nexport interface PdfFormObject {\n  type: PdfPageObjectType.FORM;\n  /**\n   * objects that in this form object\n   */\n  objects: (PdfImageObject | PdfPathObject | PdfFormObject)[];\n  /**\n   * transform matrix\n   */\n  matrix: PdfTransformMatrix;\n}\n\n/**\n * Contents type of pdf stamp annotation\n *\n * @public\n */\nexport type PdfStampAnnoObjectContents = Array<PdfPathObject | PdfImageObject | PdfFormObject>;\n\n/**\n * Pdf stamp annotation\n *\n * @public\n */\nexport interface PdfStampAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.STAMP;\n  /**\n   * contents in this stamp annotation\n   */\n  contents: PdfStampAnnoObjectContents;\n}\n\n/**\n * Pdf circle annotation\n *\n * @public\n */\nexport interface PdfCircleAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.CIRCLE;\n  /**\n   * flags of circle annotation\n   */\n  flags: PdfAnnotationFlagName[];\n  /**\n   * color of circle annotation\n   */\n  color: string;\n  /**\n   * opacity of circle annotation\n   */\n  opacity: number;\n  /**\n   * stroke-width of circle annotation\n   */\n  strokeWidth: number;\n  /**\n   * stroke color of circle annotation\n   */\n  strokeColor: string;\n  /**\n   * stroke style of circle annotation\n   */\n  strokeStyle: PdfAnnotationBorderStyle;\n  /**\n   * stroke dash array of circle annotation\n   */\n  strokeDashArray?: number[];\n  /**\n   * cloudy border intensity of circle annotation\n   */\n  cloudyBorderIntensity?: number;\n  /**\n   * cloudy border inset of circle annotation\n   */\n  cloudyBorderInset?: number[];\n}\n\n/**\n * Pdf square annotation\n *\n * @public\n */\nexport interface PdfSquareAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.SQUARE;\n  /**\n   * flags of square annotation\n   */\n  flags: PdfAnnotationFlagName[];\n  /**\n   * color of square annotation\n   */\n  color: string;\n  /**\n   * opacity of square annotation\n   */\n  opacity: number;\n  /**\n   * stroke-width of square annotation\n   */\n  strokeWidth: number;\n  /**\n   * stroke color of square annotation\n   */\n  strokeColor: string;\n  /**\n   * stroke style of square annotation\n   */\n  strokeStyle: PdfAnnotationBorderStyle;\n  /**\n   * stroke dash array of square annotation\n   */\n  strokeDashArray?: number[];\n  /**\n   * cloudy border intensity of circle annotation\n   */\n  cloudyBorderIntensity?: number;\n  /**\n   * cloudy border inset of circle annotation\n   */\n  cloudyBorderInset?: number[];\n}\n\n/**\n * Pdf squiggly annotation\n *\n * @public\n */\nexport interface PdfSquigglyAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.SQUIGGLY;\n  /**\n   * Text contents of the highlight annotation\n   */\n  contents?: string;\n  /**\n   * color of strike out annotation\n   */\n  color: string;\n\n  /**\n   * opacity of strike out annotation\n   */\n  opacity: number;\n  /**\n   * quads of highlight area\n   */\n  segmentRects: Rect[];\n}\n\n/**\n * Pdf underline annotation\n *\n * @public\n */\nexport interface PdfUnderlineAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.UNDERLINE;\n  /**\n   * Text contents of the highlight annotation\n   */\n  contents?: string;\n  /**\n   * color of strike out annotation\n   */\n  color: string;\n\n  /**\n   * opacity of strike out annotation\n   */\n  opacity: number;\n  /**\n   * quads of highlight area\n   */\n  segmentRects: Rect[];\n}\n\n/**\n * Pdf strike out annotation\n *\n * @public\n */\nexport interface PdfStrikeOutAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.STRIKEOUT;\n  /**\n   * Text contents of the strike out annotation\n   */\n  contents?: string;\n\n  /**\n   * color of strike out annotation\n   */\n  color: string;\n\n  /**\n   * opacity of strike out annotation\n   */\n  opacity: number;\n\n  /**\n   * quads of highlight area\n   */\n  segmentRects: Rect[];\n}\n\n/**\n * Pdf caret annotation\n *\n * @public\n */\nexport interface PdfCaretAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.CARET;\n}\n\n/**\n * Pdf free text annotation\n *\n * @public\n */\nexport interface PdfFreeTextAnnoObject extends PdfAnnotationObjectBase {\n  /** {@inheritDoc PdfAnnotationObjectBase.type} */\n  type: PdfAnnotationSubtype.FREETEXT;\n  contents: string;\n  richContent?: string;\n}\n\n/**\n * All annotation that support\n *\n * @public\n */\nexport type PdfSupportedAnnoObject =\n  | PdfInkAnnoObject\n  | PdfTextAnnoObject\n  | PdfLinkAnnoObject\n  | PdfPolygonAnnoObject\n  | PdfPolylineAnnoObject\n  | PdfHighlightAnnoObject\n  | PdfLineAnnoObject\n  | PdfWidgetAnnoObject\n  | PdfFileAttachmentAnnoObject\n  | PdfStampAnnoObject\n  | PdfSquareAnnoObject\n  | PdfCircleAnnoObject\n  | PdfSquigglyAnnoObject\n  | PdfUnderlineAnnoObject\n  | PdfStrikeOutAnnoObject\n  | PdfCaretAnnoObject\n  | PdfFreeTextAnnoObject;\n\n/**\n * Pdf annotation that does not support\n *\n * @public\n */\nexport interface PdfUnsupportedAnnoObject extends PdfAnnotationObjectBase {\n  type: Exclude<PdfAnnotationSubtype, PdfSupportedAnnoObject['type']>;\n}\n\n/**\n * all annotations\n *\n * @public\n */\nexport type PdfAnnotationObject = PdfSupportedAnnoObject | PdfUnsupportedAnnoObject;\n\n/**\n * Pdf attachment\n *\n * @public\n */\nexport interface PdfAttachmentObject {\n  index: number;\n  name: string;\n  creationDate: string;\n  checksum: string;\n}\n\n/**\n * Pdf engine features\n *\n * @public\n */\nexport enum PdfEngineFeature {\n  RenderPage,\n  RenderPageRect,\n  Thumbnails,\n  Bookmarks,\n  Annotations,\n}\n\n/**\n * All operations for this engine\n *\n * @public\n */\nexport enum PdfEngineOperation {\n  Create,\n  Read,\n  Update,\n  Delete,\n}\n\n/**\n * flags to match the text during searching\n *\n * @public\n */\nexport enum MatchFlag {\n  None = 0,\n  MatchCase = 1,\n  MatchWholeWord = 2,\n  MatchConsecutive = 4,\n}\n\n/**\n * Union all the flags\n * @param flags - all the flags\n * @returns union of flags\n *\n * @public\n */\nexport function unionFlags(flags: MatchFlag[]) {\n  return flags.reduce((flag, currFlag) => {\n    return flag | currFlag;\n  }, MatchFlag.None);\n}\n\n/**\n * Image conversion types\n *\n * @public\n */\nexport type ImageConversionTypes = 'image/webp' | 'image/png' | 'image/jpeg';\n\n/**\n * Targe for searching\n *\n * @public\n */\nexport interface SearchTarget {\n  keyword: string;\n  flags: MatchFlag[];\n}\n\n/**\n * compare 2 search target\n * @param targetA - first target for search\n * @param targetB - second target for search\n * @returns whether 2 search target are the same\n *\n * @public\n */\nexport function compareSearchTarget(targetA: SearchTarget, targetB: SearchTarget) {\n  const flagA = unionFlags(targetA.flags);\n  const flagB = unionFlags(targetB.flags);\n\n  return flagA === flagB && targetA.keyword === targetB.keyword;\n}\n\n/** Context of one hit */\nexport interface TextContext {\n  /** Complete words that come *before* the hit (no ellipsis)            */\n  before: string;\n  /** Exactly the text that matched (case-preserved)                      */\n  match: string;\n  /** Complete words that come *after* the hit (no ellipsis)             */\n  after: string;\n  /** `true` ⇢ there were more words on the left that we cut off         */\n  truncatedLeft: boolean;\n  /** `true` ⇢ there were more words on the right that we cut off        */\n  truncatedRight: boolean;\n}\n\n/**\n * Text slice\n *\n * @public\n */\nexport interface PageTextSlice {\n  /**\n   * Index of the pdf page\n   */\n  pageIndex: number;\n  /**\n   * Index of the first character\n   */\n  charIndex: number;\n  /**\n   * Count of the characters\n   */\n  charCount: number;\n}\n\n/**\n * search result\n *\n * @public\n */\nexport interface SearchResult {\n  /**\n   * Index of the pdf page\n   */\n  pageIndex: number;\n  /**\n   * index of the first character\n   */\n  charIndex: number;\n  /**\n   * count of the characters\n   */\n  charCount: number;\n  /**\n   * highlight rects\n   */\n  rects: Rect[];\n  /**\n   * context of the hit\n   */\n  context: TextContext;\n}\n\n/**\n * Results of searching through the entire document\n */\nexport interface SearchAllPagesResult {\n  /**\n   * Array of all search results across all pages\n   */\n  results: SearchResult[];\n\n  /**\n   * Total number of results found\n   */\n  total: number;\n}\n\n/**\n * Glyph object\n *\n * @public\n */\nexport interface PdfGlyphObject {\n  /**\n   * Origin of the glyph\n   */\n  origin: { x: number; y: number };\n  /**\n   * Size of the glyph\n   */\n  size: { width: number; height: number };\n  /**\n   * Whether the glyph is a space\n   */\n  isSpace?: boolean;\n  /**\n   * Whether the glyph is a empty\n   */\n  isEmpty?: boolean;\n}\n\n/**\n * Glyph object\n *\n * @public\n */\nexport interface PdfGlyphSlim {\n  /**\n   * X coordinate of the glyph\n   */\n  x: number;\n  /**\n   * Y coordinate of the glyph\n   */\n  y: number;\n  /**\n   * Width of the glyph\n   */\n  width: number;\n  /**\n   * Height of the glyph\n   */\n  height: number;\n  /**\n   * Flags of the glyph\n   */\n  flags: number;\n}\n\n/**\n * Run object\n *\n * @public\n */\nexport interface PdfRun {\n  /**\n   * Rectangle of the run\n   */\n  rect: { x: number; y: number; width: number; height: number };\n  /**\n   * Start index of the run\n   */\n  charStart: number;\n  /**\n   * Glyphs of the run\n   */\n  glyphs: PdfGlyphSlim[];\n}\n\n/**\n * Page geometry\n *\n * @public\n */\nexport interface PdfPageGeometry {\n  /**\n   * Runs of the page\n   */\n  runs: PdfRun[];\n}\n\n/**\n * form field value\n * @public\n */\nexport type FormFieldValue =\n  | { kind: 'text'; text: string }\n  | { kind: 'selection'; index: number; isSelected: boolean }\n  | { kind: 'checked'; isChecked: boolean };\n\n/**\n * Transformation that will be applied to annotation\n *\n * @public\n */\nexport interface PdfAnnotationTransformation {\n  /**\n   * Translated offset\n   */\n  offset: Position;\n  /**\n   * Scaled factors\n   */\n  scale: Size;\n}\n\n/**\n * Render options\n *\n * @public\n */\nexport interface PdfRenderOptions {\n  /**\n   * Whether needs to render the page with annotations\n   */\n  withAnnotations: boolean;\n}\n\n/**\n * source can be byte array contains pdf content\n *\n * @public\n */\nexport type PdfFileContent = ArrayBuffer;\n\nexport enum PdfPermission {\n  PrintDocument = 2 ** 3,\n  ModifyContent = 2 ** 4,\n  CopyOrExtract = 2 ** 5,\n  AddOrModifyTextAnnot = 2 ** 6,\n  FillInExistingForm = 2 ** 9,\n  ExtractTextOrGraphics = 2 ** 10,\n  AssembleDocument = 2 ** 11,\n  PrintHighQuality = 2 ** 12,\n}\n\nexport enum PdfPageFlattenFlag {\n  Display = 0,\n  Print = 1,\n}\n\nexport enum PdfPageFlattenResult {\n  Fail = 0,\n  Success = 1,\n  NothingToDo = 2,\n}\n\n/**\n * Pdf File without content\n *\n * @public\n */\nexport interface PdfFileWithoutContent {\n  /**\n   * id of file\n   */\n  id: string;\n}\n\nexport interface PdfFileLoader extends PdfFileWithoutContent {\n  /**\n   * length of file\n   */\n  fileLength: number;\n  /**\n   * read block of file\n   * @param offset - offset of file\n   * @param length - length of file\n   * @returns block of file\n   */\n  callback: (offset: number, length: number) => Uint8Array;\n}\n\n/**\n * Pdf File\n *\n * @public\n */\nexport interface PdfFile extends PdfFileWithoutContent {\n  /**\n   * content of file\n   */\n  content: PdfFileContent;\n}\n\nexport interface PdfFileUrl extends PdfFileWithoutContent {\n  url: string;\n}\n\nexport interface PdfUrlOptions {\n  mode?: 'auto' | 'range-request' | 'full-fetch';\n  password?: string;\n}\n\nexport enum PdfErrorCode {\n  Ok, //  #define FPDF_ERR_SUCCESS 0    // No error.\n  Unknown, // #define FPDF_ERR_UNKNOWN 1    // Unknown error.\n  NotFound, // #define FPDF_ERR_FILE 2       // File not found or could not be opened.\n  WrongFormat, // #define FPDF_ERR_FORMAT 3     // File not in PDF format or corrupted.\n  Password, // #define FPDF_ERR_PASSWORD 4   // Password required or incorrect password.\n  Security, // #define FPDF_ERR_SECURITY 5   // Unsupported security scheme.\n  PageError, // #define FPDF_ERR_PAGE 6       // Page not found or content error.\n  XFALoad, // #ifdef PDF_ENABLE_XFA\n  XFALayout, //\n  Cancelled,\n  Initialization,\n  NotReady,\n  NotSupport,\n  LoadDoc,\n  DocNotOpen,\n  CantCloseDoc,\n  CantCreateNewDoc,\n  CantImportPages,\n  CantCreateAnnot,\n  CantSetAnnotRect,\n  CantSetAnnotContent,\n  CantRemoveInkList,\n  CantAddInkStoke,\n  CantReadAttachmentSize,\n  CantReadAttachmentContent,\n  CantFocusAnnot,\n  CantSelectText,\n  CantSelectOption,\n  CantCheckField,\n}\n\nexport interface PdfErrorReason {\n  code: PdfErrorCode;\n  message: string;\n}\n\nexport type PdfEngineError = TaskError<PdfErrorReason>;\n\nexport type PdfTask<R> = Task<R, PdfErrorReason>;\n\nexport class PdfTaskHelper {\n  /**\n   * Create a task\n   * @returns new task\n   */\n  static create<R>(): Task<R, PdfErrorReason> {\n    return new Task<R, PdfErrorReason>();\n  }\n\n  /**\n   * Create a task that has been resolved with value\n   * @param result - resolved value\n   * @returns resolved task\n   */\n  static resolve<R>(result: R): Task<R, PdfErrorReason> {\n    const task = new Task<R, PdfErrorReason>();\n    task.resolve(result);\n\n    return task;\n  }\n\n  /**\n   * Create a task that has been rejected with error\n   * @param reason - rejected error\n   * @returns rejected task\n   */\n  static reject<T = any>(reason: PdfErrorReason): Task<T, PdfErrorReason> {\n    const task = new Task<T, PdfErrorReason>();\n    task.reject(reason);\n\n    return task;\n  }\n\n  /**\n   * Create a task that has been aborted with error\n   * @param reason - aborted error\n   * @returns aborted task\n   */\n  static abort<T = any>(reason: PdfErrorReason): Task<T, PdfErrorReason> {\n    const task = new Task<T, PdfErrorReason>();\n    task.reject(reason);\n\n    return task;\n  }\n}\n\n/**\n * Pdf engine\n *\n * @public\n */\nexport interface PdfEngine<T = Blob> {\n  /**\n   * Check whether pdf engine supports this feature\n   * @param feature - which feature want to check\n   * @returns support or not\n   */\n  isSupport?: (feature: PdfEngineFeature) => PdfTask<PdfEngineOperation[]>;\n  /**\n   * Initialize the engine\n   * @returns task that indicate whether initialization is successful\n   */\n  initialize?: () => PdfTask<boolean>;\n  /**\n   * Destroy the engine\n   * @returns task that indicate whether destroy is successful\n   */\n  destroy?: () => PdfTask<boolean>;\n  /**\n   * Open a PDF from a URL with specified mode\n   * @param url - The PDF file URL\n   * @param options - Additional options including mode (auto, range-request, full-fetch) and password\n   * @returns Task that resolves with the PdfDocumentObject or an error\n   */\n  openDocumentUrl: (file: PdfFileUrl, options?: PdfUrlOptions) => PdfTask<PdfDocumentObject>;\n  /**\n   * Open pdf document from buffer\n   * @param file - pdf file\n   * @param password - protected password for this file\n   * @returns task that contains the file or error\n   */\n  openDocumentFromBuffer: (file: PdfFile, password: string) => PdfTask<PdfDocumentObject>;\n  /**\n   * Open pdf document from loader\n   * @param file - pdf file\n   * @param password - protected password for this file\n   * @returns task that contains the file or error\n   */\n  openDocumentFromLoader: (file: PdfFileLoader, password: string) => PdfTask<PdfDocumentObject>;\n  /**\n   * Get the metadata of the file\n   * @param doc - pdf document\n   * @returns task that contains the metadata or error\n   */\n  getMetadata: (doc: PdfDocumentObject) => PdfTask<PdfMetadataObject>;\n  /**\n   * Get permissions of the file\n   * @param doc - pdf document\n   * @returns task that contains a 32-bit integer indicating permission flags\n   */\n  getDocPermissions: (doc: PdfDocumentObject) => PdfTask<number>;\n  /**\n   * Get the user permissions of the file\n   * @param doc - pdf document\n   * @returns task that contains a 32-bit integer indicating permission flags\n   */\n  getDocUserPermissions: (doc: PdfDocumentObject) => PdfTask<number>;\n  /**\n   * Get the signatures of the file\n   * @param doc - pdf document\n   * @returns task that contains the signatures or error\n   */\n  getSignatures: (doc: PdfDocumentObject) => PdfTask<PdfSignatureObject[]>;\n  /**\n   * Get the bookmarks of the file\n   * @param doc - pdf document\n   * @returns task that contains the bookmarks or error\n   */\n  getBookmarks: (doc: PdfDocumentObject) => PdfTask<PdfBookmarksObject>;\n  /**\n   * Render the specified pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param scaleFactor - factor of scaling\n   * @param rotation - rotated angle\n   * @param dpr - devicePixelRatio\n   * @param options - render options\n   * @returns task contains the rendered image or error\n   */\n  renderPage: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n    options: PdfRenderOptions,\n    imageType?: ImageConversionTypes,\n  ) => PdfTask<T>;\n  /**\n   * Render the specified rect of pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param scaleFactor - factor of scaling\n   * @param rotation - rotated angle\n   * @param dpr - devicePixelRatio\n   * @param rect - target rect\n   * @param options - render options\n   * @returns task contains the rendered image or error\n   */\n  renderPageRect: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n    rect: Rect,\n    options: PdfRenderOptions,\n    imageType?: ImageConversionTypes,\n  ) => PdfTask<T>;\n  /**\n   * Render a single annotation into an ImageData blob.\n   *\n   * Note:  • honours Display-Matrix, page rotation & DPR\n   *        • you decide whether to include the page background\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param annotation - the annotation to render\n   * @param scaleFactor - factor of scaling\n   * @param rotation - rotated angle\n   * @param dpr - devicePixelRatio\n   * @param mode - appearance mode\n   */\n  renderAnnotation(\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n    mode: AppearanceMode,\n    imageType: ImageConversionTypes,\n  ): PdfTask<T>;\n  /**\n   * Get annotations of pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param scaleFactor - factor of scaling\n   * @param rotation - rotated angle\n   * @returns task contains the annotations or error\n   */\n  getPageAnnotations: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n  ) => PdfTask<PdfAnnotationObject[]>;\n\n  /**\n   * Change the visible colour (and opacity) of an existing annotation.\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param annotation - the annotation to recolour\n   * @param colour - RGBA color values (0-255 per channel)\n   * @param which - 0 = stroke/fill colour (PDFium's \"colourType\" param)\n   * @returns task that indicates whether the operation succeeded\n   */\n  updateAnnotationColor: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObjectBase,\n    color: WebAlphaColor,\n    which?: number,\n  ) => PdfTask<boolean>;\n\n  /**\n   * Create a annotation on specified page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param annotation - new annotations\n   * @returns task whether the annotations is created successfully\n   */\n  createPageAnnotation: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n  ) => PdfTask<number>;\n  /**\n   * Update a annotation on specified page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param annotation - new annotations\n   * @returns task that indicates whether the operation succeeded\n   */\n  updatePageAnnotation: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n  ) => PdfTask<boolean>;\n  /**\n   * Remove a annotation on specified page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param annotation - new annotations\n   * @returns task whether the annotations is removed successfully\n   */\n  removePageAnnotation: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfAnnotationObject,\n  ) => PdfTask<boolean>;\n  /**\n   * get all text rects in pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param scaleFactor - factor of scaling\n   * @param rotation - rotated angle\n   * @returns task contains the text rects or error\n   */\n  getPageTextRects: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n  ) => PdfTask<PdfTextRectObject[]>;\n  /**\n   * Render the thumbnail of specified pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param scaleFactor - factor of scaling\n   * @param rotation - rotated angle\n   * @param dpr - devicePixelRatio\n   * @param options - render options\n   * @returns task contains the rendered image or error\n   */\n  renderThumbnail: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    scaleFactor: number,\n    rotation: Rotation,\n    dpr: number,\n  ) => PdfTask<T>;\n  /**\n   * Search across all pages in the document\n   * @param doc - pdf document\n   * @param keyword - search keyword\n   * @param flags - match flags for search\n   * @returns Task contains all search results throughout the document\n   */\n  searchAllPages: (\n    doc: PdfDocumentObject,\n    keyword: string,\n    flags?: MatchFlag[],\n  ) => PdfTask<SearchAllPagesResult>;\n  /**\n   * Get all annotations in this file\n   * @param doc - pdf document\n   * @returns task that contains the annotations or error\n   */\n  getAllAnnotations: (doc: PdfDocumentObject) => PdfTask<Record<number, PdfAnnotationObject[]>>;\n  /**\n   * Get all attachments in this file\n   * @param doc - pdf document\n   * @returns task that contains the attachments or error\n   */\n  getAttachments: (doc: PdfDocumentObject) => PdfTask<PdfAttachmentObject[]>;\n  /**\n   * Read content of pdf attachment\n   * @param doc - pdf document\n   * @param attachment - pdf attachments\n   * @returns task that contains the content of specified attachment or error\n   */\n  readAttachmentContent: (\n    doc: PdfDocumentObject,\n    attachment: PdfAttachmentObject,\n  ) => PdfTask<ArrayBuffer>;\n  /**\n   * Set form field value\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param annotation - pdf annotation\n   * @param text - text value\n   */\n  setFormFieldValue: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    annotation: PdfWidgetAnnoObject,\n    value: FormFieldValue,\n  ) => PdfTask<boolean>;\n  /**\n   * Flatten annotations and form fields into the page contents.\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @param flag - flatten flag\n   */\n  flattenPage: (\n    doc: PdfDocumentObject,\n    page: PdfPageObject,\n    flag: PdfPageFlattenFlag,\n  ) => PdfTask<PdfPageFlattenResult>;\n  /**\n   * Extract pdf pages to a new file\n   * @param doc - pdf document\n   * @param pageIndexes - indexes of pdf pages\n   * @returns task contains the new pdf file content\n   */\n  extractPages: (doc: PdfDocumentObject, pageIndexes: number[]) => PdfTask<ArrayBuffer>;\n  /**\n   * Extract text on specified pdf pages\n   * @param doc - pdf document\n   * @param pageIndexes - indexes of pdf pages\n   * @returns task contains the text\n   */\n  extractText: (doc: PdfDocumentObject, pageIndexes: number[]) => PdfTask<string>;\n  /**\n   * Extract text on specified pdf pages\n   * @param doc - pdf document\n   * @param pageIndexes - indexes of pdf pages\n   * @returns task contains the text\n   */\n  getTextSlices: (doc: PdfDocumentObject, slices: PageTextSlice[]) => PdfTask<string[]>;\n  /**\n   * Get all glyphs in the specified pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @returns task contains the glyphs\n   */\n  getPageGlyphs: (doc: PdfDocumentObject, page: PdfPageObject) => PdfTask<PdfGlyphObject[]>;\n  /**\n   * Get the geometry of the specified pdf page\n   * @param doc - pdf document\n   * @param page - pdf page\n   * @returns task contains the geometry\n   */\n  getPageGeometry: (doc: PdfDocumentObject, page: PdfPageObject) => PdfTask<PdfPageGeometry>;\n  /**\n   * Merge multiple pdf documents\n   * @param files - all the pdf files\n   * @returns task contains the merged pdf file\n   */\n  merge: (files: PdfFile[]) => PdfTask<PdfFile>;\n  /**\n   * Merge specific pages from multiple PDF documents in a custom order\n   * @param mergeConfigs Array of configurations specifying which pages to merge from which documents\n   * @returns A PdfTask that resolves with the merged PDF file\n   * @public\n   */\n  mergePages: (mergeConfigs: Array<{ docId: string; pageIndices: number[] }>) => PdfTask<PdfFile>;\n  /**\n   * Save a copy of pdf document\n   * @param doc - pdf document\n   * @returns task contains the new pdf file content\n   */\n  saveAsCopy: (doc: PdfDocumentObject) => PdfTask<ArrayBuffer>;\n  /**\n   * Close pdf document\n   * @param doc - pdf document\n   * @returns task that file is closed or not\n   */\n  closeDocument: (doc: PdfDocumentObject) => PdfTask<boolean>;\n}\n\n/**\n * Method name of PdfEngine interface\n *\n * @public\n */\nexport type PdfEngineMethodName = keyof Required<PdfEngine>;\n\n/**\n * Arguments of PdfEngine method\n *\n * @public\n */\nexport type PdfEngineMethodArgs<P extends PdfEngineMethodName> = Readonly<\n  Parameters<Required<PdfEngine>[P]>\n>;\n\n/**\n * Return type of PdfEngine method\n *\n * @public\n */\nexport type PdfEngineMethodReturnType<P extends PdfEngineMethodName> = ReturnType<\n  Required<PdfEngine>[P]\n>;\n","import { PdfAlphaColor } from './pdf';\n\nexport interface WebAlphaColor {\n  color: string;\n  opacity: number;\n}\n\n/**\n * Convert a {@link PdfAlphaColor} to a CSS-style colour definition.\n *\n * @param c - the colour coming from PDFium (0-255 per channel)\n * @returns\n *   hex   – #RRGGBB (no alpha channel)\n *   opacity – 0-1 float suitable for CSS `opacity`/`rgba()`\n */\nexport function pdfAlphaColorToWebAlphaColor(c: PdfAlphaColor): WebAlphaColor {\n  const clamp = (n: number) => Math.max(0, Math.min(255, n));\n  const toHex = (n: number) => clamp(n).toString(16).padStart(2, '0');\n\n  const color = `#${toHex(c.red)}${toHex(c.green)}${toHex(c.blue)}` as const;\n  const opacity = clamp(c.alpha) / 255;\n\n  return { color, opacity };\n}\n\n/**\n * Convert a CSS hex colour + opacity back into {@link PdfAlphaColor}\n *\n * @param hex      - #RGB, #RRGGBB, or #rrggbb\n * @param opacity  - 0-1 float (values outside clamp automatically)\n */\nexport function webAlphaColorToPdfAlphaColor({ color, opacity }: WebAlphaColor): PdfAlphaColor {\n  // Normalise: #abc → #aabbcc\n  if (/^#?[0-9a-f]{3}$/i.test(color)) {\n    color = color.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, '#$1$1$2$2$3$3').toLowerCase();\n  }\n\n  const [, r, g, b] =\n    /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color) ??\n    (() => {\n      throw new Error(`Invalid hex colour: “${color}”`);\n    })();\n\n  const clamp = (n: number, hi = 255) => Math.max(0, Math.min(hi, n));\n\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: clamp(Math.round(opacity * 255)),\n  };\n}\n","/**\n * Parse a PDF date string **D:YYYYMMDDHHmmSSOHH'mm'** to ISO-8601.\n *\n * Returns `undefined` if the input is malformed.\n *\n * @public\n */\nexport function pdfDateToDate(pdf?: string): Date | undefined {\n  if (!pdf?.startsWith('D:') || pdf.length < 16) return;\n\n  const y = +pdf.slice(2, 6);\n  const mo = +pdf.slice(6, 8) - 1; // JS months: 0-based\n  const d = +pdf.slice(8, 10);\n  const H = +pdf.slice(10, 12);\n  const M = +pdf.slice(12, 14);\n  const S = +pdf.slice(14, 16);\n\n  return new Date(Date.UTC(y, mo, d, H, M, S));\n}\n\n/**\n * Convert a date to a PDF date string\n * @param date - date to convert\n * @returns PDF date string\n *\n * @public\n */\nexport function dateToPdfDate(date: Date = new Date()): string {\n  const z = (n: number, len = 2) => n.toString().padStart(len, '0');\n\n  const YYYY = date.getUTCFullYear();\n  const MM = z(date.getUTCMonth() + 1);\n  const DD = z(date.getUTCDate());\n  const HH = z(date.getUTCHours());\n  const mm = z(date.getUTCMinutes());\n  const SS = z(date.getUTCSeconds());\n\n  return `D:${YYYY}${MM}${DD}${HH}${mm}${SS}`;\n}\n","/**\n * Library contains the common definitions of data types and logic\n *\n * @remarks\n * The `@embedpdf/models` defines the interface and classes which are used to\n * handling PDF files.\n *\n * @packageDocumentation\n */\nexport * from './geometry';\nexport * from './logger';\nexport * from './pdf';\nexport * from './task';\nexport * from './color';\nexport * from './date';\n\n/**\n * ignore will do nothing when called.\n *\n * @public\n */\nexport function ignore() {}\n","import {\n  BasePlugin,\n  PluginRegistry,\n  createEmitter,\n  clamp,\n  setScale,\n  SET_PAGES,\n  SET_DOCUMENT,\n  getPagesWithRotatedSize,\n  SET_ROTATION,\n  createBehaviorEmitter,\n} from '@embedpdf/core';\nimport { ScrollPlugin, ScrollCapability } from '@embedpdf/plugin-scroll';\nimport { ViewportPlugin, ViewportCapability, ViewportMetrics } from '@embedpdf/plugin-viewport';\n\nimport { setInitialZoomLevel, setZoomLevel, ZoomAction } from './actions';\nimport {\n  ZoomPluginConfig,\n  ZoomState,\n  ZoomMode,\n  Point,\n  ZoomChangeEvent,\n  ZoomCapability,\n  ZoomPreset,\n  ZoomRangeStep,\n  VerticalZoomFocus,\n  ZoomRequest,\n} from './types';\nimport {\n  InteractionManagerCapability,\n  InteractionManagerPlugin,\n} from '@embedpdf/plugin-interaction-manager';\nimport { Rect, rotateRect } from '@embedpdf/models';\n\nexport class ZoomPlugin extends BasePlugin<\n  ZoomPluginConfig,\n  ZoomCapability,\n  ZoomState,\n  ZoomAction\n> {\n  static readonly id = 'zoom' as const;\n  /* ------------------------------------------------------------------ */\n  /* internals                                                           */\n  /* ------------------------------------------------------------------ */\n  private readonly zoom$ = createEmitter<ZoomChangeEvent>();\n  private readonly state$ = createBehaviorEmitter<ZoomState>();\n  private readonly viewport: ViewportCapability;\n  private readonly viewportPlugin: ViewportPlugin;\n  private readonly scroll: ScrollCapability;\n  private readonly interactionManager: InteractionManagerCapability | null;\n  private readonly presets: ZoomPreset[];\n  private readonly zoomRanges: ZoomRangeStep[];\n\n  private readonly minZoom: number;\n  private readonly maxZoom: number;\n  private readonly zoomStep: number;\n\n  /* ------------------------------------------------------------------ */\n  constructor(id: string, registry: PluginRegistry, cfg: ZoomPluginConfig) {\n    super(id, registry);\n\n    this.viewportPlugin = registry.getPlugin<ViewportPlugin>('viewport')!;\n    this.viewport = this.viewportPlugin.provides();\n    this.scroll = registry.getPlugin<ScrollPlugin>('scroll')!.provides();\n    const interactionManager = registry.getPlugin<InteractionManagerPlugin>('interaction-manager');\n    this.interactionManager = interactionManager?.provides() ?? null;\n    this.minZoom = cfg.minZoom ?? 0.25;\n    this.maxZoom = cfg.maxZoom ?? 10;\n    this.zoomStep = cfg.zoomStep ?? 0.1;\n    this.presets = cfg.presets ?? [];\n    this.zoomRanges = this.normalizeRanges(cfg.zoomRanges ?? []);\n    this.dispatch(setInitialZoomLevel(cfg.defaultZoomLevel));\n    /* keep \"automatic\" modes up to date -------------------------------- */\n    this.viewport.onViewportResize(() => this.recalcAuto(VerticalZoomFocus.Top), {\n      mode: 'debounce',\n      wait: 150,\n    });\n    this.coreStore.onAction(SET_ROTATION, () => this.recalcAuto(VerticalZoomFocus.Top));\n    this.coreStore.onAction(SET_PAGES, () => this.recalcAuto(VerticalZoomFocus.Top));\n    this.coreStore.onAction(SET_DOCUMENT, () => this.recalcAuto(VerticalZoomFocus.Top));\n    this.interactionManager?.registerMode({\n      id: 'marqueeZoom',\n      scope: 'page',\n      exclusive: true,\n      cursor: 'zoom-in',\n    });\n    this.resetReady();\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* capability                                                          */\n  /* ------------------------------------------------------------------ */\n  protected buildCapability(): ZoomCapability {\n    return {\n      onZoomChange: this.zoom$.on,\n      onStateChange: this.state$.on,\n      zoomIn: () => {\n        const cur = this.state.currentZoomLevel;\n        return this.handleRequest({ level: cur, delta: this.stepFor(cur) });\n      },\n      zoomOut: () => {\n        const cur = this.state.currentZoomLevel;\n        return this.handleRequest({ level: cur, delta: -this.stepFor(cur) });\n      },\n      zoomToArea: (pageIndex, rect) => this.handleZoomToArea(pageIndex, rect),\n      requestZoom: (level, c) => this.handleRequest({ level, center: c }),\n      requestZoomBy: (d, c) => {\n        const cur = this.state.currentZoomLevel;\n        const target = this.toZoom(cur + d);\n        return this.handleRequest({ level: target, center: c });\n      },\n      enableMarqueeZoom: () => {\n        this.interactionManager?.activate('marqueeZoom');\n      },\n      disableMarqueeZoom: () => {\n        this.interactionManager?.activate('default');\n      },\n      toggleMarqueeZoom: () => {\n        if (this.interactionManager?.getActiveMode() === 'marqueeZoom') {\n          this.interactionManager?.activate('default');\n        } else {\n          this.interactionManager?.activate('marqueeZoom');\n        }\n      },\n      isMarqueeZoomActive: () => this.interactionManager?.getActiveMode() === 'marqueeZoom',\n      getState: () => this.state,\n      getPresets: () => this.presets,\n    };\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* plugin life‑cycle                                                   */\n  /* ------------------------------------------------------------------ */\n  async initialize(): Promise<void> {\n    /* apply the initial zoom                                              */\n  }\n\n  async destroy() {\n    this.zoom$.clear();\n  }\n\n  /**\n   * Sort ranges once, make sure they are sane\n   */\n  private normalizeRanges(ranges: ZoomRangeStep[]): ZoomRangeStep[] {\n    return [...ranges]\n      .filter((r) => r.step > 0 && r.max > r.min) // basic sanity\n      .sort((a, b) => a.min - b.min);\n  }\n\n  /** pick the step that applies to a given numeric zoom */\n  private stepFor(zoom: number): number {\n    const r = this.zoomRanges.find((r) => zoom >= r.min && zoom < r.max);\n    return r ? r.step : this.zoomStep; // fallback\n  }\n\n  /** clamp + round helper reused later */\n  private toZoom(v: number) {\n    return parseFloat(clamp(v, this.minZoom, this.maxZoom).toFixed(2));\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* main entry – handles **every** zoom request                          */\n  /* ------------------------------------------------------------------ */\n  private handleRequest({\n    level,\n    delta = 0,\n    center,\n    focus = VerticalZoomFocus.Center,\n    align = 'keep',\n  }: ZoomRequest) {\n    const metrics = this.viewport.getMetrics();\n    const oldZoom = this.state.currentZoomLevel;\n\n    if (metrics.clientWidth === 0 || metrics.clientHeight === 0) {\n      return;\n    }\n\n    /* ------------------------------------------------------------------ */\n    /* step 1 – resolve the **target numeric zoom**                        */\n    /* ------------------------------------------------------------------ */\n    const base = typeof level === 'number' ? level : this.computeZoomForMode(level, metrics);\n\n    if (base === false) {\n      return;\n    }\n    const exactZoom = clamp(base + delta, this.minZoom, this.maxZoom);\n    const newZoom = Math.floor(exactZoom * 100) / 100;\n\n    /* ------------------------------------------------------------------ */\n    /* step 2 – figure out the viewport point we should keep under focus   */\n    /* ------------------------------------------------------------------ */\n    const focusPoint: Point = center ?? {\n      vx: metrics.clientWidth / 2,\n      vy: focus === VerticalZoomFocus.Top ? 0 : metrics.clientHeight / 2,\n    };\n\n    /* ------------------------------------------------------------------ */\n    /* step 3 – translate that into desired scroll offsets                 */\n    /* ------------------------------------------------------------------ */\n    const { desiredScrollLeft, desiredScrollTop } = this.computeScrollForZoomChange(\n      metrics,\n      oldZoom,\n      newZoom,\n      focusPoint,\n      align,\n    );\n\n    /* ------------------------------------------------------------------ */\n    /* step 4 – dispatch + notify                                          */\n    /* ------------------------------------------------------------------ */\n\n    if (!isNaN(desiredScrollLeft) && !isNaN(desiredScrollTop)) {\n      this.viewportPlugin.setViewportScrollMetrics({\n        scrollLeft: desiredScrollLeft,\n        scrollTop: desiredScrollTop,\n      });\n    }\n\n    this.dispatch(setZoomLevel(typeof level === 'number' ? newZoom : level, newZoom));\n    this.dispatchCoreAction(setScale(newZoom));\n    this.markReady();\n\n    this.viewport.scrollTo({\n      x: desiredScrollLeft,\n      y: desiredScrollTop,\n      behavior: 'instant',\n    });\n\n    const evt: ZoomChangeEvent = {\n      oldZoom,\n      newZoom,\n      level,\n      center: focusPoint,\n      desiredScrollLeft,\n      desiredScrollTop,\n      viewport: metrics,\n    };\n\n    this.zoom$.emit(evt);\n  }\n\n  /* ------------------------------------------------------------------ */\n  /* helpers                                                             */\n  /* ------------------------------------------------------------------ */\n\n  /** numeric zoom for Automatic / FitPage / FitWidth */\n  private computeZoomForMode(mode: ZoomMode, vp: ViewportMetrics): number | false {\n    const spreads = getPagesWithRotatedSize(this.coreState.core);\n    if (!spreads.length) return false;\n\n    const pgGap = this.scroll.getPageGap();\n    const vpGap = this.viewport.getViewportGap();\n\n    if (vp.clientWidth === 0 || vp.clientHeight === 0) {\n      return false;\n    }\n\n    // Available space after accounting for fixed viewport gaps\n    const availableWidth = vp.clientWidth - 2 * vpGap;\n    const availableHeight = vp.clientHeight - 2 * vpGap;\n\n    if (availableWidth <= 0 || availableHeight <= 0) {\n      return false;\n    }\n\n    let maxContentW = 0,\n      maxContentH = 0;\n\n    spreads.forEach((spread) => {\n      // Only include scalable content (pages + page gaps), not viewport gaps\n      const contentW = spread.reduce((s, p, i) => s + p.rotatedSize.width + (i ? pgGap : 0), 0);\n      const contentH = Math.max(...spread.map((p) => p.rotatedSize.height));\n      maxContentW = Math.max(maxContentW, contentW);\n      maxContentH = Math.max(maxContentH, contentH);\n    });\n\n    switch (mode) {\n      case ZoomMode.FitWidth:\n        return availableWidth / maxContentW;\n      case ZoomMode.FitPage:\n        return Math.min(availableWidth / maxContentW, availableHeight / maxContentH);\n      case ZoomMode.Automatic:\n        return Math.min(availableWidth / maxContentW, 1);\n      /* istanbul ignore next */\n      default:\n        return 1;\n    }\n  }\n\n  /** where to scroll so that *focus* stays stable after scaling          */\n  private computeScrollForZoomChange(\n    vp: ViewportMetrics,\n    oldZoom: number,\n    newZoom: number,\n    focus: Point,\n    align: 'keep' | 'center' = 'keep',\n  ) {\n    /* unscaled content size ------------------------------------------- */\n    const layout = this.scroll.getLayout();\n    const vpGap = this.viewport.getViewportGap();\n\n    const contentW = layout.totalContentSize.width;\n    const contentH = layout.totalContentSize.height;\n\n    // Available space for content (excluding fixed viewport gaps)\n    const availableWidth = vp.clientWidth - 2 * vpGap;\n    const availableHeight = vp.clientHeight - 2 * vpGap;\n\n    /* helper: offset if content is narrower than available space ------- */\n    const off = (availableSpace: number, cw: number, zoom: number) =>\n      cw * zoom < availableSpace ? (availableSpace - cw * zoom) / 2 : 0;\n\n    const offXold = off(availableWidth, contentW, oldZoom);\n    const offYold = off(availableHeight, contentH, oldZoom);\n\n    const offXnew = off(availableWidth, contentW, newZoom);\n    const offYnew = off(availableHeight, contentH, newZoom);\n\n    /* content coords of the focal point -------------------------------- */\n    // Adjust focus point to account for vpGap and centering offset\n    const cx = (vp.scrollLeft + focus.vx - vpGap - offXold) / oldZoom;\n    const cy = (vp.scrollTop + focus.vy - vpGap - offYold) / oldZoom;\n\n    /* new scroll so that (cx,cy) appears under focus again ------------- */\n    const baseLeft = cx * newZoom + vpGap + offXnew;\n    const baseTop = cy * newZoom + vpGap + offYnew;\n\n    const desiredScrollLeft =\n      align === 'center' ? baseLeft - vp.clientWidth / 2 : baseLeft - focus.vx;\n    const desiredScrollTop =\n      align === 'center' ? baseTop - vp.clientHeight / 2 : baseTop - focus.vy;\n\n    return {\n      desiredScrollLeft: Math.max(0, desiredScrollLeft),\n      desiredScrollTop: Math.max(0, desiredScrollTop),\n    };\n  }\n\n  private handleZoomToArea(pageIndex: number, rect: Rect) {\n    /* -------------------------------------------------- */\n    /* 0 – rotation that applies to this page             */\n    /* -------------------------------------------------- */\n    const rotation = this.coreState.core.rotation;\n\n    /* -------------------------------------------------- */\n    /* viewport + layout basics                           */\n    /* -------------------------------------------------- */\n    const vp = this.viewport.getMetrics();\n    const vpGap = this.viewport.getViewportGap();\n    const oldZ = this.state.currentZoomLevel;\n\n    const availableW = vp.clientWidth - 2 * vpGap;\n    const availableH = vp.clientHeight - 2 * vpGap;\n\n    const layout = this.scroll.getLayout();\n\n    /* which virtual item holds the page? */\n    const vItem = layout.virtualItems.find((it) =>\n      it.pageLayouts.some((p) => p.pageIndex === pageIndex),\n    );\n    if (!vItem) return;\n\n    /* the page layout inside that virtual item */\n    const pageRel = vItem.pageLayouts.find((p) => p.pageIndex === pageIndex)!;\n\n    /* -------------------------------------------------- */\n    /* 1 – rect → rotated‑page space                      */\n    /* -------------------------------------------------- */\n    const rotatedRect = rotateRect(\n      {\n        width: pageRel.width,\n        height: pageRel.height,\n      },\n      rect,\n      rotation,\n    );\n\n    /* -------------------------------------------------- */\n    /* 2 – numeric zoom so the rect fits                  */\n    /* -------------------------------------------------- */\n    const targetZoom = this.toZoom(\n      Math.min(availableW / rotatedRect.size.width, availableH / rotatedRect.size.height),\n    );\n\n    /* -------------------------------------------------- */\n    /* 3 – centre of that rect in *content* coordinates   */\n    /* -------------------------------------------------- */\n    const pageAbsX = vItem.x + pageRel.x;\n    const pageAbsY = vItem.y + pageRel.y;\n\n    const cxContent = pageAbsX + rotatedRect.origin.x + rotatedRect.size.width / 2;\n    const cyContent = pageAbsY + rotatedRect.origin.y + rotatedRect.size.height / 2;\n\n    /* -------------------------------------------------- */\n    /* 4 – centre in *viewport* coords before zoom        */\n    /* -------------------------------------------------- */\n    const off = (avail: number, cw: number, z: number) =>\n      cw * z < avail ? (avail - cw * z) / 2 : 0;\n\n    const offXold = off(availableW, layout.totalContentSize.width, oldZ);\n    const offYold = off(availableH, layout.totalContentSize.height, oldZ);\n\n    const centerVX = vpGap + offXold + cxContent * oldZ - vp.scrollLeft;\n    const centerVY = vpGap + offYold + cyContent * oldZ - vp.scrollTop;\n\n    /* -------------------------------------------------- */\n    /* 5 – hand off to the generic zoom handler           */\n    /* -------------------------------------------------- */\n    this.handleRequest({\n      level: targetZoom,\n      center: { vx: centerVX, vy: centerVY },\n      align: 'center',\n    });\n  }\n\n  /** recalculates Automatic / Fit* when viewport or pages change */\n  private recalcAuto(focus?: VerticalZoomFocus) {\n    const s = this.state;\n    if (\n      s.zoomLevel === ZoomMode.Automatic ||\n      s.zoomLevel === ZoomMode.FitPage ||\n      s.zoomLevel === ZoomMode.FitWidth\n    )\n      this.handleRequest({ level: s.zoomLevel, focus });\n  }\n\n  override onStoreUpdated(_prevState: ZoomState, newState: ZoomState): void {\n    this.state$.emit(newState);\n  }\n}\n","import { PluginPackage } from '@embedpdf/core';\n\nimport { ZoomAction } from './actions';\nimport { manifest, ZOOM_PLUGIN_ID } from './manifest';\nimport { zoomReducer, initialState } from './reducer';\nimport { ZoomPluginConfig, ZoomState } from './types';\nimport { ZoomPlugin } from './zoom-plugin';\n\nexport const ZoomPluginPackage: PluginPackage<ZoomPlugin, ZoomPluginConfig, ZoomState, ZoomAction> =\n  {\n    manifest,\n    create: (registry, _engine, config) => new ZoomPlugin(ZOOM_PLUGIN_ID, registry, config),\n    reducer: zoomReducer,\n    initialState,\n  };\n\nexport * from './zoom-plugin';\nexport * from './types';\nexport * from './manifest';\nexport { initialState };\n","import { useCapability, usePlugin } from '@embedpdf/core/react';\nimport { initialState, ZoomPlugin, ZoomState } from '@embedpdf/plugin-zoom';\nimport { useEffect, useState } from 'react';\n\nexport const useZoomCapability = () => useCapability<ZoomPlugin>(ZoomPlugin.id);\nexport const useZoomPlugin = () => usePlugin<ZoomPlugin>(ZoomPlugin.id);\n\nexport const useZoom = () => {\n  const { provides } = useZoomCapability();\n  const [state, setState] = useState<ZoomState>(initialState);\n\n  useEffect(() => {\n    return provides?.onStateChange((action) => {\n      setState(action);\n    });\n  }, [provides]);\n\n  return {\n    state,\n    provides,\n  };\n};\n","import { useEffect, useRef } from 'react';\nimport { useCapability } from '@embedpdf/core/react';\nimport { ViewportPlugin } from '@embedpdf/plugin-viewport';\nimport { ZoomState } from '@embedpdf/plugin-zoom';\n\nimport { useZoomCapability } from './use-zoom';\n\nexport function usePinch() {\n  const { provides: viewportProvides } = useCapability<ViewportPlugin>('viewport');\n  const { provides: zoomProvides } = useZoomCapability();\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element || !viewportProvides || !zoomProvides) {\n      return;\n    }\n\n    // Check if we're on the client side\n    if (typeof window === 'undefined') {\n      return;\n    }\n\n    let hammer: any | undefined;\n    let initialZoom = 0; // numeric scale at pinchstart\n    let lastCenter = { x: 0, y: 0 };\n\n    const getState = (): ZoomState => zoomProvides.getState();\n\n    const updateTransform = (scale: number) => {\n      // 1 → no scale; we only scale *relatively* to the start\n      element.style.transform = `scale(${scale})`;\n    };\n\n    const resetTransform = () => {\n      element.style.transform = 'none';\n      element.style.transformOrigin = '0 0';\n    };\n\n    const pinchStart = (e: HammerInput) => {\n      initialZoom = getState().currentZoomLevel;\n\n      const contRect = viewportProvides.getBoundingRect();\n\n      lastCenter = {\n        x: e.center.x - contRect.origin.x,\n        y: e.center.y - contRect.origin.y,\n      };\n\n      // put the transform-origin under the fingers so the preview feels right\n      const innerRect = element.getBoundingClientRect();\n      element.style.transformOrigin = `${e.center.x - innerRect.left}px ${e.center.y - innerRect.top}px`;\n\n      // stop the browser’s own pinch-zoom\n      if (e.srcEvent?.cancelable) {\n        e.srcEvent.preventDefault();\n        e.srcEvent.stopPropagation();\n      }\n    };\n\n    const pinchMove = (e: HammerInput) => {\n      updateTransform(e.scale); // *only* CSS, no real zoom yet\n      if (e.srcEvent?.cancelable) {\n        e.srcEvent.preventDefault();\n        e.srcEvent.stopPropagation();\n      }\n    };\n\n    const pinchEnd = (e: HammerInput) => {\n      // translate the relative hammer scale into a delta for requestZoomBy\n      const delta = (e.scale - 1) * initialZoom;\n      zoomProvides.requestZoomBy(delta, { vx: lastCenter.x, vy: lastCenter.y });\n\n      resetTransform();\n      initialZoom = 0;\n    };\n\n    // Dynamically import and setup Hammer\n    const setupHammer = async () => {\n      try {\n        const Hammer = (await import('hammerjs')).default;\n\n        /* ------------------------------------------------------------------ */\n        /* Hammer setup                                                        */\n        /* ------------------------------------------------------------------ */\n        const inputClass = (() => {\n          const MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n          const SUPPORT_TOUCH = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n          const SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n          if (SUPPORT_ONLY_TOUCH) return Hammer.TouchInput;\n          if (!SUPPORT_TOUCH) return Hammer.MouseInput;\n          return Hammer.TouchMouseInput;\n        })();\n\n        hammer = new Hammer(element, {\n          touchAction: 'pan-x pan-y', // allow scroll in every direction\n          inputClass,\n        });\n\n        hammer.get('pinch').set({ enable: true, pointers: 2, threshold: 0.1 });\n\n        hammer.on('pinchstart', pinchStart);\n        hammer.on('pinchmove', pinchMove);\n        hammer.on('pinchend', pinchEnd);\n      } catch (error) {\n        console.warn('Failed to load HammerJS:', error);\n      }\n    };\n\n    setupHammer();\n\n    return () => {\n      hammer?.destroy();\n      resetTransform();\n    };\n  }, [viewportProvides, zoomProvides]);\n\n  return { elementRef };\n}\n","import { ReactNode } from 'react';\n\nimport { usePinch } from '../hooks';\n\ntype PinchWrapperProps = Omit<React.HTMLAttributes<HTMLDivElement>, 'style'> & {\n  children: ReactNode;\n  style?: React.CSSProperties;\n};\n\nexport function PinchWrapper({ children, style, ...props }: PinchWrapperProps) {\n  const { elementRef } = usePinch();\n\n  return (\n    <div\n      ref={elementRef}\n      {...props}\n      style={{\n        ...style,\n        display: 'block',\n        width: 'fit-content',\n        overflow: 'visible',\n        boxSizing: 'border-box',\n        margin: '0px auto',\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n","import { useEffect, useMemo, useRef, useState } from 'react';\nimport type { PointerEventHandlers } from '@embedpdf/plugin-interaction-manager';\nimport { usePointerHandlers } from '@embedpdf/plugin-interaction-manager/react';\nimport { Rect } from '@embedpdf/models';\n\nimport { useZoomCapability } from '../hooks/use-zoom';\n\ninterface MarqueeZoomProps {\n  /** Index of the page this layer lives on */\n  pageIndex: number;\n  /** Scale of the page */\n  scale: number;\n  /** Width of the page */\n  pageWidth: number;\n  /** Height of the page */\n  pageHeight: number;\n  /** Optional CSS class applied to the marquee rectangle */\n  className?: string;\n  /** Stroke / fill colours (defaults below) */\n  stroke?: string;\n  fill?: string;\n}\n\n/**\n * Draws a marquee rectangle while the user drags.\n * Hook it into the interaction-manager with modeId = 'marqueeZoom'.\n */\nexport const MarqueeZoom = ({\n  pageIndex,\n  scale,\n  pageWidth,\n  pageHeight,\n  className,\n  stroke = 'rgba(33,150,243,0.8)',\n  fill = 'rgba(33,150,243,0.15)',\n}: MarqueeZoomProps) => {\n  /* ------------------------------------------------------------------ */\n  /* zoom capability                                                   */\n  /* ------------------------------------------------------------------ */\n  const { provides: zoom } = useZoomCapability();\n\n  /* ------------------------------------------------------------------ */\n  /* integration with interaction-manager                               */\n  /* ------------------------------------------------------------------ */\n  const { register } = usePointerHandlers({ modeId: 'marqueeZoom', pageIndex });\n\n  /* ------------------------------------------------------------------ */\n  /* helpers                                                            */\n  /* ------------------------------------------------------------------ */\n  const clamp = (v: number, min: number, max: number) => Math.max(min, Math.min(max, v));\n\n  /* ------------------------------------------------------------------ */\n  /* local state – start / current drag position                        */\n  /* ------------------------------------------------------------------ */\n  const startRef = useRef<{ x: number; y: number } | null>(null);\n  const [rect, setRect] = useState<Rect | null>(null);\n\n  /* page size in **PDF-space** (unscaled) ----------------------------- */\n  const pageWidthPDF = pageWidth / scale;\n  const pageHeightPDF = pageHeight / scale;\n\n  /* ------------------------------------------------------------------ */\n  /* pointer handlers                                                   */\n  /* ------------------------------------------------------------------ */\n  const handlers = useMemo<PointerEventHandlers<PointerEvent>>(\n    () => ({\n      onPointerDown: (pos, evt) => {\n        startRef.current = pos;\n        setRect({ origin: { x: pos.x, y: pos.y }, size: { width: 0, height: 0 } });\n        (evt.target as HTMLElement)?.setPointerCapture?.(evt.pointerId);\n      },\n      onPointerMove: (pos) => {\n        if (!startRef.current) return;\n        /* clamp current position to the page bounds */\n        const curX = clamp(pos.x, 0, pageWidthPDF);\n        const curY = clamp(pos.y, 0, pageHeightPDF);\n\n        const { x: sx, y: sy } = startRef.current;\n        const left = Math.min(sx, curX);\n        const top = Math.min(sy, curY);\n        const width = Math.abs(curX - sx);\n        const height = Math.abs(curY - sy);\n\n        setRect({ origin: { x: left, y: top }, size: { width, height } });\n      },\n      onPointerUp: (_, evt) => {\n        if (rect && zoom) {\n          const dragPx = Math.max(rect.size.width, rect.size.height) * scale;\n          if (dragPx > 5) {\n            // real drag → zoom to it\n            zoom.zoomToArea(pageIndex, rect);\n          } else {\n            // tiny drag → simple zoom-in\n            zoom.zoomIn();\n          }\n        }\n\n        startRef.current = null;\n        setRect(null);\n        (evt.target as HTMLElement)?.releasePointerCapture?.(evt.pointerId);\n      },\n      onPointerCancel: (_, evt) => {\n        startRef.current = null;\n        setRect(null);\n        (evt.target as HTMLElement)?.releasePointerCapture?.(evt.pointerId);\n      },\n    }),\n    [pageWidthPDF, pageWidthPDF, zoom, scale, rect, pageIndex],\n  );\n\n  /* register with the interaction-manager */\n  useEffect(() => {\n    if (!register) return;\n    return register(handlers);\n  }, [register, handlers]);\n\n  /* ------------------------------------------------------------------ */\n  /* render                                                              */\n  /* ------------------------------------------------------------------ */\n  if (!rect) return null; // nothing to draw\n\n  return (\n    <div\n      /* Each page wrapper is position:relative, so absolute is fine */\n      style={{\n        position: 'absolute',\n        pointerEvents: 'none', // ignore hits – underlying page still gets events\n        left: rect.origin.x * scale,\n        top: rect.origin.y * scale,\n        width: rect.size.width * scale,\n        height: rect.size.height * scale,\n        border: `1px solid ${stroke}`,\n        background: fill,\n        boxSizing: 'border-box',\n      }}\n      className={className}\n    />\n  );\n};\n","class b {\n  constructor() {\n    this.dependencyGraph = /* @__PURE__ */ new Map();\n  }\n  addNode(e, t = []) {\n    this.dependencyGraph.set(e, new Set(t));\n  }\n  hasCircularDependencies() {\n    const e = /* @__PURE__ */ new Set(), t = /* @__PURE__ */ new Set(), r = (s) => {\n      e.add(s), t.add(s);\n      const n = this.dependencyGraph.get(s) || /* @__PURE__ */ new Set();\n      for (const a of n)\n        if (e.has(a)) {\n          if (t.has(a))\n            return !0;\n        } else if (r(a)) return !0;\n      return t.delete(s), !1;\n    };\n    for (const s of this.dependencyGraph.keys())\n      if (!e.has(s) && r(s))\n        return !0;\n    return !1;\n  }\n  resolveLoadOrder() {\n    if (this.hasCircularDependencies())\n      throw new Error(\"Circular dependencies detected\");\n    const e = [], t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), s = (n) => {\n      if (r.has(n)) throw new Error(\"Circular dependency\");\n      if (t.has(n)) return;\n      r.add(n);\n      const a = this.dependencyGraph.get(n) || /* @__PURE__ */ new Set();\n      for (const o of a)\n        s(o);\n      r.delete(n), t.add(n), e.push(n);\n    };\n    for (const n of this.dependencyGraph.keys())\n      t.has(n) || s(n);\n    return e;\n  }\n}\nclass l extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginRegistrationError\";\n  }\n}\nclass u extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginNotFoundError\";\n  }\n}\nclass m extends Error {\n  constructor(e) {\n    super(e), this.name = \"CircularDependencyError\";\n  }\n}\nclass K extends Error {\n  constructor(e) {\n    super(e), this.name = \"CapabilityNotFoundError\";\n  }\n}\nclass H extends Error {\n  constructor(e) {\n    super(e), this.name = \"CapabilityConflictError\";\n  }\n}\nclass W extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginInitializationError\";\n  }\n}\nclass R extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginConfigurationError\";\n  }\n}\nclass D {\n  /**\n   * Initializes the PluginStore with the main store and plugin ID.\n   * @param store The main store instance.\n   * @param pluginId The unique identifier for the plugin.\n   */\n  constructor(e, t) {\n    this.store = e, this.pluginId = t;\n  }\n  /**\n   * Gets the current state of the plugin.\n   * @returns The plugin's state.\n   */\n  getState() {\n    return this.store.getState().plugins[this.pluginId];\n  }\n  /**\n   * Dispatches an action for the plugin and returns the *new* global state.\n   * If you only need the plugin’s updated state, call `getState()` afterward.\n   * @param action The action to dispatch.\n   * @returns The updated global store state (after plugin reducer).\n   */\n  dispatch(e) {\n    return this.store.dispatchToPlugin(this.pluginId, e);\n  }\n  /**\n   * Subscribes to state changes only for this specific plugin.\n   * You now receive (action, newPluginState, oldPluginState) in the callback.\n   *\n   * @param listener The callback to invoke when plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToState(e) {\n    return this.store.subscribeToPlugin(this.pluginId, (t, r, s) => {\n      e(\n        t,\n        r,\n        s\n      );\n    });\n  }\n  /**\n   * Subscribes to a specific action type for the plugin.\n   * This still uses the main store's `onAction`, so you get the *global*\n   * old/new store states there. If you specifically want old/new plugin state,\n   * use `subscribeToState` instead.\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction(e, t) {\n    return this.store.onAction(e, (r, s, n) => {\n      t(\n        r,\n        s.plugins[this.pluginId],\n        n.plugins[this.pluginId]\n      );\n    });\n  }\n}\nconst g = \"LOAD_DOCUMENT\", f = \"SET_DOCUMENT\", p = \"SET_DOCUMENT_ERROR\", y = \"SET_SCALE\", w = \"SET_ROTATION\", E = \"SET_PAGES\", O = [\n  g,\n  f,\n  p,\n  y,\n  w,\n  E\n], Z = () => ({ type: g }), I = (i) => ({\n  type: f,\n  payload: i\n}), V = (i) => ({\n  type: p,\n  payload: i\n}), J = (i) => ({ type: y, payload: i }), Y = (i) => ({\n  type: w,\n  payload: i\n}), Q = (i) => ({\n  type: E,\n  payload: i\n});\nclass A {\n  /**\n   * Initializes the store with the provided core state.\n   * @param reducer          The core reducer function\n   * @param initialCoreState The initial core state\n   */\n  constructor(e, t) {\n    this.initialCoreState = t, this.pluginReducers = {}, this.listeners = [], this.pluginListeners = {}, this.state = { core: t, plugins: {} }, this.coreReducer = e;\n  }\n  /**\n   * Adds a reducer for a plugin-specific state.\n   * @param pluginId The unique identifier for the plugin.\n   * @param reducer The reducer function for the plugin state.\n   * @param initialState The initial state for the plugin.\n   */\n  addPluginReducer(e, t, r) {\n    this.state.plugins[e] = r, this.pluginReducers[e] = t;\n  }\n  /**\n   * Dispatches an action *only* to the core reducer.\n   * Notifies the global store listeners with (action, newState, oldState).\n   *\n   * @param action The action to dispatch, typed as CoreAction\n   * @returns The updated *global* store state\n   */\n  dispatchToCore(e) {\n    if (!this.coreReducer)\n      return this.getState();\n    const t = this.getState();\n    this.state.core = this.coreReducer(this.state.core, e);\n    const r = this.getState();\n    return this.listeners.forEach((s) => s(e, r, t)), r;\n  }\n  /**\n   * Dispatches an action *only* to a specific plugin.\n   * Optionally notifies global store listeners if `notifyGlobal` is true.\n   * Always notifies plugin-specific listeners with (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId   The plugin identifier\n   * @param action     The plugin action to dispatch\n   * @param notifyGlobal Whether to also notify global store listeners\n   * @returns The updated *global* store state\n   */\n  dispatchToPlugin(e, t, r = !0) {\n    const s = this.getState(), n = this.pluginReducers[e];\n    if (!n)\n      return s;\n    const a = s.plugins[e], o = n(a, t);\n    this.state.plugins[e] = o;\n    const c = this.getState();\n    return r && this.listeners.forEach((h) => h(t, c, s)), this.pluginListeners[e] && this.pluginListeners[e].forEach((h) => {\n      h(t, o, a);\n    }), o;\n  }\n  /**\n   * Dispatches an action to update the state using:\n   * - the core reducer (if it's a CoreAction)\n   * - *all* plugin reducers (regardless of action type), with no global notify for each plugin\n   *\n   * Returns the new *global* store state after all reducers have processed the action.\n   *\n   * @param action The action to dispatch (can be CoreAction or any Action).\n   */\n  dispatch(e) {\n    const t = this.getState();\n    this.isCoreAction(e) && (this.state.core = this.coreReducer(this.state.core, e));\n    for (const s in this.pluginReducers) {\n      const n = this.pluginReducers[s], a = t.plugins[s];\n      n && (this.state.plugins[s] = n(a, e));\n    }\n    const r = this.getState();\n    return this.listeners.forEach((s) => s(e, r, t)), r;\n  }\n  /**\n   * Returns a shallow copy of the current state.\n   * @returns The current store state.\n   */\n  getState() {\n    return {\n      core: { ...this.state.core },\n      plugins: { ...this.state.plugins }\n    };\n  }\n  /**\n   * Subscribes a listener to *global* state changes.\n   * The callback signature is now (action, newState, oldState).\n   *\n   * @param listener The callback to invoke on state changes\n   * @returns A function to unsubscribe the listener\n   */\n  subscribe(e) {\n    return this.listeners.push(e), () => {\n      this.listeners = this.listeners.filter((t) => t !== e);\n    };\n  }\n  /**\n   * Subscribes a listener to *plugin-specific* state changes.\n   * The callback signature is now (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId The unique identifier for the plugin.\n   * @param listener The callback to invoke on plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToPlugin(e, t) {\n    if (!(e in this.state.plugins))\n      throw new Error(\n        `Plugin state not found for plugin \"${e}\". Did you forget to call addPluginReducer?`\n      );\n    return this.pluginListeners[e] || (this.pluginListeners[e] = []), this.pluginListeners[e].push(t), () => {\n      this.pluginListeners[e] = this.pluginListeners[e].filter((r) => r !== t), this.pluginListeners[e].length === 0 && delete this.pluginListeners[e];\n    };\n  }\n  /**\n   * Subscribes to a specific action type (only from the core's action union).\n   * The callback signature is (action, newState, oldState).\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction(e, t) {\n    return this.subscribe((r, s, n) => {\n      r.type === e && t(r, s, n);\n    });\n  }\n  /**\n   * Gets a PluginStore handle for a specific plugin.\n   * @param pluginId The unique identifier for the plugin.\n   * @returns A PluginStore instance for the plugin.\n   */\n  getPluginStore(e) {\n    if (!(e in this.state.plugins))\n      throw new Error(\n        `Plugin state not found for plugin \"${e}\". Did you forget to call addPluginReducer?`\n      );\n    return new D(this, e);\n  }\n  /**\n   * Helper method to check if an action is a CoreAction.\n   * Adjust if you have a more refined way to differentiate CoreAction vs. any other Action.\n   */\n  isCoreAction(e) {\n    return O.includes(e.type);\n  }\n  /**\n   * Destroy the store: drop every listener and plugin reducer\n   */\n  destroy() {\n    var e, t;\n    this.listeners.length = 0;\n    for (const r in this.pluginListeners)\n      (t = (e = this.pluginListeners[r]) == null ? void 0 : e.splice) == null || t.call(e, 0);\n    this.pluginListeners = {}, this.pluginReducers = {}, this.state.plugins = {}, this.state.core = { ...this.initialCoreState };\n  }\n}\nvar C = /* @__PURE__ */ ((i) => (i[i.Degree0 = 0] = \"Degree0\", i[i.Degree90 = 1] = \"Degree90\", i[i.Degree180 = 2] = \"Degree180\", i[i.Degree270 = 3] = \"Degree270\", i))(C || {});\nfunction T(i) {\n  const { width: e, height: t } = i;\n  return {\n    width: t,\n    height: e\n  };\n}\nfunction X(i, e, t) {\n  return i = e % 2 === 0 ? i : T(i), {\n    width: i.width * t,\n    height: i.height * t\n  };\n}\nvar z = \"­\", M = \"​\", L = \"⁠\", $ = \"\\uFEFF\", F = \"￾\", N = \"￿\", k = Object.freeze([\n  z,\n  M,\n  L,\n  $,\n  F,\n  N\n]);\nnew RegExp(`[${k.join(\"\")}]`, \"g\");\nvar P = Object.freeze([\n  { id: 0, label: \"Normal\", css: \"normal\" },\n  { id: 1, label: \"Multiply\", css: \"multiply\" },\n  { id: 2, label: \"Screen\", css: \"screen\" },\n  { id: 3, label: \"Overlay\", css: \"overlay\" },\n  { id: 4, label: \"Darken\", css: \"darken\" },\n  { id: 5, label: \"Lighten\", css: \"lighten\" },\n  { id: 6, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10, label: \"Difference\", css: \"difference\" },\n  { id: 11, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12, label: \"Hue\", css: \"hue\" },\n  { id: 13, label: \"Saturation\", css: \"saturation\" },\n  { id: 14, label: \"Color\", css: \"color\" },\n  { id: 15, label: \"Luminosity\", css: \"luminosity\" }\n]);\nP.reduce(\n  (i, e) => (i[e.id] = e, i),\n  {}\n);\nP.reduce((i, e) => (i[e.css] = e.id, i), {});\nP.map((i) => ({\n  value: i.id,\n  label: i.label\n}));\nvar _ = Object.freeze({\n  1: \"invisible\",\n  2: \"hidden\",\n  4: \"print\",\n  8: \"noZoom\",\n  16: \"noRotate\",\n  32: \"noView\",\n  64: \"readOnly\",\n  128: \"locked\",\n  256: \"toggleNoView\"\n});\nObject.entries(\n  _\n).reduce(\n  (i, [e, t]) => (i[t] = Number(e), i),\n  {}\n);\nconst j = (i) => ({\n  scale: (i == null ? void 0 : i.scale) ?? 1,\n  rotation: (i == null ? void 0 : i.rotation) ?? C.Degree0,\n  document: null,\n  pages: [],\n  loading: !1,\n  error: null\n}), q = (i, e) => {\n  switch (e.type) {\n    case g:\n      return {\n        ...i,\n        loading: !0,\n        error: null\n      };\n    case f:\n      return {\n        ...i,\n        document: e.payload,\n        pages: e.payload.pages.map((t) => [t]),\n        loading: !1,\n        error: null\n      };\n    case w:\n      return {\n        ...i,\n        rotation: e.payload\n      };\n    case E:\n      return {\n        ...i,\n        pages: e.payload\n      };\n    case p:\n      return {\n        ...i,\n        loading: !1,\n        error: e.payload\n      };\n    case y:\n      return {\n        ...i,\n        scale: e.payload\n      };\n    default:\n      return i;\n  }\n};\nclass ee {\n  constructor(e, t) {\n    this.plugins = /* @__PURE__ */ new Map(), this.manifests = /* @__PURE__ */ new Map(), this.capabilities = /* @__PURE__ */ new Map(), this.status = /* @__PURE__ */ new Map(), this.configurations = /* @__PURE__ */ new Map(), this.engineInitialized = !1, this.initPromise = null, this.pendingRegistrations = [], this.processingRegistrations = [], this.initialized = !1, this.isInitializing = !1, this.pluginsReadyPromise = null, this.destroyed = !1, this.resolver = new b(), this.engine = e, this.initialCoreState = j(t), this.store = new A(q, this.initialCoreState);\n  }\n  /**\n   * Ensure engine is initialized before proceeding\n   */\n  async ensureEngineInitialized() {\n    this.engineInitialized || (this.engine.initialize ? (await this.engine.initialize().toPromise(), this.engineInitialized = !0) : this.engineInitialized = !0);\n  }\n  /**\n   * Register a plugin without initializing it\n   */\n  registerPlugin(e, t) {\n    if (this.initialized && !this.isInitializing)\n      throw new l(\"Cannot register plugins after initialization\");\n    this.validateManifest(e.manifest), this.store.addPluginReducer(\n      e.manifest.id,\n      // We need one type assertion here since we can't fully reconcile TAction with Action\n      // due to TypeScript's type system limitations with generic variance\n      e.reducer,\n      typeof e.initialState == \"function\" ? e.initialState(\n        this.initialCoreState,\n        {\n          ...e.manifest.defaultConfig,\n          ...t\n        }\n      ) : e.initialState\n    ), this.pendingRegistrations.push({\n      package: e,\n      config: t\n    });\n  }\n  /**\n   * Get the central store instance\n   */\n  getStore() {\n    return this.store;\n  }\n  /**\n   * Get the engine instance\n   */\n  getEngine() {\n    return this.engine;\n  }\n  /**\n   * Get a promise that resolves when all plugins are ready\n   */\n  pluginsReady() {\n    return this.pluginsReadyPromise ? this.pluginsReadyPromise : (this.pluginsReadyPromise = (async () => {\n      this.initialized || await this.initialize();\n      const e = Array.from(this.plugins.values()).map(\n        (t) => typeof t.ready == \"function\" ? t.ready() : Promise.resolve()\n      );\n      await Promise.all(e);\n    })(), this.pluginsReadyPromise);\n  }\n  /**\n   * INITIALISE THE REGISTRY – runs once no-matter-how-many calls   *\n   */\n  async initialize() {\n    if (this.destroyed)\n      throw new l(\"Registry has been destroyed\");\n    return this.initPromise ? this.initPromise : (this.initPromise = (async () => {\n      var e;\n      if (this.initialized)\n        throw new l(\"Registry is already initialized\");\n      this.isInitializing = !0;\n      try {\n        if (await this.ensureEngineInitialized(), this.destroyed)\n          return;\n        for (; this.pendingRegistrations.length > 0; ) {\n          if (this.destroyed)\n            return;\n          this.processingRegistrations = [...this.pendingRegistrations], this.pendingRegistrations = [];\n          for (const r of this.processingRegistrations) {\n            const s = /* @__PURE__ */ new Set(), n = [...r.package.manifest.requires, ...r.package.manifest.optional];\n            for (const a of n) {\n              const o = this.processingRegistrations.find(\n                (c) => c.package.manifest.provides.includes(a)\n              );\n              o && s.add(o.package.manifest.id);\n            }\n            this.resolver.addNode(r.package.manifest.id, [...s]);\n          }\n          const t = this.resolver.resolveLoadOrder();\n          for (const r of t) {\n            const s = this.processingRegistrations.find((n) => n.package.manifest.id === r);\n            await this.initializePlugin(s.package.manifest, s.package.create, s.config);\n          }\n          this.processingRegistrations = [], this.resolver = new b();\n        }\n        for (const t of this.plugins.values())\n          await ((e = t.postInitialize) == null ? void 0 : e.call(t).catch((r) => {\n            console.error(`Error in postInitialize for plugin ${t.id}`, r), this.status.set(t.id, \"error\");\n          }));\n        this.initialized = !0;\n      } catch (t) {\n        throw t instanceof Error ? new m(\n          `Failed to resolve plugin dependencies: ${t.message}`\n        ) : t;\n      } finally {\n        this.isInitializing = !1;\n      }\n    })(), this.initPromise);\n  }\n  /**\n   * Initialize a single plugin with all necessary checks\n   */\n  async initializePlugin(e, t, r) {\n    const s = {\n      ...e.defaultConfig,\n      ...r\n    };\n    this.validateConfig(e.id, s, e.defaultConfig);\n    const n = t(this, this.engine, s);\n    this.validatePlugin(n);\n    for (const a of e.requires)\n      if (!this.capabilities.has(a))\n        throw new l(\n          `Missing required capability: ${a} for plugin ${e.id}`\n        );\n    for (const a of e.optional)\n      this.capabilities.has(a) && console.debug(`Optional capability ${a} is available for plugin ${e.id}`);\n    console.log(\"initializePlugin\", e.id, e.provides);\n    for (const a of e.provides) {\n      if (this.capabilities.has(a))\n        throw new l(\n          `Capability ${a} is already provided by plugin ${this.capabilities.get(a)}`\n        );\n      this.capabilities.set(a, e.id);\n    }\n    this.plugins.set(e.id, n), this.manifests.set(e.id, e), this.status.set(e.id, \"registered\"), this.configurations.set(e.id, s);\n    try {\n      n.initialize && await n.initialize(s), this.status.set(e.id, \"active\");\n    } catch (a) {\n      throw this.plugins.delete(e.id), this.manifests.delete(e.id), console.log(\"initializePlugin failed\", e.id, e.provides), e.provides.forEach((o) => this.capabilities.delete(o)), a;\n    }\n  }\n  getPluginConfig(e) {\n    const t = this.configurations.get(e);\n    if (!t)\n      throw new u(`Configuration for plugin ${e} not found`);\n    return t;\n  }\n  validateConfig(e, t, r) {\n    const n = Object.keys(r).filter((a) => !t.hasOwnProperty(a));\n    if (n.length > 0)\n      throw new R(\n        `Missing required configuration keys for plugin ${e}: ${n.join(\", \")}`\n      );\n  }\n  async updatePluginConfig(e, t) {\n    const r = this.getPlugin(e);\n    if (!r)\n      throw new u(`Plugin ${e} not found`);\n    const s = this.manifests.get(e), n = this.configurations.get(e);\n    if (!s || !n)\n      throw new u(`Plugin ${e} not found`);\n    const a = {\n      ...n,\n      ...t\n    };\n    this.validateConfig(e, a, s.defaultConfig), this.configurations.set(e, a), r.initialize && await r.initialize(a);\n  }\n  /**\n   * Register multiple plugins at once\n   */\n  registerPluginBatch(e) {\n    for (const t of e)\n      this.registerPlugin(t.package, t.config);\n  }\n  /**\n   * Unregister a plugin\n   */\n  async unregisterPlugin(e) {\n    const t = this.plugins.get(e);\n    if (!t)\n      throw new u(`Plugin ${e} is not registered`);\n    const r = this.manifests.get(e);\n    if (!r)\n      throw new u(`Manifest for plugin ${e} not found`);\n    for (const [s, n] of this.manifests.entries()) {\n      if (s === e) continue;\n      if ([...n.requires, ...n.optional].some(\n        (o) => r.provides.includes(o)\n      ))\n        throw new l(\n          `Cannot unregister plugin ${e}: plugin ${s} depends on it`\n        );\n    }\n    try {\n      t.destroy && await t.destroy();\n      for (const s of r.provides)\n        this.capabilities.delete(s);\n      this.plugins.delete(e), this.manifests.delete(e), this.status.delete(e);\n    } catch (s) {\n      throw s instanceof Error ? new Error(`Failed to unregister plugin ${e}: ${s.message}`) : s;\n    }\n  }\n  /**\n   * Get a plugin instance\n   * @param pluginId The ID of the plugin to get\n   * @returns The plugin instance or null if not found\n   */\n  getPlugin(e) {\n    const t = this.plugins.get(e);\n    return t || null;\n  }\n  /**\n   * Get a plugin that provides a specific capability\n   * @param capability The capability to get a provider for\n   * @returns The plugin providing the capability or null if not found\n   */\n  getCapabilityProvider(e) {\n    const t = this.capabilities.get(e);\n    return t ? this.getPlugin(t) : null;\n  }\n  /**\n   * Check if a capability is available\n   */\n  hasCapability(e) {\n    return this.capabilities.has(e);\n  }\n  /**\n   * Get all registered plugins\n   */\n  getAllPlugins() {\n    return Array.from(this.plugins.values());\n  }\n  /**\n   * Get plugin status\n   */\n  getPluginStatus(e) {\n    const t = this.status.get(e);\n    if (!t)\n      throw new u(`Plugin ${e} not found`);\n    return t;\n  }\n  /**\n   * Validate plugin object\n   */\n  validatePlugin(e) {\n    if (!e.id)\n      throw new l(\"Plugin must have an id\");\n  }\n  /**\n   * Validate plugin manifest\n   */\n  validateManifest(e) {\n    if (!e.id)\n      throw new l(\"Manifest must have an id\");\n    if (!e.name)\n      throw new l(\"Manifest must have a name\");\n    if (!e.version)\n      throw new l(\"Manifest must have a version\");\n    if (!Array.isArray(e.provides))\n      throw new l(\"Manifest must have a provides array\");\n    if (!Array.isArray(e.requires))\n      throw new l(\"Manifest must have a requires array\");\n    if (!Array.isArray(e.optional))\n      throw new l(\"Manifest must have an optional array\");\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n  /**\n   * DESTROY EVERYTHING – waits for any ongoing initialise(), once  *\n   */\n  async destroy() {\n    var e;\n    if (this.destroyed) throw new l(\"Registry has already been destroyed\");\n    this.destroyed = !0;\n    try {\n      await this.initPromise;\n    } catch {\n    }\n    for (const t of Array.from(this.plugins.values()).reverse())\n      await ((e = t.destroy) == null ? void 0 : e.call(t));\n    this.store.destroy(), this.plugins.clear(), this.manifests.clear(), this.capabilities.clear(), this.status.clear(), this.pendingRegistrations.length = 0, this.processingRegistrations.length = 0;\n  }\n}\nfunction te(i, e, t) {\n  return i < e ? e : i > t ? t : i;\n}\nfunction v(i, e, t) {\n  if (i === e)\n    return !0;\n  if (i == null || e == null)\n    return i === e;\n  const r = typeof i;\n  if (r !== typeof e) return !1;\n  if (r === \"object\") {\n    t || (t = /* @__PURE__ */ new Set());\n    const n = x(i, e);\n    if (t.has(n))\n      return !0;\n    t.add(n);\n    const a = Array.isArray(i), o = Array.isArray(e);\n    return a && o ? U(i, e, t) : !a && !o ? B(i, e, t) : !1;\n  }\n  return !1;\n}\nfunction x(i, e) {\n  return `${S(i)}__${S(e)}`;\n}\nlet G = 0;\nconst d = /* @__PURE__ */ new WeakMap();\nfunction S(i) {\n  return d.has(i) || d.set(i, ++G), d.get(i);\n}\nfunction U(i, e, t) {\n  if (i.length !== e.length) return !1;\n  const r = new Array(e.length).fill(!1);\n  e: for (let s = 0; s < i.length; s++) {\n    const n = i[s];\n    for (let a = 0; a < e.length; a++)\n      if (!r[a] && v(n, e[a], t)) {\n        r[a] = !0;\n        continue e;\n      }\n    return !1;\n  }\n  return !0;\n}\nfunction B(i, e, t) {\n  const r = Object.keys(i).sort(), s = Object.keys(e).sort();\n  if (r.length !== s.length) return !1;\n  for (let n = 0; n < r.length; n++)\n    if (r[n] !== s[n]) return !1;\n  for (const n of r) {\n    const a = i[n], o = e[n];\n    if (!v(a, o, t))\n      return !1;\n  }\n  return !0;\n}\nexport {\n  m as C,\n  b as D,\n  g as L,\n  ee as P,\n  f as S,\n  v as a,\n  l as b,\n  u as c,\n  K as d,\n  H as e,\n  W as f,\n  R as g,\n  p as h,\n  y as i,\n  w as j,\n  E as k,\n  O as l,\n  Z as m,\n  V as n,\n  J as o,\n  Y as p,\n  Q as q,\n  j as r,\n  I as s,\n  X as t,\n  te as u\n};\n//# sourceMappingURL=math-ChSRQF3r.js.map\n","import { t as S, a as m } from \"./math-ChSRQF3r.js\";\nimport { l as v, e as D, d as I, C as F, D as _, L as O, g as A, f as N, c as M, b as U, P as z, S as x, h as L, k as j, j as q, i as B, u as K, r as $, m as k, s as G, n as W, q as Y, p as H, o as J } from \"./math-ChSRQF3r.js\";\nconst f = (o) => o.pages.map(\n  (t) => t.map((e) => ({\n    ...e,\n    rotatedSize: S(e.size, o.rotation, 1)\n  }))\n);\nfunction y(o, t) {\n  return {\n    package: o,\n    config: t\n  };\n}\nclass w {\n  constructor(t, e) {\n    if (this.id = t, this.registry = e, this.debouncedActions = {}, this.unsubscribeFromState = null, this.unsubscribeFromCoreStore = null, t !== this.constructor.id)\n      throw new Error(\n        `Plugin ID mismatch: ${t} !== ${this.constructor.id}`\n      );\n    this.coreStore = this.registry.getStore(), this.pluginStore = this.coreStore.getPluginStore(this.id), this.unsubscribeFromState = this.pluginStore.subscribeToState((i, s, c) => {\n      this.onStoreUpdated(c, s);\n    }), this.unsubscribeFromCoreStore = this.coreStore.subscribe((i, s, c) => {\n      this.onCoreStoreUpdated(c, s);\n    }), this.readyPromise = new Promise((i) => {\n      this.readyResolve = i;\n    }), this.readyResolve();\n  }\n  provides() {\n    if (!this._capability) {\n      const t = this.buildCapability();\n      this._capability = Object.freeze(t);\n    }\n    return this._capability;\n  }\n  /**\n   *  Get a copy of the current state\n   */\n  get state() {\n    return this.pluginStore.getState();\n  }\n  /**\n   *  Get a copy of the current core state\n   */\n  get coreState() {\n    return this.coreStore.getState();\n  }\n  /**\n   * @deprecated  use `this.state` Get a copy of the current state\n   */\n  getState() {\n    return this.pluginStore.getState();\n  }\n  /**\n   * @deprecated  use `this.coreState` Get a copy of the current core state\n   */\n  getCoreState() {\n    return this.coreStore.getState();\n  }\n  /**\n   * Core Dispatch\n   */\n  dispatchCoreAction(t) {\n    return this.coreStore.dispatchToCore(t);\n  }\n  /**\n   * Dispatch an action to all plugins\n   */\n  dispatchToAllPlugins(t) {\n    return this.coreStore.dispatch(t);\n  }\n  /**\n   * Dispatch an action\n   */\n  dispatch(t) {\n    return this.pluginStore.dispatch(t);\n  }\n  /**\n   * Dispatch an action with debouncing to prevent rapid repeated calls\n   * @param action The action to dispatch\n   * @param debounceTime Time in ms to debounce (default: 100ms)\n   * @returns boolean indicating whether the action was dispatched or debounced\n   */\n  debouncedDispatch(t, e = 100) {\n    const i = Date.now(), s = this.debouncedActions[t.type] || 0;\n    return i - s >= e ? (this.debouncedActions[t.type] = i, this.dispatch(t), !0) : !1;\n  }\n  /**\n   * Subscribe to state changes\n   */\n  subscribe(t) {\n    return this.pluginStore.subscribeToState(t);\n  }\n  /**\n   * Subscribe to core store changes\n   */\n  subscribeToCoreStore(t) {\n    return this.coreStore.subscribe(t);\n  }\n  /**\n   * Called when the plugin store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  onStoreUpdated(t, e) {\n  }\n  /**\n   * Called when the core store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  onCoreStoreUpdated(t, e) {\n  }\n  /**\n   * Cleanup method to be called when plugin is being destroyed\n   */\n  destroy() {\n    this.unsubscribeFromState && (this.unsubscribeFromState(), this.unsubscribeFromState = null), this.unsubscribeFromCoreStore && (this.unsubscribeFromCoreStore(), this.unsubscribeFromCoreStore = null);\n  }\n  /**\n   * Returns a promise that resolves when the plugin is ready\n   */\n  ready() {\n    return this.readyPromise;\n  }\n  /**\n   * Mark the plugin as ready\n   */\n  markReady() {\n    this.readyResolve();\n  }\n  /**\n   * Reset the ready state (useful for plugins that need to reinitialize)\n   */\n  resetReady() {\n    this.readyPromise = new Promise((t) => {\n      this.readyResolve = t;\n    });\n  }\n}\nclass b {\n  constructor(t, e) {\n    this.handler = t, this.options = e, this.lastRun = 0, this.handle = (i) => {\n      this.options.mode === \"debounce\" ? this.debounce(i) : this.throttle(i);\n    };\n  }\n  debounce(t) {\n    this.timeoutId && window.clearTimeout(this.timeoutId), this.timeoutId = window.setTimeout(() => {\n      this.handler(t), this.timeoutId = void 0;\n    }, this.options.wait);\n  }\n  throttle(t) {\n    if (this.options.mode === \"debounce\") return;\n    const e = Date.now(), i = this.options.throttleMode || \"leading-trailing\";\n    e - this.lastRun >= this.options.wait && (i === \"leading-trailing\" && this.handler(t), this.lastRun = e), this.timeoutId && window.clearTimeout(this.timeoutId), this.timeoutId = window.setTimeout(\n      () => {\n        this.handler(t), this.lastRun = Date.now(), this.timeoutId = void 0;\n      },\n      this.options.wait - (e - this.lastRun)\n    );\n  }\n  destroy() {\n    this.timeoutId && window.clearTimeout(this.timeoutId);\n  }\n}\nfunction E() {\n  const o = /* @__PURE__ */ new Set();\n  return {\n    emit: (e = void 0) => o.forEach((i) => i(e)),\n    on: (e) => (o.add(e), () => o.delete(e)),\n    off: (e) => o.delete(e),\n    clear: () => o.clear()\n  };\n}\nfunction C(o, t = m) {\n  const e = /* @__PURE__ */ new Set(), i = /* @__PURE__ */ new Map();\n  let s = o;\n  const c = (r) => e.forEach((n) => n(r)), p = (r, n) => {\n    let a = r, d = () => {\n    };\n    if (n) {\n      const u = new b(r, n);\n      a = u.handle, d = () => u.destroy(), i.set(r, { wrapped: a, destroy: d });\n    }\n    return s !== void 0 && a(s), e.add(a), () => {\n      e.delete(a), d(), i.delete(r);\n    };\n  };\n  return {\n    /* emitter behaviour ---------------------------------------- */\n    get value() {\n      return s;\n    },\n    emit(r = void 0) {\n      (s === void 0 || !t(s, r)) && (s = r, c(r));\n    },\n    on: p,\n    off(r) {\n      const n = i.get(r);\n      n ? (e.delete(n.wrapped), n.destroy(), i.delete(r)) : e.delete(r);\n    },\n    clear() {\n      e.clear(), i.forEach((r) => r.destroy()), i.clear();\n    },\n    /* derived hook --------------------------------------------- */\n    select(r, n = m) {\n      return (a, d) => {\n        let u;\n        if (s !== void 0) {\n          const h = r(s);\n          u = h, a(h);\n        }\n        return p(\n          (h) => {\n            const l = r(h);\n            (u === void 0 || !n(u, l)) && (u = l, a(l));\n          },\n          d\n        );\n      };\n    }\n  };\n}\nfunction T(o) {\n  return Object.entries(o).map(([t, e]) => {\n    const i = Number(t);\n    return [Number.isFinite(i) && t.trim() !== \"\" ? i : t, e];\n  });\n}\nexport {\n  w as BasePlugin,\n  v as CORE_ACTION_TYPES,\n  D as CapabilityConflictError,\n  I as CapabilityNotFoundError,\n  F as CircularDependencyError,\n  _ as DependencyResolver,\n  b as EventControl,\n  O as LOAD_DOCUMENT,\n  A as PluginConfigurationError,\n  N as PluginInitializationError,\n  M as PluginNotFoundError,\n  U as PluginRegistrationError,\n  z as PluginRegistry,\n  x as SET_DOCUMENT,\n  L as SET_DOCUMENT_ERROR,\n  j as SET_PAGES,\n  q as SET_ROTATION,\n  B as SET_SCALE,\n  m as arePropsEqual,\n  K as clamp,\n  C as createBehaviorEmitter,\n  E as createEmitter,\n  y as createPluginRegistration,\n  T as enumEntries,\n  f as getPagesWithRotatedSize,\n  $ as initialCoreState,\n  k as loadDocument,\n  G as setDocument,\n  W as setDocumentError,\n  Y as setPages,\n  H as setRotation,\n  J as setScale\n};\n//# sourceMappingURL=index.js.map\n","import { Action } from '@embedpdf/core';\n\nexport const ACTIVATE_MODE = 'INTERACTION/ACTIVATE_MODE';\nexport const PAUSE_INTERACTION = 'INTERACTION/PAUSE';\nexport const RESUME_INTERACTION = 'INTERACTION/RESUME';\nexport const SET_CURSOR = 'INTERACTION/SET_CURSOR';\n\nexport interface ActivateModeAction extends Action {\n  type: typeof ACTIVATE_MODE;\n  payload: { mode: string };\n}\n\nexport interface PauseInteractionAction extends Action {\n  type: typeof PAUSE_INTERACTION;\n}\n\nexport interface ResumeInteractionAction extends Action {\n  type: typeof RESUME_INTERACTION;\n}\n\nexport interface SetCursorAction extends Action {\n  type: typeof SET_CURSOR;\n  payload: { cursor: string };\n}\n\nexport const activateMode = (mode: string): ActivateModeAction => ({\n  type: ACTIVATE_MODE,\n  payload: { mode },\n});\n\nexport const setCursor = (cursor: string): SetCursorAction => ({\n  type: SET_CURSOR,\n  payload: { cursor },\n});\n\nexport const pauseInteraction = (): PauseInteractionAction => ({\n  type: PAUSE_INTERACTION,\n});\n\nexport const resumeInteraction = (): ResumeInteractionAction => ({\n  type: RESUME_INTERACTION,\n});\n\nexport type InteractionManagerAction =\n  | ActivateModeAction\n  | PauseInteractionAction\n  | ResumeInteractionAction\n  | SetCursorAction;\n","import { PointerEventHandlers } from './types';\n\nexport function mergeHandlers(list: PointerEventHandlers[]): PointerEventHandlers {\n  const keys: (keyof PointerEventHandlers)[] = [\n    'onPointerDown',\n    'onPointerUp',\n    'onPointerMove',\n    'onPointerEnter',\n    'onPointerLeave',\n    'onPointerCancel',\n  ];\n  const out: Partial<PointerEventHandlers> = {};\n  for (const k of keys) {\n    out[k] = (evt: any, nativeEvt: any, modeId: string) => {\n      for (const h of list) h[k]?.(evt, nativeEvt, modeId);\n    };\n  }\n  return out as PointerEventHandlers;\n}\n","import { BasePlugin, createBehaviorEmitter, createEmitter, PluginRegistry } from '@embedpdf/core';\n\nimport {\n  InteractionManagerCapability,\n  InteractionManagerPluginConfig,\n  InteractionManagerState,\n  InteractionMode,\n  InteractionScope,\n  PointerEventHandlers,\n  PointerEventHandlersWithLifecycle,\n  RegisterAlwaysOptions,\n  RegisterHandlersOptions,\n} from './types';\nimport { activateMode, pauseInteraction, resumeInteraction, setCursor } from './actions';\nimport { mergeHandlers } from './helper';\n\ninterface CursorClaim {\n  cursor: string;\n  priority: number;\n}\n\ntype HandlerSet = Set<PointerEventHandlersWithLifecycle>;\ntype PageHandlerMap = Map<number /*pageIdx*/, HandlerSet>;\n\ninterface ModeBuckets {\n  /** handlers that listen on the global wrapper (only once per viewer) */\n  global: HandlerSet;\n  /** handlers that listen on a *specific* page wrapper */\n  page: PageHandlerMap;\n}\n\nexport class InteractionManagerPlugin extends BasePlugin<\n  InteractionManagerPluginConfig,\n  InteractionManagerCapability,\n  InteractionManagerState\n> {\n  static readonly id = 'interaction-manager' as const;\n\n  private modes = new Map<string, InteractionMode>();\n  private cursorClaims = new Map<string, CursorClaim>();\n  private buckets = new Map<string, ModeBuckets>();\n\n  private alwaysGlobal = new Set<PointerEventHandlersWithLifecycle>();\n  private alwaysPage = new Map<number, Set<PointerEventHandlersWithLifecycle>>();\n\n  private readonly onModeChange$ = createEmitter<InteractionManagerState>();\n  private readonly onHandlerChange$ = createEmitter<InteractionManagerState>();\n  private readonly onCursorChange$ = createEmitter<string>();\n  private readonly onStateChange$ = createBehaviorEmitter<InteractionManagerState>();\n\n  constructor(id: string, registry: PluginRegistry) {\n    super(id, registry);\n\n    this.registerMode({\n      id: 'default',\n      scope: 'page',\n      exclusive: false,\n      cursor: 'auto',\n    });\n  }\n\n  async initialize(_: InteractionManagerPluginConfig): Promise<void> {}\n\n  protected buildCapability(): InteractionManagerCapability {\n    return {\n      activate: (modeId: string) => this.activate(modeId),\n      onModeChange: this.onModeChange$.on,\n      onCursorChange: this.onCursorChange$.on,\n      onHandlerChange: this.onHandlerChange$.on,\n      onStateChange: this.onStateChange$.on,\n      getActiveMode: () => this.state.activeMode,\n      getActiveInteractionMode: () => this.getActiveInteractionMode(),\n      finish: () => this.activate('default'),\n      registerMode: (mode: InteractionMode) => this.registerMode(mode),\n      registerHandlers: (options: RegisterHandlersOptions) => this.registerHandlers(options),\n      registerAlways: (options: RegisterAlwaysOptions) => this.registerAlways(options),\n      setCursor: (token: string, cursor: string, priority = 0) =>\n        this.setCursor(token, cursor, priority),\n      removeCursor: (token: string) => this.removeCursor(token),\n      getCurrentCursor: () => this.state.cursor,\n      getHandlersForScope: (scope: InteractionScope) => this.getHandlersForScope(scope),\n      activeModeIsExclusive: () => this.activeModeIsExclusive(),\n      pause: () => this.dispatch(pauseInteraction()),\n      resume: () => this.dispatch(resumeInteraction()),\n      isPaused: () => this.state.paused,\n    };\n  }\n\n  private activate(mode: string) {\n    if (!this.modes.has(mode)) {\n      throw new Error(`[interaction] unknown mode '${mode}'`);\n    }\n    if (mode === this.state.activeMode) return;\n\n    const previousMode = this.state.activeMode;\n    this.cursorClaims.clear(); // prevent cursor leaks\n\n    this.notifyHandlersInactive(previousMode);\n\n    this.dispatch(activateMode(mode));\n    this.emitCursor();\n\n    // Call lifecycle hooks for handlers going active\n    this.notifyHandlersActive(mode);\n\n    this.onModeChange$.emit({ ...this.state, activeMode: mode });\n  }\n\n  private notifyHandlersActive(modeId: string) {\n    this.alwaysGlobal.forEach((handler) => {\n      handler.onHandlerActiveStart?.(modeId);\n    });\n\n    this.alwaysPage.forEach((handlerSet) => {\n      handlerSet.forEach((handler) => {\n        handler.onHandlerActiveStart?.(modeId);\n      });\n    });\n\n    const mode = this.modes.get(modeId);\n    if (!mode) return;\n\n    const bucket = this.buckets.get(modeId);\n    if (!bucket) return;\n\n    // Notify global handlers if mode is global\n    if (mode.scope === 'global') {\n      bucket.global.forEach((handler) => {\n        handler.onHandlerActiveStart?.(modeId);\n      });\n    }\n\n    // Notify page handlers if mode is page\n    if (mode.scope === 'page') {\n      bucket.page.forEach((handlerSet, pageIndex) => {\n        handlerSet.forEach((handler) => {\n          handler.onHandlerActiveStart?.(modeId);\n        });\n      });\n    }\n  }\n\n  private notifyHandlersInactive(modeId: string) {\n    this.alwaysGlobal.forEach((handler) => {\n      handler.onHandlerActiveEnd?.(modeId);\n    });\n\n    this.alwaysPage.forEach((handlerSet) => {\n      handlerSet.forEach((handler) => {\n        handler.onHandlerActiveEnd?.(modeId);\n      });\n    });\n\n    const mode = this.modes.get(modeId);\n    if (!mode) return;\n\n    const bucket = this.buckets.get(modeId);\n    if (!bucket) return;\n\n    // Notify global handlers if mode is global\n    if (mode.scope === 'global') {\n      bucket.global.forEach((handler) => {\n        handler.onHandlerActiveEnd?.(modeId);\n      });\n    }\n\n    // Notify page handlers if mode is page\n    if (mode.scope === 'page') {\n      bucket.page.forEach((handlerSet, pageIndex) => {\n        handlerSet.forEach((handler) => {\n          handler.onHandlerActiveEnd?.(modeId);\n        });\n      });\n    }\n  }\n\n  private registerMode(mode: InteractionMode) {\n    this.modes.set(mode.id, mode);\n    if (!this.buckets.has(mode.id)) {\n      this.buckets.set(mode.id, { global: new Set(), page: new Map() });\n    }\n  }\n\n  /** ---------- pointer-handler handling ------------ */\n  private registerHandlers({ modeId, handlers, pageIndex }: RegisterHandlersOptions): () => void {\n    const modeIds = Array.isArray(modeId) ? modeId : [modeId];\n    const cleanupFunctions: (() => void)[] = [];\n\n    for (const id of modeIds) {\n      const bucket = this.buckets.get(id);\n      if (!bucket) throw new Error(`unknown mode '${id}'`);\n\n      if (pageIndex == null) {\n        bucket.global.add(handlers);\n      } else {\n        const set = bucket.page.get(pageIndex) ?? new Set();\n        set.add(handlers);\n        bucket.page.set(pageIndex, set);\n      }\n\n      // Create cleanup function for this specific mode\n      cleanupFunctions.push(() => {\n        if (pageIndex == null) {\n          bucket.global.delete(handlers);\n        } else {\n          const set = bucket.page.get(pageIndex);\n          if (set) {\n            set.delete(handlers);\n            if (set.size === 0) {\n              bucket.page.delete(pageIndex);\n            }\n          }\n        }\n      });\n    }\n\n    this.onHandlerChange$.emit({ ...this.state });\n\n    // Return a cleanup function that removes handlers from all registered modes\n    return () => {\n      cleanupFunctions.forEach((cleanup) => cleanup());\n      this.onHandlerChange$.emit({ ...this.state });\n    };\n  }\n\n  public registerAlways({ scope, handlers }: RegisterAlwaysOptions): () => void {\n    if (scope.type === 'global') {\n      this.alwaysGlobal.add(handlers);\n      this.onHandlerChange$.emit({ ...this.state });\n      return () => this.alwaysGlobal.delete(handlers);\n    }\n    const set = this.alwaysPage.get(scope.pageIndex) ?? new Set();\n    set.add(handlers);\n    this.alwaysPage.set(scope.pageIndex, set);\n    this.onHandlerChange$.emit({ ...this.state });\n    return () => {\n      set.delete(handlers);\n      this.onHandlerChange$.emit({ ...this.state });\n    };\n  }\n\n  /** Returns the *merged* handler set that should be active for the given\n   *  provider (`global` wrapper or a single page wrapper).\n   *  – `alwaysGlobal` / `alwaysPage` are **always** active.\n   *  – Handlers that belong to the current mode are added on top **iff**\n   *    the mode’s own scope matches the provider’s scope.            */\n  private getHandlersForScope(scope: InteractionScope): PointerEventHandlers | null {\n    if (!this.state) return null;\n\n    const mode = this.modes.get(this.state.activeMode);\n    if (!mode) return null;\n\n    const bucket = this.buckets.get(mode.id);\n    if (!bucket) return null;\n\n    /** helper – merge two handler sets into one object (or `null` if both are empty) */\n    const mergeSets = (a: HandlerSet, b: HandlerSet) =>\n      a.size || b.size ? mergeHandlers([...a, ...b]) : null;\n\n    /* ─────────────────────  GLOBAL PROVIDER  ─────────────────────── */\n    if (scope.type === 'global') {\n      const modeSpecific =\n        mode.scope === 'global' // only include mode handlers if the\n          ? bucket.global // mode itself is global-scoped\n          : new Set<PointerEventHandlers>();\n      return mergeSets(this.alwaysGlobal, modeSpecific);\n    }\n\n    /* ───────────────────────  PAGE PROVIDER  ──────────────────────── */\n    const alwaysPageSet = this.alwaysPage.get(scope.pageIndex) ?? new Set<PointerEventHandlers>();\n    const modePageSet =\n      mode.scope === 'page'\n        ? (bucket.page.get(scope.pageIndex) ?? new Set<PointerEventHandlers>())\n        : new Set<PointerEventHandlers>(); // global-scoped mode → ignore page buckets\n\n    return mergeSets(alwaysPageSet, modePageSet);\n  }\n\n  /** ---------- cursor handling --------------------- */\n  private setCursor(token: string, cursor: string, priority = 0) {\n    this.cursorClaims.set(token, { cursor, priority });\n    this.emitCursor();\n  }\n  private removeCursor(token: string) {\n    this.cursorClaims.delete(token);\n    this.emitCursor();\n  }\n\n  private emitCursor() {\n    /* pick highest priority claim, else mode baseline */\n    const top = [...this.cursorClaims.values()].sort((a, b) => b.priority - a.priority)[0] ?? {\n      cursor: this.modes.get(this.state.activeMode)?.cursor ?? 'auto',\n    };\n\n    if (top.cursor !== this.state.cursor) {\n      this.dispatch(setCursor(top.cursor));\n      this.onCursorChange$.emit(top.cursor);\n    }\n  }\n\n  override onStoreUpdated(_: InteractionManagerState, newState: InteractionManagerState): void {\n    this.onStateChange$.emit(newState);\n  }\n\n  private activeModeIsExclusive(): boolean {\n    const mode = this.modes.get(this.state.activeMode);\n    return !!mode?.exclusive;\n  }\n\n  private getActiveInteractionMode(): InteractionMode | null {\n    return this.modes.get(this.state.activeMode) ?? null;\n  }\n\n  // keep emitter clean\n  async destroy(): Promise<void> {\n    this.onModeChange$.clear();\n    this.onCursorChange$.clear();\n    await super.destroy();\n  }\n}\n","import { Reducer } from '@embedpdf/core';\nimport {\n  ACTIVATE_MODE,\n  InteractionManagerAction,\n  PAUSE_INTERACTION,\n  RESUME_INTERACTION,\n  SET_CURSOR,\n} from './actions';\nimport { InteractionManagerState } from './types';\n\nexport const initialState: InteractionManagerState = {\n  activeMode: 'default',\n  cursor: 'auto',\n  paused: false,\n};\n\nexport const reducer: Reducer<InteractionManagerState, InteractionManagerAction> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case ACTIVATE_MODE:\n      return {\n        ...state,\n        activeMode: action.payload.mode,\n      };\n    case SET_CURSOR:\n      return {\n        ...state,\n        cursor: action.payload.cursor,\n      };\n    case PAUSE_INTERACTION:\n      return {\n        ...state,\n        paused: true,\n      };\n    case RESUME_INTERACTION:\n      return {\n        ...state,\n        paused: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { Position } from '@embedpdf/models';\nimport type {\n  InteractionManagerCapability,\n  InteractionScope,\n  PointerEventHandlers,\n} from '@embedpdf/plugin-interaction-manager';\n\n/**\n * Hook one DOM element into the interaction-manager.\n *  – keeps handlers & cursor in-sync with the current mode\n *  – returns a teardown fn for React/Preact effects\n */\nexport function createPointerProvider(\n  cap: InteractionManagerCapability,\n  scope: InteractionScope,\n  element: HTMLElement,\n  convertEventToPoint?: (evt: PointerEvent, host: HTMLElement) => Position,\n) {\n  /* ------------------------------------------------------------------ */\n  /* active handler set – hot-swapped on every mode change              */\n  /* ------------------------------------------------------------------ */\n  let active: PointerEventHandlers | null = cap.getHandlersForScope(scope);\n\n  const stopMode = cap.onModeChange(() => {\n    if (scope.type === 'global') {\n      const mode = cap.getActiveInteractionMode();\n      element.style.cursor = mode?.scope === 'global' ? (mode.cursor ?? 'auto') : 'auto';\n    }\n    active = cap.getHandlersForScope(scope);\n  });\n\n  const stopHandler = cap.onHandlerChange(() => {\n    active = cap.getHandlersForScope(scope);\n  });\n\n  /* ------------------------------------------------------------------ */\n  /* cursor                                                             */\n  /* ------------------------------------------------------------------ */\n  const modeNow = cap.getActiveInteractionMode();\n  const cursorNow = cap.getCurrentCursor();\n\n  /** initial cursor -------------------------------------------------- */\n  if (scope.type === 'global') {\n    // global wrapper only shows the cursor while a *global* mode is active\n    element.style.cursor = modeNow?.scope === 'global' ? cursorNow : 'auto';\n  } else {\n    // page wrappers always mirror the latest cursor\n    element.style.cursor = cursorNow;\n  }\n\n  const stopCursor = cap.onCursorChange((c) => {\n    /**  ❖  Propagation rule\n     *      ─────────────────\n     *   • global provider updates its cursor *only* while the active\n     *     mode itself is ‘global’.\n     *   • page providers always sync (so they show the cursor during\n     *     a global mode as well). */\n    if (scope.type === 'global') {\n      const isGlobalMode = cap.getActiveInteractionMode()?.scope === 'global';\n      if (!isGlobalMode) return; // active mode is page-scoped → ignore\n    }\n    element.style.cursor = c;\n  });\n\n  /* ------------------------------------------------------------------ */\n  /* event wiring                                                       */\n  /* ------------------------------------------------------------------ */\n  type K = keyof PointerEventHandlers;\n  const domEvent: Record<K, keyof HTMLElementEventMap> = {\n    onPointerDown: 'pointerdown',\n    onPointerUp: 'pointerup',\n    onPointerMove: 'pointermove',\n    onPointerEnter: 'pointerenter',\n    onPointerLeave: 'pointerleave',\n    onPointerCancel: 'pointercancel',\n  };\n\n  /* one stable EventListener per key -> needed for removeEventListener */\n  const listeners: Partial<Record<K, EventListener>> = {};\n\n  const toPos = (e: PointerEvent, host: HTMLElement): Position => {\n    if (convertEventToPoint) return convertEventToPoint(e, host);\n    const r = host.getBoundingClientRect();\n    return { x: e.clientX - r.left, y: e.clientY - r.top };\n  };\n\n  (Object.keys(domEvent) as K[]).forEach((k) => {\n    listeners[k] = (evt: Event) => {\n      if (cap.isPaused()) return;\n\n      const pe = evt as PointerEvent; // safe – we only attach to pointer*\n      const currentModeId = cap.getActiveMode();\n      active?.[k]?.(toPos(pe, element), pe, currentModeId);\n      /* if you need to stop default behaviour when no handler is active:\n       * if (!active?.[k]) pe.preventDefault(); */\n    };\n    element.addEventListener(domEvent[k], listeners[k]!);\n  });\n\n  /* ------------------------------------------------------------------ */\n  /* teardown                                                           */\n  /* ------------------------------------------------------------------ */\n  return () => {\n    (Object.keys(domEvent) as K[]).forEach((k) =>\n      element.removeEventListener(domEvent[k], listeners[k]!),\n    );\n    stopMode();\n    stopCursor();\n    stopHandler();\n  };\n}\n","// src/geometry.ts\nvar Rotation = /* @__PURE__ */ ((Rotation2) => {\n  Rotation2[Rotation2[\"Degree0\"] = 0] = \"Degree0\";\n  Rotation2[Rotation2[\"Degree90\"] = 1] = \"Degree90\";\n  Rotation2[Rotation2[\"Degree180\"] = 2] = \"Degree180\";\n  Rotation2[Rotation2[\"Degree270\"] = 3] = \"Degree270\";\n  return Rotation2;\n})(Rotation || {});\nfunction toIntPos(p) {\n  return { x: Math.floor(p.x), y: Math.floor(p.y) };\n}\nfunction toIntSize(s) {\n  return { width: Math.ceil(s.width), height: Math.ceil(s.height) };\n}\nfunction toIntRect(r) {\n  return {\n    origin: toIntPos(r.origin),\n    size: toIntSize(r.size)\n  };\n}\nfunction calculateDegree(rotation) {\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return 0;\n    case 1 /* Degree90 */:\n      return 90;\n    case 2 /* Degree180 */:\n      return 180;\n    case 3 /* Degree270 */:\n      return 270;\n  }\n}\nfunction calculateAngle(rotation) {\n  return calculateDegree(rotation) * Math.PI / 180;\n}\nfunction swap(size) {\n  const { width, height } = size;\n  return {\n    width: height,\n    height: width\n  };\n}\nfunction transformSize(size, rotation, scaleFactor) {\n  size = rotation % 2 === 0 ? size : swap(size);\n  return {\n    width: size.width * scaleFactor,\n    height: size.height * scaleFactor\n  };\n}\nfunction quadToRect(q) {\n  const xs = [q.p1.x, q.p2.x, q.p3.x, q.p4.x];\n  const ys = [q.p1.y, q.p2.y, q.p3.y, q.p4.y];\n  return {\n    origin: { x: Math.min(...xs), y: Math.min(...ys) },\n    size: {\n      width: Math.max(...xs) - Math.min(...xs),\n      height: Math.max(...ys) - Math.min(...ys)\n    }\n  };\n}\nfunction rectToQuad(r) {\n  return {\n    p1: { x: r.origin.x, y: r.origin.y },\n    p2: { x: r.origin.x + r.size.width, y: r.origin.y },\n    p3: { x: r.origin.x + r.size.width, y: r.origin.y + r.size.height },\n    p4: { x: r.origin.x, y: r.origin.y + r.size.height }\n  };\n}\nfunction rotatePosition(containerSize, position, rotation) {\n  let x = position.x;\n  let y = position.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      x = position.x;\n      y = position.y;\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - position.y;\n      y = position.x;\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - position.x;\n      y = containerSize.height - position.y;\n      break;\n    case 3 /* Degree270 */:\n      x = position.y;\n      y = containerSize.width - position.x;\n      break;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction scalePosition(position, scaleFactor) {\n  return {\n    x: position.x * scaleFactor,\n    y: position.y * scaleFactor\n  };\n}\nfunction transformPosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(rotatePosition(containerSize, position, rotation), scaleFactor);\n}\nfunction restorePosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(\n    rotatePosition(containerSize, position, (4 - rotation) % 4),\n    1 / scaleFactor\n  );\n}\nfunction rotateRect(containerSize, rect, rotation) {\n  let x = rect.origin.x;\n  let y = rect.origin.y;\n  let size = rect.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - rect.origin.y - rect.size.height;\n      y = rect.origin.x;\n      size = swap(rect.size);\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - rect.origin.x - rect.size.width;\n      y = containerSize.height - rect.origin.y - rect.size.height;\n      break;\n    case 3 /* Degree270 */:\n      x = rect.origin.y;\n      y = containerSize.width - rect.origin.x - rect.size.width;\n      size = swap(rect.size);\n      break;\n  }\n  return {\n    origin: {\n      x,\n      y\n    },\n    size: {\n      width: size.width,\n      height: size.height\n    }\n  };\n}\nfunction scaleRect(rect, scaleFactor) {\n  return {\n    origin: {\n      x: rect.origin.x * scaleFactor,\n      y: rect.origin.y * scaleFactor\n    },\n    size: {\n      width: rect.size.width * scaleFactor,\n      height: rect.size.height * scaleFactor\n    }\n  };\n}\nfunction transformRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, rotation), scaleFactor);\n}\nfunction restoreRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, (4 - rotation) % 4), 1 / scaleFactor);\n}\nfunction restoreOffset(offset, rotation, scaleFactor) {\n  let offsetX = offset.x;\n  let offsetY = offset.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      offsetX = offset.x / scaleFactor;\n      offsetY = offset.y / scaleFactor;\n      break;\n    case 1 /* Degree90 */:\n      offsetX = offset.y / scaleFactor;\n      offsetY = -offset.x / scaleFactor;\n      break;\n    case 2 /* Degree180 */:\n      offsetX = -offset.x / scaleFactor;\n      offsetY = -offset.y / scaleFactor;\n      break;\n    case 3 /* Degree270 */:\n      offsetX = -offset.y / scaleFactor;\n      offsetY = offset.x / scaleFactor;\n      break;\n  }\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\nfunction boundingRect(rects) {\n  if (rects.length === 0) return null;\n  let minX = rects[0].origin.x, minY = rects[0].origin.y, maxX = rects[0].origin.x + rects[0].size.width, maxY = rects[0].origin.y + rects[0].size.height;\n  for (const r of rects) {\n    minX = Math.min(minX, r.origin.x);\n    minY = Math.min(minY, r.origin.y);\n    maxX = Math.max(maxX, r.origin.x + r.size.width);\n    maxY = Math.max(maxY, r.origin.y + r.size.height);\n  }\n  return {\n    origin: {\n      x: minX,\n      y: minY\n    },\n    size: {\n      width: maxX - minX,\n      height: maxY - minY\n    }\n  };\n}\nvar makeMatrix = (rectangle, rotation, scaleFactor) => {\n  const { width, height } = rectangle.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: -scaleFactor,\n        e: 0,\n        f: height * scaleFactor\n      };\n    case 1 /* Degree90 */:\n      return {\n        a: 0,\n        b: scaleFactor,\n        c: scaleFactor,\n        d: 0,\n        e: 0,\n        f: 0\n      };\n    case 2 /* Degree180 */:\n      return {\n        a: -scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: width * scaleFactor,\n        f: 0\n      };\n    case 3 /* Degree270 */:\n      return {\n        a: 0,\n        b: -scaleFactor,\n        c: -scaleFactor,\n        d: 0,\n        e: height * scaleFactor,\n        f: width * scaleFactor\n      };\n  }\n};\n\n// src/logger.ts\nvar NoopLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug() {\n  }\n  /** {@inheritDoc Logger.info} */\n  info() {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn() {\n  }\n  /** {@inheritDoc Logger.error} */\n  error() {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf() {\n  }\n};\nvar ConsoleLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    console.debug(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    console.info(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    console.warn(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    console.error(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    console.info(`${source}.${category}.${event}.${phase}`, ...args);\n  }\n};\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"Debug\"] = 0] = \"Debug\";\n  LogLevel2[LogLevel2[\"Info\"] = 1] = \"Info\";\n  LogLevel2[LogLevel2[\"Warn\"] = 2] = \"Warn\";\n  LogLevel2[LogLevel2[\"Error\"] = 3] = \"Error\";\n  return LogLevel2;\n})(LogLevel || {});\nvar LevelLogger = class {\n  /**\n   * create new LevelLogger\n   * @param logger - the original logger\n   * @param level - log level that used for filtering, all logs lower than this level will be filtered out\n   */\n  constructor(logger, level) {\n    this.logger = logger;\n    this.level = level;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    if (this.level <= 0 /* Debug */) {\n      this.logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    if (this.level <= 1 /* Info */) {\n      this.logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    if (this.level <= 2 /* Warn */) {\n      this.logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    if (this.level <= 3 /* Error */) {\n      this.logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    this.logger.perf(source, category, event, phase, ...args);\n  }\n};\nvar PerfLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor() {\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, identifier, ...args) {\n    switch (phase) {\n      case \"Begin\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        break;\n      case \"End\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        window.performance.measure(\n          `${source}.${category}.${event}.Measure.${identifier}`,\n          `${source}.${category}.${event}.Begin.${identifier}`,\n          `${source}.${category}.${event}.End.${identifier}`\n        );\n        break;\n    }\n  }\n};\nvar AllLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor(loggers) {\n    this.loggers = loggers;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    for (const logger of this.loggers) {\n      logger.perf(source, category, event, phase, ...args);\n    }\n  }\n};\n\n// src/task.ts\nvar TaskStage = /* @__PURE__ */ ((TaskStage2) => {\n  TaskStage2[TaskStage2[\"Pending\"] = 0] = \"Pending\";\n  TaskStage2[TaskStage2[\"Resolved\"] = 1] = \"Resolved\";\n  TaskStage2[TaskStage2[\"Rejected\"] = 2] = \"Rejected\";\n  TaskStage2[TaskStage2[\"Aborted\"] = 3] = \"Aborted\";\n  return TaskStage2;\n})(TaskStage || {});\nvar TaskAbortedError = class extends Error {\n  constructor(reason) {\n    super(`Task aborted: ${JSON.stringify(reason)}`);\n    this.name = \"TaskAbortedError\";\n  }\n};\nvar TaskRejectedError = class extends Error {\n  constructor(reason) {\n    super(`Task rejected: ${JSON.stringify(reason)}`);\n    this.name = \"TaskRejectedError\";\n  }\n};\nvar Task = class _Task {\n  constructor() {\n    this.state = {\n      stage: 0 /* Pending */\n    };\n    /**\n     * callbacks that will be executed when task is resolved\n     */\n    this.resolvedCallbacks = [];\n    /**\n     * callbacks that will be executed when task is rejected\n     */\n    this.rejectedCallbacks = [];\n    /**\n     * Promise that will be resolved when task is settled\n     */\n    this._promise = null;\n  }\n  /**\n   * Convert task to promise\n   * @returns promise that will be resolved when task is settled\n   */\n  toPromise() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this.wait(\n          (result) => resolve(result),\n          (error) => {\n            if (error.type === \"abort\") {\n              reject(new TaskAbortedError(error.reason));\n            } else {\n              reject(new TaskRejectedError(error.reason));\n            }\n          }\n        );\n      });\n    }\n    return this._promise;\n  }\n  /**\n   * wait for task to be settled\n   * @param resolvedCallback - callback for resolved value\n   * @param rejectedCallback - callback for rejected value\n   */\n  wait(resolvedCallback, rejectedCallback) {\n    switch (this.state.stage) {\n      case 0 /* Pending */:\n        this.resolvedCallbacks.push(resolvedCallback);\n        this.rejectedCallbacks.push(rejectedCallback);\n        break;\n      case 1 /* Resolved */:\n        resolvedCallback(this.state.result);\n        break;\n      case 2 /* Rejected */:\n        rejectedCallback({\n          type: \"reject\",\n          reason: this.state.reason\n        });\n        break;\n      case 3 /* Aborted */:\n        rejectedCallback({\n          type: \"abort\",\n          reason: this.state.reason\n        });\n        break;\n    }\n  }\n  /**\n   * resolve task with specific result\n   * @param result - result value\n   */\n  resolve(result) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 1 /* Resolved */,\n        result\n      };\n      for (const resolvedCallback of this.resolvedCallbacks) {\n        try {\n          resolvedCallback(result);\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * reject task with specific reason\n   * @param reason - abort reason\n   *\n   */\n  reject(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 2 /* Rejected */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"reject\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * abort task with specific reason\n   * @param reason - abort reason\n   */\n  abort(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 3 /* Aborted */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"abort\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * fail task with a TaskError from another task\n   * This is a convenience method for error propagation between tasks\n   * @param error - TaskError from another task\n   */\n  fail(error) {\n    if (error.type === \"abort\") {\n      this.abort(error.reason);\n    } else {\n      this.reject(error.reason);\n    }\n  }\n  /**\n   * Static method to wait for all tasks to resolve\n   * Returns a new task that resolves with an array of all results\n   * Rejects immediately if any task fails\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static all(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let resolvedCount = 0;\n    let isSettled = false;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          results[index] = result;\n          resolvedCount++;\n          if (resolvedCount === tasks.length) {\n            isSettled = true;\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method to wait for all tasks to settle (resolve, reject, or abort)\n   * Always resolves with an array of settlement results\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks settle\n   * @public\n   */\n  static allSettled(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let settledCount = 0;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          results[index] = { status: \"resolved\", value: result };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          results[index] = {\n            status: error.type === \"abort\" ? \"aborted\" : \"rejected\",\n            reason: error.reason\n          };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method that resolves/rejects with the first task that settles\n   *\n   * @param tasks - array of tasks to race\n   * @returns new task that settles with the first input task that settles\n   * @public\n   */\n  static race(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.reject(\"No tasks provided\");\n      return combinedTask;\n    }\n    let isSettled = false;\n    tasks.forEach((task) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          isSettled = true;\n          combinedTask.resolve(result);\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Utility to track progress of multiple tasks\n   *\n   * @param tasks - array of tasks to track\n   * @param onProgress - callback called when any task completes\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static withProgress(tasks, onProgress) {\n    const combinedTask = _Task.all(tasks);\n    if (onProgress) {\n      let completedCount = 0;\n      tasks.forEach((task) => {\n        task.wait(\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          }\n        );\n      });\n    }\n    return combinedTask;\n  }\n};\n\n// src/pdf.ts\nvar PdfSoftHyphenMarker = \"\\xAD\";\nvar PdfZeroWidthSpace = \"\\u200B\";\nvar PdfWordJoiner = \"\\u2060\";\nvar PdfBomOrZwnbsp = \"\\uFEFF\";\nvar PdfNonCharacterFFFE = \"\\uFFFE\";\nvar PdfNonCharacterFFFF = \"\\uFFFF\";\nvar PdfUnwantedTextMarkers = Object.freeze([\n  PdfSoftHyphenMarker,\n  PdfZeroWidthSpace,\n  PdfWordJoiner,\n  PdfBomOrZwnbsp,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF\n]);\nvar PdfUnwantedTextRegex = new RegExp(`[${PdfUnwantedTextMarkers.join(\"\")}]`, \"g\");\nfunction stripPdfUnwantedMarkers(text) {\n  return text.replace(PdfUnwantedTextRegex, \"\");\n}\nvar PdfZoomMode = /* @__PURE__ */ ((PdfZoomMode2) => {\n  PdfZoomMode2[PdfZoomMode2[\"Unknown\"] = 0] = \"Unknown\";\n  PdfZoomMode2[PdfZoomMode2[\"XYZ\"] = 1] = \"XYZ\";\n  PdfZoomMode2[PdfZoomMode2[\"FitPage\"] = 2] = \"FitPage\";\n  PdfZoomMode2[PdfZoomMode2[\"FitHorizontal\"] = 3] = \"FitHorizontal\";\n  PdfZoomMode2[PdfZoomMode2[\"FitVertical\"] = 4] = \"FitVertical\";\n  PdfZoomMode2[PdfZoomMode2[\"FitRectangle\"] = 5] = \"FitRectangle\";\n  return PdfZoomMode2;\n})(PdfZoomMode || {});\nvar PdfBlendMode = /* @__PURE__ */ ((PdfBlendMode2) => {\n  PdfBlendMode2[PdfBlendMode2[\"Normal\"] = 0] = \"Normal\";\n  PdfBlendMode2[PdfBlendMode2[\"Multiply\"] = 1] = \"Multiply\";\n  PdfBlendMode2[PdfBlendMode2[\"Screen\"] = 2] = \"Screen\";\n  PdfBlendMode2[PdfBlendMode2[\"Overlay\"] = 3] = \"Overlay\";\n  PdfBlendMode2[PdfBlendMode2[\"Darken\"] = 4] = \"Darken\";\n  PdfBlendMode2[PdfBlendMode2[\"Lighten\"] = 5] = \"Lighten\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorDodge\"] = 6] = \"ColorDodge\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorBurn\"] = 7] = \"ColorBurn\";\n  PdfBlendMode2[PdfBlendMode2[\"HardLight\"] = 8] = \"HardLight\";\n  PdfBlendMode2[PdfBlendMode2[\"SoftLight\"] = 9] = \"SoftLight\";\n  PdfBlendMode2[PdfBlendMode2[\"Difference\"] = 10] = \"Difference\";\n  PdfBlendMode2[PdfBlendMode2[\"Exclusion\"] = 11] = \"Exclusion\";\n  PdfBlendMode2[PdfBlendMode2[\"Hue\"] = 12] = \"Hue\";\n  PdfBlendMode2[PdfBlendMode2[\"Saturation\"] = 13] = \"Saturation\";\n  PdfBlendMode2[PdfBlendMode2[\"Color\"] = 14] = \"Color\";\n  PdfBlendMode2[PdfBlendMode2[\"Luminosity\"] = 15] = \"Luminosity\";\n  return PdfBlendMode2;\n})(PdfBlendMode || {});\nvar MixedBlendMode = Symbol(\"mixed\");\nvar BLEND_MODE_INFOS = Object.freeze([\n  { id: 0 /* Normal */, label: \"Normal\", css: \"normal\" },\n  { id: 1 /* Multiply */, label: \"Multiply\", css: \"multiply\" },\n  { id: 2 /* Screen */, label: \"Screen\", css: \"screen\" },\n  { id: 3 /* Overlay */, label: \"Overlay\", css: \"overlay\" },\n  { id: 4 /* Darken */, label: \"Darken\", css: \"darken\" },\n  { id: 5 /* Lighten */, label: \"Lighten\", css: \"lighten\" },\n  { id: 6 /* ColorDodge */, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7 /* ColorBurn */, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8 /* HardLight */, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9 /* SoftLight */, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10 /* Difference */, label: \"Difference\", css: \"difference\" },\n  { id: 11 /* Exclusion */, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12 /* Hue */, label: \"Hue\", css: \"hue\" },\n  { id: 13 /* Saturation */, label: \"Saturation\", css: \"saturation\" },\n  { id: 14 /* Color */, label: \"Color\", css: \"color\" },\n  { id: 15 /* Luminosity */, label: \"Luminosity\", css: \"luminosity\" }\n]);\nvar enumToInfo = BLEND_MODE_INFOS.reduce(\n  (m, info) => {\n    m[info.id] = info;\n    return m;\n  },\n  {}\n);\nvar cssToEnum = BLEND_MODE_INFOS.reduce((m, info) => {\n  m[info.css] = info.id;\n  return m;\n}, {});\nfunction getBlendModeInfo(mode) {\n  return enumToInfo[mode] ?? enumToInfo[0 /* Normal */];\n}\nfunction blendModeToCss(mode) {\n  return getBlendModeInfo(mode).css;\n}\nfunction cssToBlendMode(value) {\n  return cssToEnum[value];\n}\nfunction blendModeLabel(mode) {\n  return getBlendModeInfo(mode).label;\n}\nfunction reduceBlendModes(modes) {\n  if (!modes.length) return 0 /* Normal */;\n  const first = modes[0];\n  return modes.every((m) => m === first) ? first : MixedBlendMode;\n}\nvar blendModeSelectOptions = BLEND_MODE_INFOS.map((info) => ({\n  value: info.id,\n  label: info.label\n}));\nfunction uiBlendModeDisplay(value) {\n  return value === MixedBlendMode ? \"(mixed)\" : blendModeLabel(value);\n}\nvar PdfActionType = /* @__PURE__ */ ((PdfActionType2) => {\n  PdfActionType2[PdfActionType2[\"Unsupported\"] = 0] = \"Unsupported\";\n  PdfActionType2[PdfActionType2[\"Goto\"] = 1] = \"Goto\";\n  PdfActionType2[PdfActionType2[\"RemoteGoto\"] = 2] = \"RemoteGoto\";\n  PdfActionType2[PdfActionType2[\"URI\"] = 3] = \"URI\";\n  PdfActionType2[PdfActionType2[\"LaunchAppOrOpenFile\"] = 4] = \"LaunchAppOrOpenFile\";\n  return PdfActionType2;\n})(PdfActionType || {});\nvar PdfAnnotationSubtype = /* @__PURE__ */ ((PdfAnnotationSubtype2) => {\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINK\"] = 2] = \"LINK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FREETEXT\"] = 3] = \"FREETEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINE\"] = 4] = \"LINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUARE\"] = 5] = \"SQUARE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CIRCLE\"] = 6] = \"CIRCLE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYGON\"] = 7] = \"POLYGON\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYLINE\"] = 8] = \"POLYLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"HIGHLIGHT\"] = 9] = \"HIGHLIGHT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNDERLINE\"] = 10] = \"UNDERLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUIGGLY\"] = 11] = \"SQUIGGLY\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STRIKEOUT\"] = 12] = \"STRIKEOUT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STAMP\"] = 13] = \"STAMP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CARET\"] = 14] = \"CARET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"INK\"] = 15] = \"INK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POPUP\"] = 16] = \"POPUP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FILEATTACHMENT\"] = 17] = \"FILEATTACHMENT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SOUND\"] = 18] = \"SOUND\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"MOVIE\"] = 19] = \"MOVIE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WIDGET\"] = 20] = \"WIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SCREEN\"] = 21] = \"SCREEN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"PRINTERMARK\"] = 22] = \"PRINTERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TRAPNET\"] = 23] = \"TRAPNET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WATERMARK\"] = 24] = \"WATERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"THREED\"] = 25] = \"THREED\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"RICHMEDIA\"] = 26] = \"RICHMEDIA\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"XFAWIDGET\"] = 27] = \"XFAWIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"REDACT\"] = 28] = \"REDACT\";\n  return PdfAnnotationSubtype2;\n})(PdfAnnotationSubtype || {});\nvar PdfAnnotationSubtypeName = {\n  [0 /* UNKNOWN */]: \"unknow\",\n  [1 /* TEXT */]: \"text\",\n  [2 /* LINK */]: \"link\",\n  [3 /* FREETEXT */]: \"freetext\",\n  [4 /* LINE */]: \"line\",\n  [5 /* SQUARE */]: \"square\",\n  [6 /* CIRCLE */]: \"circle\",\n  [7 /* POLYGON */]: \"polygon\",\n  [8 /* POLYLINE */]: \"polyline\",\n  [9 /* HIGHLIGHT */]: \"highlight\",\n  [10 /* UNDERLINE */]: \"underline\",\n  [11 /* SQUIGGLY */]: \"squiggly\",\n  [12 /* STRIKEOUT */]: \"strikeout\",\n  [13 /* STAMP */]: \"stamp\",\n  [14 /* CARET */]: \"caret\",\n  [15 /* INK */]: \"ink\",\n  [16 /* POPUP */]: \"popup\",\n  [17 /* FILEATTACHMENT */]: \"fileattachment\",\n  [18 /* SOUND */]: \"sound\",\n  [19 /* MOVIE */]: \"movie\",\n  [20 /* WIDGET */]: \"widget\",\n  [21 /* SCREEN */]: \"screen\",\n  [22 /* PRINTERMARK */]: \"printermark\",\n  [23 /* TRAPNET */]: \"trapnet\",\n  [24 /* WATERMARK */]: \"watermark\",\n  [25 /* THREED */]: \"threed\",\n  [26 /* RICHMEDIA */]: \"richmedia\",\n  [27 /* XFAWIDGET */]: \"xfawidget\",\n  [28 /* REDACT */]: \"redact\"\n};\nvar PdfAnnotationObjectStatus = /* @__PURE__ */ ((PdfAnnotationObjectStatus2) => {\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Created\"] = 0] = \"Created\";\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Committed\"] = 1] = \"Committed\";\n  return PdfAnnotationObjectStatus2;\n})(PdfAnnotationObjectStatus || {});\nvar AppearanceMode = /* @__PURE__ */ ((AppearanceMode2) => {\n  AppearanceMode2[AppearanceMode2[\"Normal\"] = 0] = \"Normal\";\n  AppearanceMode2[AppearanceMode2[\"Rollover\"] = 1] = \"Rollover\";\n  AppearanceMode2[AppearanceMode2[\"Down\"] = 2] = \"Down\";\n  return AppearanceMode2;\n})(AppearanceMode || {});\nvar PdfAnnotationState = /* @__PURE__ */ ((PdfAnnotationState2) => {\n  PdfAnnotationState2[\"Marked\"] = \"Marked\";\n  PdfAnnotationState2[\"Unmarked\"] = \"Unmarked\";\n  PdfAnnotationState2[\"Accepted\"] = \"Accepted\";\n  PdfAnnotationState2[\"Rejected\"] = \"Rejected\";\n  PdfAnnotationState2[\"Complete\"] = \"Complete\";\n  PdfAnnotationState2[\"Cancelled\"] = \"Cancelled\";\n  PdfAnnotationState2[\"None\"] = \"None\";\n  return PdfAnnotationState2;\n})(PdfAnnotationState || {});\nvar PdfAnnotationStateModel = /* @__PURE__ */ ((PdfAnnotationStateModel2) => {\n  PdfAnnotationStateModel2[\"Marked\"] = \"Marked\";\n  PdfAnnotationStateModel2[\"Reviewed\"] = \"Reviewed\";\n  return PdfAnnotationStateModel2;\n})(PdfAnnotationStateModel || {});\nvar PDF_FORM_FIELD_TYPE = /* @__PURE__ */ ((PDF_FORM_FIELD_TYPE2) => {\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"PUSHBUTTON\"] = 1] = \"PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"CHECKBOX\"] = 2] = \"CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"RADIOBUTTON\"] = 3] = \"RADIOBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"COMBOBOX\"] = 4] = \"COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"LISTBOX\"] = 5] = \"LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"TEXTFIELD\"] = 6] = \"TEXTFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"SIGNATURE\"] = 7] = \"SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA\"] = 8] = \"XFA\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_CHECKBOX\"] = 9] = \"XFA_CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_COMBOBOX\"] = 10] = \"XFA_COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_IMAGEFIELD\"] = 11] = \"XFA_IMAGEFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_LISTBOX\"] = 12] = \"XFA_LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_PUSHBUTTON\"] = 13] = \"XFA_PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_SIGNATURE\"] = 14] = \"XFA_SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_TEXTFIELD\"] = 15] = \"XFA_TEXTFIELD\";\n  return PDF_FORM_FIELD_TYPE2;\n})(PDF_FORM_FIELD_TYPE || {});\nvar PdfAnnotationColorType = /* @__PURE__ */ ((PdfAnnotationColorType2) => {\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"Color\"] = 0] = \"Color\";\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"InteriorColor\"] = 1] = \"InteriorColor\";\n  return PdfAnnotationColorType2;\n})(PdfAnnotationColorType || {});\nvar PdfAnnotationBorderStyle = /* @__PURE__ */ ((PdfAnnotationBorderStyle2) => {\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"SOLID\"] = 1] = \"SOLID\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"DASHED\"] = 2] = \"DASHED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"BEVELED\"] = 3] = \"BEVELED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"INSET\"] = 4] = \"INSET\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNDERLINE\"] = 5] = \"UNDERLINE\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"CLOUDY\"] = 6] = \"CLOUDY\";\n  return PdfAnnotationBorderStyle2;\n})(PdfAnnotationBorderStyle || {});\nvar PdfAnnotationFlags = /* @__PURE__ */ ((PdfAnnotationFlags2) => {\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NONE\"] = 0] = \"NONE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"INVISIBLE\"] = 1] = \"INVISIBLE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"HIDDEN\"] = 2] = \"HIDDEN\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"PRINT\"] = 4] = \"PRINT\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ZOOM\"] = 8] = \"NO_ZOOM\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ROTATE\"] = 16] = \"NO_ROTATE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_VIEW\"] = 32] = \"NO_VIEW\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"READ_ONLY\"] = 64] = \"READ_ONLY\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"LOCKED\"] = 128] = \"LOCKED\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"TOGGLE_NOVIEW\"] = 256] = \"TOGGLE_NOVIEW\";\n  return PdfAnnotationFlags2;\n})(PdfAnnotationFlags || {});\nvar PDF_FORM_FIELD_FLAG = /* @__PURE__ */ ((PDF_FORM_FIELD_FLAG2) => {\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NONE\"] = 0] = \"NONE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"READONLY\"] = 1] = \"READONLY\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"REQUIRED\"] = 2] = \"REQUIRED\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NOEXPORT\"] = 4] = \"NOEXPORT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_MULTIPLINE\"] = 4096] = \"TEXT_MULTIPLINE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_PASSWORD\"] = 8192] = \"TEXT_PASSWORD\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_COMBO\"] = 131072] = \"CHOICE_COMBO\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_EDIT\"] = 262144] = \"CHOICE_EDIT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_MULTL_SELECT\"] = 2097152] = \"CHOICE_MULTL_SELECT\";\n  return PDF_FORM_FIELD_FLAG2;\n})(PDF_FORM_FIELD_FLAG || {});\nvar PdfPageObjectType = /* @__PURE__ */ ((PdfPageObjectType2) => {\n  PdfPageObjectType2[PdfPageObjectType2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfPageObjectType2[PdfPageObjectType2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfPageObjectType2[PdfPageObjectType2[\"PATH\"] = 2] = \"PATH\";\n  PdfPageObjectType2[PdfPageObjectType2[\"IMAGE\"] = 3] = \"IMAGE\";\n  PdfPageObjectType2[PdfPageObjectType2[\"SHADING\"] = 4] = \"SHADING\";\n  PdfPageObjectType2[PdfPageObjectType2[\"FORM\"] = 5] = \"FORM\";\n  return PdfPageObjectType2;\n})(PdfPageObjectType || {});\nvar PdfAnnotationFlagName = Object.freeze({\n  [1 /* INVISIBLE */]: \"invisible\",\n  [2 /* HIDDEN */]: \"hidden\",\n  [4 /* PRINT */]: \"print\",\n  [8 /* NO_ZOOM */]: \"noZoom\",\n  [16 /* NO_ROTATE */]: \"noRotate\",\n  [32 /* NO_VIEW */]: \"noView\",\n  [64 /* READ_ONLY */]: \"readOnly\",\n  [128 /* LOCKED */]: \"locked\",\n  [256 /* TOGGLE_NOVIEW */]: \"toggleNoView\"\n});\nvar PdfAnnotationFlagValue = Object.entries(\n  PdfAnnotationFlagName\n).reduce(\n  (acc, [bit, name]) => {\n    acc[name] = Number(bit);\n    return acc;\n  },\n  {}\n);\nfunction flagsToNames(raw) {\n  return Object.keys(PdfAnnotationFlagName).filter((flag) => (raw & flag) !== 0).map((flag) => PdfAnnotationFlagName[flag]);\n}\nfunction namesToFlags(names) {\n  return names.reduce(\n    (mask, name) => mask | PdfAnnotationFlagValue[name],\n    0 /* NONE */\n  );\n}\nvar PdfSegmentObjectType = /* @__PURE__ */ ((PdfSegmentObjectType2) => {\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"LINETO\"] = 0] = \"LINETO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"BEZIERTO\"] = 1] = \"BEZIERTO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"MOVETO\"] = 2] = \"MOVETO\";\n  return PdfSegmentObjectType2;\n})(PdfSegmentObjectType || {});\nvar PdfEngineFeature = /* @__PURE__ */ ((PdfEngineFeature2) => {\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPage\"] = 0] = \"RenderPage\";\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPageRect\"] = 1] = \"RenderPageRect\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Thumbnails\"] = 2] = \"Thumbnails\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Bookmarks\"] = 3] = \"Bookmarks\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Annotations\"] = 4] = \"Annotations\";\n  return PdfEngineFeature2;\n})(PdfEngineFeature || {});\nvar PdfEngineOperation = /* @__PURE__ */ ((PdfEngineOperation2) => {\n  PdfEngineOperation2[PdfEngineOperation2[\"Create\"] = 0] = \"Create\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Read\"] = 1] = \"Read\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Update\"] = 2] = \"Update\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Delete\"] = 3] = \"Delete\";\n  return PdfEngineOperation2;\n})(PdfEngineOperation || {});\nvar MatchFlag = /* @__PURE__ */ ((MatchFlag2) => {\n  MatchFlag2[MatchFlag2[\"None\"] = 0] = \"None\";\n  MatchFlag2[MatchFlag2[\"MatchCase\"] = 1] = \"MatchCase\";\n  MatchFlag2[MatchFlag2[\"MatchWholeWord\"] = 2] = \"MatchWholeWord\";\n  MatchFlag2[MatchFlag2[\"MatchConsecutive\"] = 4] = \"MatchConsecutive\";\n  return MatchFlag2;\n})(MatchFlag || {});\nfunction unionFlags(flags) {\n  return flags.reduce((flag, currFlag) => {\n    return flag | currFlag;\n  }, 0 /* None */);\n}\nfunction compareSearchTarget(targetA, targetB) {\n  const flagA = unionFlags(targetA.flags);\n  const flagB = unionFlags(targetB.flags);\n  return flagA === flagB && targetA.keyword === targetB.keyword;\n}\nvar PdfPermission = /* @__PURE__ */ ((PdfPermission2) => {\n  PdfPermission2[PdfPermission2[\"PrintDocument\"] = 8] = \"PrintDocument\";\n  PdfPermission2[PdfPermission2[\"ModifyContent\"] = 16] = \"ModifyContent\";\n  PdfPermission2[PdfPermission2[\"CopyOrExtract\"] = 32] = \"CopyOrExtract\";\n  PdfPermission2[PdfPermission2[\"AddOrModifyTextAnnot\"] = 64] = \"AddOrModifyTextAnnot\";\n  PdfPermission2[PdfPermission2[\"FillInExistingForm\"] = 512] = \"FillInExistingForm\";\n  PdfPermission2[PdfPermission2[\"ExtractTextOrGraphics\"] = 1024] = \"ExtractTextOrGraphics\";\n  PdfPermission2[PdfPermission2[\"AssembleDocument\"] = 2048] = \"AssembleDocument\";\n  PdfPermission2[PdfPermission2[\"PrintHighQuality\"] = 4096] = \"PrintHighQuality\";\n  return PdfPermission2;\n})(PdfPermission || {});\nvar PdfPageFlattenFlag = /* @__PURE__ */ ((PdfPageFlattenFlag2) => {\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Display\"] = 0] = \"Display\";\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Print\"] = 1] = \"Print\";\n  return PdfPageFlattenFlag2;\n})(PdfPageFlattenFlag || {});\nvar PdfPageFlattenResult = /* @__PURE__ */ ((PdfPageFlattenResult2) => {\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Fail\"] = 0] = \"Fail\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Success\"] = 1] = \"Success\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"NothingToDo\"] = 2] = \"NothingToDo\";\n  return PdfPageFlattenResult2;\n})(PdfPageFlattenResult || {});\nvar PdfErrorCode = /* @__PURE__ */ ((PdfErrorCode2) => {\n  PdfErrorCode2[PdfErrorCode2[\"Ok\"] = 0] = \"Ok\";\n  PdfErrorCode2[PdfErrorCode2[\"Unknown\"] = 1] = \"Unknown\";\n  PdfErrorCode2[PdfErrorCode2[\"NotFound\"] = 2] = \"NotFound\";\n  PdfErrorCode2[PdfErrorCode2[\"WrongFormat\"] = 3] = \"WrongFormat\";\n  PdfErrorCode2[PdfErrorCode2[\"Password\"] = 4] = \"Password\";\n  PdfErrorCode2[PdfErrorCode2[\"Security\"] = 5] = \"Security\";\n  PdfErrorCode2[PdfErrorCode2[\"PageError\"] = 6] = \"PageError\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALoad\"] = 7] = \"XFALoad\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALayout\"] = 8] = \"XFALayout\";\n  PdfErrorCode2[PdfErrorCode2[\"Cancelled\"] = 9] = \"Cancelled\";\n  PdfErrorCode2[PdfErrorCode2[\"Initialization\"] = 10] = \"Initialization\";\n  PdfErrorCode2[PdfErrorCode2[\"NotReady\"] = 11] = \"NotReady\";\n  PdfErrorCode2[PdfErrorCode2[\"NotSupport\"] = 12] = \"NotSupport\";\n  PdfErrorCode2[PdfErrorCode2[\"LoadDoc\"] = 13] = \"LoadDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"DocNotOpen\"] = 14] = \"DocNotOpen\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCloseDoc\"] = 15] = \"CantCloseDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateNewDoc\"] = 16] = \"CantCreateNewDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantImportPages\"] = 17] = \"CantImportPages\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateAnnot\"] = 18] = \"CantCreateAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotRect\"] = 19] = \"CantSetAnnotRect\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotContent\"] = 20] = \"CantSetAnnotContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantRemoveInkList\"] = 21] = \"CantRemoveInkList\";\n  PdfErrorCode2[PdfErrorCode2[\"CantAddInkStoke\"] = 22] = \"CantAddInkStoke\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentSize\"] = 23] = \"CantReadAttachmentSize\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentContent\"] = 24] = \"CantReadAttachmentContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantFocusAnnot\"] = 25] = \"CantFocusAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectText\"] = 26] = \"CantSelectText\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectOption\"] = 27] = \"CantSelectOption\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCheckField\"] = 28] = \"CantCheckField\";\n  return PdfErrorCode2;\n})(PdfErrorCode || {});\nvar PdfTaskHelper = class {\n  /**\n   * Create a task\n   * @returns new task\n   */\n  static create() {\n    return new Task();\n  }\n  /**\n   * Create a task that has been resolved with value\n   * @param result - resolved value\n   * @returns resolved task\n   */\n  static resolve(result) {\n    const task = new Task();\n    task.resolve(result);\n    return task;\n  }\n  /**\n   * Create a task that has been rejected with error\n   * @param reason - rejected error\n   * @returns rejected task\n   */\n  static reject(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n  /**\n   * Create a task that has been aborted with error\n   * @param reason - aborted error\n   * @returns aborted task\n   */\n  static abort(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n};\n\n// src/color.ts\nfunction pdfAlphaColorToWebAlphaColor(c) {\n  const clamp = (n) => Math.max(0, Math.min(255, n));\n  const toHex = (n) => clamp(n).toString(16).padStart(2, \"0\");\n  const color = `#${toHex(c.red)}${toHex(c.green)}${toHex(c.blue)}`;\n  const opacity = clamp(c.alpha) / 255;\n  return { color, opacity };\n}\nfunction webAlphaColorToPdfAlphaColor({ color, opacity }) {\n  if (/^#?[0-9a-f]{3}$/i.test(color)) {\n    color = color.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, \"#$1$1$2$2$3$3\").toLowerCase();\n  }\n  const [, r, g, b] = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color) ?? (() => {\n    throw new Error(`Invalid hex colour: \\u201C${color}\\u201D`);\n  })();\n  const clamp = (n, hi = 255) => Math.max(0, Math.min(hi, n));\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: clamp(Math.round(opacity * 255))\n  };\n}\n\n// src/date.ts\nfunction pdfDateToDate(pdf) {\n  if (!pdf?.startsWith(\"D:\") || pdf.length < 16) return;\n  const y = +pdf.slice(2, 6);\n  const mo = +pdf.slice(6, 8) - 1;\n  const d = +pdf.slice(8, 10);\n  const H = +pdf.slice(10, 12);\n  const M = +pdf.slice(12, 14);\n  const S = +pdf.slice(14, 16);\n  return new Date(Date.UTC(y, mo, d, H, M, S));\n}\nfunction dateToPdfDate(date = /* @__PURE__ */ new Date()) {\n  const z = (n, len = 2) => n.toString().padStart(len, \"0\");\n  const YYYY = date.getUTCFullYear();\n  const MM = z(date.getUTCMonth() + 1);\n  const DD = z(date.getUTCDate());\n  const HH = z(date.getUTCHours());\n  const mm = z(date.getUTCMinutes());\n  const SS = z(date.getUTCSeconds());\n  return `D:${YYYY}${MM}${DD}${HH}${mm}${SS}`;\n}\n\n// src/index.ts\nfunction ignore() {\n}\nexport {\n  AllLogger,\n  AppearanceMode,\n  ConsoleLogger,\n  LevelLogger,\n  LogLevel,\n  MatchFlag,\n  MixedBlendMode,\n  NoopLogger,\n  PDF_FORM_FIELD_FLAG,\n  PDF_FORM_FIELD_TYPE,\n  PdfActionType,\n  PdfAnnotationBorderStyle,\n  PdfAnnotationColorType,\n  PdfAnnotationFlagName,\n  PdfAnnotationFlags,\n  PdfAnnotationObjectStatus,\n  PdfAnnotationState,\n  PdfAnnotationStateModel,\n  PdfAnnotationSubtype,\n  PdfAnnotationSubtypeName,\n  PdfBlendMode,\n  PdfBomOrZwnbsp,\n  PdfEngineFeature,\n  PdfEngineOperation,\n  PdfErrorCode,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF,\n  PdfPageFlattenFlag,\n  PdfPageFlattenResult,\n  PdfPageObjectType,\n  PdfPermission,\n  PdfSegmentObjectType,\n  PdfSoftHyphenMarker,\n  PdfTaskHelper,\n  PdfUnwantedTextMarkers,\n  PdfUnwantedTextRegex,\n  PdfWordJoiner,\n  PdfZeroWidthSpace,\n  PdfZoomMode,\n  PerfLogger,\n  Rotation,\n  Task,\n  TaskAbortedError,\n  TaskRejectedError,\n  TaskStage,\n  blendModeLabel,\n  blendModeSelectOptions,\n  blendModeToCss,\n  boundingRect,\n  calculateAngle,\n  calculateDegree,\n  compareSearchTarget,\n  cssToBlendMode,\n  dateToPdfDate,\n  flagsToNames,\n  getBlendModeInfo,\n  ignore,\n  makeMatrix,\n  namesToFlags,\n  pdfAlphaColorToWebAlphaColor,\n  pdfDateToDate,\n  quadToRect,\n  rectToQuad,\n  reduceBlendModes,\n  restoreOffset,\n  restorePosition,\n  restoreRect,\n  rotatePosition,\n  rotateRect,\n  scalePosition,\n  scaleRect,\n  stripPdfUnwantedMarkers,\n  swap,\n  toIntPos,\n  toIntRect,\n  toIntSize,\n  transformPosition,\n  transformRect,\n  transformSize,\n  uiBlendModeDisplay,\n  unionFlags,\n  webAlphaColorToPdfAlphaColor\n};\n//# sourceMappingURL=index.js.map","import { Component as p, options as s, createElement as P, Fragment as w, toChildArray as g, createContext as F } from \"preact\";\nimport { useState as f, useRef as L, useEffect as h, useContext as W } from \"preact/hooks\";\nimport { u as H } from \"../jsxRuntime.module-Bzuv3cXw.js\";\nimport { P as $, a as j } from \"../math-ChSRQF3r.js\";\nfunction B(e, r) {\n  for (var t in r) e[t] = r[t];\n  return e;\n}\nfunction S(e, r) {\n  for (var t in e) if (t !== \"__source\" && !(t in r)) return !0;\n  for (var o in r) if (o !== \"__source\" && e[o] !== r[o]) return !0;\n  return !1;\n}\nfunction k(e, r) {\n  this.props = e, this.context = r;\n}\n(k.prototype = new p()).isPureReactComponent = !0, k.prototype.shouldComponentUpdate = function(e, r) {\n  return S(this.props, e) || S(this.state, r);\n};\nvar C = s.__b;\ns.__b = function(e) {\n  e.type && e.type.__f && e.ref && (e.props.ref = e.ref, e.ref = null), C && C(e);\n};\nvar M = s.__e;\ns.__e = function(e, r, t, o) {\n  if (e.then) {\n    for (var n, u = r; u = u.__; ) if ((n = u.__c) && n.__c) return r.__e == null && (r.__e = t.__e, r.__k = t.__k), n.__c(e, r);\n  }\n  M(e, r, t, o);\n};\nvar E = s.unmount;\nfunction U(e, r, t) {\n  return e && (e.__c && e.__c.__H && (e.__c.__H.__.forEach(function(o) {\n    typeof o.__c == \"function\" && o.__c();\n  }), e.__c.__H = null), (e = B({}, e)).__c != null && (e.__c.__P === t && (e.__c.__P = r), e.__c.__e = !0, e.__c = null), e.__k = e.__k && e.__k.map(function(o) {\n    return U(o, r, t);\n  })), e;\n}\nfunction z(e, r, t) {\n  return e && t && (e.__v = null, e.__k = e.__k && e.__k.map(function(o) {\n    return z(o, r, t);\n  }), e.__c && e.__c.__P === r && (e.__e && t.appendChild(e.__e), e.__c.__e = !0, e.__c.__P = t)), e;\n}\nfunction y() {\n  this.__u = 0, this.o = null, this.__b = null;\n}\nfunction A(e) {\n  var r = e.__.__c;\n  return r && r.__a && r.__a(e);\n}\nfunction v() {\n  this.i = null, this.l = null;\n}\ns.unmount = function(e) {\n  var r = e.__c;\n  r && r.__R && r.__R(), r && 32 & e.__u && (e.type = null), E && E(e);\n}, (y.prototype = new p()).__c = function(e, r) {\n  var t = r.__c, o = this;\n  o.o == null && (o.o = []), o.o.push(t);\n  var n = A(o.__v), u = !1, i = function() {\n    u || (u = !0, t.__R = null, n ? n(l) : l());\n  };\n  t.__R = i;\n  var l = function() {\n    if (!--o.__u) {\n      if (o.state.__a) {\n        var a = o.state.__a;\n        o.__v.__k[0] = z(a, a.__c.__P, a.__c.__O);\n      }\n      var _;\n      for (o.setState({ __a: o.__b = null }); _ = o.o.pop(); ) _.forceUpdate();\n    }\n  };\n  o.__u++ || 32 & r.__u || o.setState({ __a: o.__b = o.__v.__k[0] }), e.then(i, i);\n}, y.prototype.componentWillUnmount = function() {\n  this.o = [];\n}, y.prototype.render = function(e, r) {\n  if (this.__b) {\n    if (this.__v.__k) {\n      var t = document.createElement(\"div\"), o = this.__v.__k[0].__c;\n      this.__v.__k[0] = U(this.__b, t, o.__O = o.__P);\n    }\n    this.__b = null;\n  }\n  var n = r.__a && P(w, null, e.fallback);\n  return n && (n.__u &= -33), [P(w, null, r.__a ? null : e.children), n];\n};\nvar R = function(e, r, t) {\n  if (++t[1] === t[0] && e.l.delete(r), e.props.revealOrder && (e.props.revealOrder[0] !== \"t\" || !e.l.size)) for (t = e.i; t; ) {\n    for (; t.length > 3; ) t.pop()();\n    if (t[1] < t[0]) break;\n    e.i = t = t[2];\n  }\n};\n(v.prototype = new p()).__a = function(e) {\n  var r = this, t = A(r.__v), o = r.l.get(e);\n  return o[0]++, function(n) {\n    var u = function() {\n      r.props.revealOrder ? (o.push(n), R(r, e, o)) : n();\n    };\n    t ? t(u) : u();\n  };\n}, v.prototype.render = function(e) {\n  this.i = null, this.l = /* @__PURE__ */ new Map();\n  var r = g(e.children);\n  e.revealOrder && e.revealOrder[0] === \"b\" && r.reverse();\n  for (var t = r.length; t--; ) this.l.set(r[t], this.i = [1, 0, this.i]);\n  return e.children;\n}, v.prototype.componentDidUpdate = v.prototype.componentDidMount = function() {\n  var e = this;\n  this.l.forEach(function(r, t) {\n    R(e, t, r);\n  });\n};\nvar T = typeof Symbol < \"u\" && Symbol.for && Symbol.for(\"react.element\") || 60103, q = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, I = /^on(Ani|Tra|Tou|BeforeInp|Compo)/, Z = /[A-Z0-9]/g, G = typeof document < \"u\", J = function(e) {\n  return (typeof Symbol < \"u\" && typeof Symbol() == \"symbol\" ? /fil|che|rad/ : /fil|che|ra/).test(e);\n};\np.prototype.isReactComponent = {}, [\"componentWillMount\", \"componentWillReceiveProps\", \"componentWillUpdate\"].forEach(function(e) {\n  Object.defineProperty(p.prototype, e, { configurable: !0, get: function() {\n    return this[\"UNSAFE_\" + e];\n  }, set: function(r) {\n    Object.defineProperty(this, e, { configurable: !0, writable: !0, value: r });\n  } });\n});\nvar x = s.event;\nfunction K() {\n}\nfunction Q() {\n  return this.cancelBubble;\n}\nfunction X() {\n  return this.defaultPrevented;\n}\ns.event = function(e) {\n  return x && (e = x(e)), e.persist = K, e.isPropagationStopped = Q, e.isDefaultPrevented = X, e.nativeEvent = e;\n};\nvar Y = { enumerable: !1, configurable: !0, get: function() {\n  return this.class;\n} }, O = s.vnode;\ns.vnode = function(e) {\n  typeof e.type == \"string\" && function(r) {\n    var t = r.props, o = r.type, n = {}, u = o.indexOf(\"-\") === -1;\n    for (var i in t) {\n      var l = t[i];\n      if (!(i === \"value\" && \"defaultValue\" in t && l == null || G && i === \"children\" && o === \"noscript\" || i === \"class\" || i === \"className\")) {\n        var a = i.toLowerCase();\n        i === \"defaultValue\" && \"value\" in t && t.value == null ? i = \"value\" : i === \"download\" && l === !0 ? l = \"\" : a === \"translate\" && l === \"no\" ? l = !1 : a[0] === \"o\" && a[1] === \"n\" ? a === \"ondoubleclick\" ? i = \"ondblclick\" : a !== \"onchange\" || o !== \"input\" && o !== \"textarea\" || J(t.type) ? a === \"onfocus\" ? i = \"onfocusin\" : a === \"onblur\" ? i = \"onfocusout\" : I.test(i) && (i = a) : a = i = \"oninput\" : u && q.test(i) ? i = i.replace(Z, \"-$&\").toLowerCase() : l === null && (l = void 0), a === \"oninput\" && n[i = a] && (i = \"oninputCapture\"), n[i] = l;\n      }\n    }\n    o == \"select\" && n.multiple && Array.isArray(n.value) && (n.value = g(t.children).forEach(function(_) {\n      _.props.selected = n.value.indexOf(_.props.value) != -1;\n    })), o == \"select\" && n.defaultValue != null && (n.value = g(t.children).forEach(function(_) {\n      _.props.selected = n.multiple ? n.defaultValue.indexOf(_.props.value) != -1 : n.defaultValue == _.props.value;\n    })), t.class && !t.className ? (n.class = t.class, Object.defineProperty(n, \"className\", Y)) : (t.className && !t.class || t.class && t.className) && (n.class = n.className = t.className), r.props = n;\n  }(e), e.$$typeof = T, O && O(e);\n};\nvar D = s.__r;\ns.__r = function(e) {\n  D && D(e), e.__c;\n};\nvar N = s.diffed;\ns.diffed = function(e) {\n  N && N(e);\n  var r = e.props, t = e.__e;\n  t != null && e.type === \"textarea\" && \"value\" in r && r.value !== t.value && (t.value = r.value == null ? \"\" : r.value);\n};\nconst V = F({\n  registry: null,\n  isInitializing: !0,\n  pluginsReady: !1\n});\nfunction ue({ engine: e, onInitialized: r, plugins: t, children: o }) {\n  const [n, u] = f(null), [i, l] = f(!0), [a, _] = f(!1), d = L(r);\n  return h(() => {\n    d.current = r;\n  }, [r]), h(() => {\n    const c = new $(e);\n    return c.registerPluginBatch(t), (async () => {\n      var b;\n      await c.initialize(), !c.isDestroyed() && (await ((b = d.current) == null ? void 0 : b.call(d, c)), !c.isDestroyed() && (c.pluginsReady().then(() => {\n        c.isDestroyed() || _(!0);\n      }), u(c), l(!1)));\n    })().catch(console.error), () => {\n      c.destroy(), u(null), l(!0), _(!1);\n    };\n  }, [e, t]), /* @__PURE__ */ H(V.Provider, { value: { registry: n, isInitializing: i, pluginsReady: a }, children: typeof o == \"function\" ? o({ registry: n, isInitializing: i, pluginsReady: a }) : o });\n}\nfunction m() {\n  const e = W(V);\n  if (e === void 0)\n    throw new Error(\"useCapability must be used within a PDFContext.Provider\");\n  const { registry: r, isInitializing: t } = e;\n  if (t)\n    return e;\n  if (r === null)\n    throw new Error(\"PDF registry failed to initialize properly\");\n  return e;\n}\nfunction ee(e) {\n  const { registry: r } = m();\n  if (r === null)\n    return {\n      plugin: null,\n      isLoading: !0,\n      ready: new Promise(() => {\n      })\n    };\n  const t = r.getPlugin(e);\n  if (!t)\n    throw new Error(`Plugin ${e} not found`);\n  return {\n    plugin: t,\n    isLoading: !1,\n    ready: t.ready()\n  };\n}\nfunction ae(e) {\n  const { plugin: r, isLoading: t, ready: o } = ee(e);\n  if (!r)\n    return {\n      provides: null,\n      isLoading: t,\n      ready: o\n    };\n  if (!r.provides)\n    throw new Error(`Plugin ${e} does not provide a capability`);\n  return {\n    provides: r.provides(),\n    isLoading: t,\n    ready: o\n  };\n}\nfunction le() {\n  const { registry: e } = m(), [r, t] = f(null);\n  return h(() => {\n    if (!e) return;\n    t(e.getStore().getState());\n    const o = e.getStore().subscribe((n, u) => {\n      t(u);\n    });\n    return () => o();\n  }, [e]), r;\n}\nfunction se() {\n  const { registry: e } = m(), [r, t] = f(null);\n  return h(() => {\n    if (!e) return;\n    const o = e.getStore();\n    t(o.getState().core);\n    const n = o.subscribe((u, i, l) => {\n      o.isCoreAction(u) && !j(i.core, l.core) && t(i.core);\n    });\n    return () => n();\n  }, [e]), r;\n}\nexport {\n  ue as EmbedPDF,\n  V as PDFContext,\n  ae as useCapability,\n  se as useCoreState,\n  ee as usePlugin,\n  m as useRegistry,\n  le as useStoreState\n};\n//# sourceMappingURL=index.js.map\n","import{Component as n,createElement as t,options as e,toChildArray as r,Fragment as u,render as o,hydrate as i,createContext as l,createRef as c,cloneElement as f}from\"preact\";export{Component,Fragment,createContext,createElement,createRef}from\"preact\";import{useState as a,useLayoutEffect as s,useEffect as h,useCallback as v,useContext as d,useDebugValue as m,useId as p,useImperativeHandle as y,useMemo as _,useReducer as b,useRef as S}from\"preact/hooks\";export*from\"preact/hooks\";function g(n,t){for(var e in t)n[e]=t[e];return n}function E(n,t){for(var e in n)if(\"__source\"!==e&&!(e in t))return!0;for(var r in t)if(\"__source\"!==r&&n[r]!==t[r])return!0;return!1}function C(n,t){var e=t(),r=a({t:{__:e,u:t}}),u=r[0].t,o=r[1];return s(function(){u.__=e,u.u=t,x(u)&&o({t:u})},[n,e,t]),h(function(){return x(u)&&o({t:u}),n(function(){x(u)&&o({t:u})})},[n]),e}function x(n){var t,e,r=n.u,u=n.__;try{var o=r();return!((t=u)===(e=o)&&(0!==t||1/t==1/e)||t!=t&&e!=e)}catch(n){return!0}}function R(n){n()}function w(n){return n}function k(){return[!1,R]}var I=s;function N(n,t){this.props=n,this.context=t}function M(n,e){function r(n){var t=this.props.ref,r=t==n.ref;return!r&&t&&(t.call?t(null):t.current=null),e?!e(this.props,n)||!r:E(this.props,n)}function u(e){return this.shouldComponentUpdate=r,t(n,e)}return u.displayName=\"Memo(\"+(n.displayName||n.name)+\")\",u.prototype.isReactComponent=!0,u.__f=!0,u}(N.prototype=new n).isPureReactComponent=!0,N.prototype.shouldComponentUpdate=function(n,t){return E(this.props,n)||E(this.state,t)};var T=e.__b;e.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),T&&T(n)};var A=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.forward_ref\")||3911;function D(n){function t(t){var e=g({},t);return delete e.ref,n(e,t.ref||null)}return t.$$typeof=A,t.render=t,t.prototype.isReactComponent=t.__f=!0,t.displayName=\"ForwardRef(\"+(n.displayName||n.name)+\")\",t}var L=function(n,t){return null==n?null:r(r(n).map(t))},O={map:L,forEach:L,count:function(n){return n?r(n).length:0},only:function(n){var t=r(n);if(1!==t.length)throw\"Children.only\";return t[0]},toArray:r},F=e.__e;e.__e=function(n,t,e,r){if(n.then)for(var u,o=t;o=o.__;)if((u=o.__c)&&u.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),u.__c(n,t);F(n,t,e,r)};var U=e.unmount;function V(n,t,e){return n&&(n.__c&&n.__c.__H&&(n.__c.__H.__.forEach(function(n){\"function\"==typeof n.__c&&n.__c()}),n.__c.__H=null),null!=(n=g({},n)).__c&&(n.__c.__P===e&&(n.__c.__P=t),n.__c.__e=!0,n.__c=null),n.__k=n.__k&&n.__k.map(function(n){return V(n,t,e)})),n}function W(n,t,e){return n&&e&&(n.__v=null,n.__k=n.__k&&n.__k.map(function(n){return W(n,t,e)}),n.__c&&n.__c.__P===t&&(n.__e&&e.appendChild(n.__e),n.__c.__e=!0,n.__c.__P=e)),n}function P(){this.__u=0,this.o=null,this.__b=null}function j(n){var t=n.__.__c;return t&&t.__a&&t.__a(n)}function z(n){var e,r,u;function o(o){if(e||(e=n()).then(function(n){r=n.default||n},function(n){u=n}),u)throw u;if(!r)throw e;return t(r,o)}return o.displayName=\"Lazy\",o.__f=!0,o}function B(){this.i=null,this.l=null}e.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&32&n.__u&&(n.type=null),U&&U(n)},(P.prototype=new n).__c=function(n,t){var e=t.__c,r=this;null==r.o&&(r.o=[]),r.o.push(e);var u=j(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l())};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__a){var n=r.state.__a;r.__v.__k[0]=W(n,n.__c.__P,n.__c.__O)}var t;for(r.setState({__a:r.__b=null});t=r.o.pop();)t.forceUpdate()}};r.__u++||32&t.__u||r.setState({__a:r.__b=r.__v.__k[0]}),n.then(i,i)},P.prototype.componentWillUnmount=function(){this.o=[]},P.prototype.render=function(n,e){if(this.__b){if(this.__v.__k){var r=document.createElement(\"div\"),o=this.__v.__k[0].__c;this.__v.__k[0]=V(this.__b,r,o.__O=o.__P)}this.__b=null}var i=e.__a&&t(u,null,n.fallback);return i&&(i.__u&=-33),[t(u,null,e.__a?null:n.children),i]};var H=function(n,t,e){if(++e[1]===e[0]&&n.l.delete(t),n.props.revealOrder&&(\"t\"!==n.props.revealOrder[0]||!n.l.size))for(e=n.i;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.i=e=e[2]}};function Z(n){return this.getChildContext=function(){return n.context},n.children}function Y(n){var e=this,r=n.h;if(e.componentWillUnmount=function(){o(null,e.v),e.v=null,e.h=null},e.h&&e.h!==r&&e.componentWillUnmount(),!e.v){for(var u=e.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;e.h=r,e.v={nodeType:1,parentNode:r,childNodes:[],__k:{__m:u.__m},contains:function(){return!0},insertBefore:function(n,t){this.childNodes.push(n),e.h.insertBefore(n,t)},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),e.h.removeChild(n)}}}o(t(Z,{context:e.context},n.__v),e.v)}function $(n,e){var r=t(Y,{__v:n,h:e});return r.containerInfo=e,r}(B.prototype=new n).__a=function(n){var t=this,e=j(t.__v),r=t.l.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),H(t,n,r)):u()};e?e(o):o()}},B.prototype.render=function(n){this.i=null,this.l=new Map;var t=r(n.children);n.revealOrder&&\"b\"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.l.set(t[e],this.i=[1,0,this.i]);return n.children},B.prototype.componentDidUpdate=B.prototype.componentDidMount=function(){var n=this;this.l.forEach(function(t,e){H(n,e,t)})};var q=\"undefined\"!=typeof Symbol&&Symbol.for&&Symbol.for(\"react.element\")||60103,G=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,J=/^on(Ani|Tra|Tou|BeforeInp|Compo)/,K=/[A-Z0-9]/g,Q=\"undefined\"!=typeof document,X=function(n){return(\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol()?/fil|che|rad/:/fil|che|ra/).test(n)};function nn(n,t,e){return null==t.__k&&(t.textContent=\"\"),o(n,t),\"function\"==typeof e&&e(),n?n.__c:null}function tn(n,t,e){return i(n,t),\"function\"==typeof e&&e(),n?n.__c:null}n.prototype.isReactComponent={},[\"componentWillMount\",\"componentWillReceiveProps\",\"componentWillUpdate\"].forEach(function(t){Object.defineProperty(n.prototype,t,{configurable:!0,get:function(){return this[\"UNSAFE_\"+t]},set:function(n){Object.defineProperty(this,t,{configurable:!0,writable:!0,value:n})}})});var en=e.event;function rn(){}function un(){return this.cancelBubble}function on(){return this.defaultPrevented}e.event=function(n){return en&&(n=en(n)),n.persist=rn,n.isPropagationStopped=un,n.isDefaultPrevented=on,n.nativeEvent=n};var ln,cn={enumerable:!1,configurable:!0,get:function(){return this.class}},fn=e.vnode;e.vnode=function(n){\"string\"==typeof n.type&&function(n){var t=n.props,e=n.type,u={},o=-1===e.indexOf(\"-\");for(var i in t){var l=t[i];if(!(\"value\"===i&&\"defaultValue\"in t&&null==l||Q&&\"children\"===i&&\"noscript\"===e||\"class\"===i||\"className\"===i)){var c=i.toLowerCase();\"defaultValue\"===i&&\"value\"in t&&null==t.value?i=\"value\":\"download\"===i&&!0===l?l=\"\":\"translate\"===c&&\"no\"===l?l=!1:\"o\"===c[0]&&\"n\"===c[1]?\"ondoubleclick\"===c?i=\"ondblclick\":\"onchange\"!==c||\"input\"!==e&&\"textarea\"!==e||X(t.type)?\"onfocus\"===c?i=\"onfocusin\":\"onblur\"===c?i=\"onfocusout\":J.test(i)&&(i=c):c=i=\"oninput\":o&&G.test(i)?i=i.replace(K,\"-$&\").toLowerCase():null===l&&(l=void 0),\"oninput\"===c&&u[i=c]&&(i=\"oninputCapture\"),u[i]=l}}\"select\"==e&&u.multiple&&Array.isArray(u.value)&&(u.value=r(t.children).forEach(function(n){n.props.selected=-1!=u.value.indexOf(n.props.value)})),\"select\"==e&&null!=u.defaultValue&&(u.value=r(t.children).forEach(function(n){n.props.selected=u.multiple?-1!=u.defaultValue.indexOf(n.props.value):u.defaultValue==n.props.value})),t.class&&!t.className?(u.class=t.class,Object.defineProperty(u,\"className\",cn)):(t.className&&!t.class||t.class&&t.className)&&(u.class=u.className=t.className),n.props=u}(n),n.$$typeof=q,fn&&fn(n)};var an=e.__r;e.__r=function(n){an&&an(n),ln=n.__c};var sn=e.diffed;e.diffed=function(n){sn&&sn(n);var t=n.props,e=n.__e;null!=e&&\"textarea\"===n.type&&\"value\"in t&&t.value!==e.value&&(e.value=null==t.value?\"\":t.value),ln=null};var hn={ReactCurrentDispatcher:{current:{readContext:function(n){return ln.__n[n.__c].props.value},useCallback:v,useContext:d,useDebugValue:m,useDeferredValue:w,useEffect:h,useId:p,useImperativeHandle:y,useInsertionEffect:I,useLayoutEffect:s,useMemo:_,useReducer:b,useRef:S,useState:a,useSyncExternalStore:C,useTransition:k}}},vn=\"18.3.1\";function dn(n){return t.bind(null,n)}function mn(n){return!!n&&n.$$typeof===q}function pn(n){return mn(n)&&n.type===u}function yn(n){return!!n&&!!n.displayName&&(\"string\"==typeof n.displayName||n.displayName instanceof String)&&n.displayName.startsWith(\"Memo(\")}function _n(n){return mn(n)?f.apply(null,arguments):n}function bn(n){return!!n.__k&&(o(null,n),!0)}function Sn(n){return n&&(n.base||1===n.nodeType&&n)||null}var gn=function(n,t){return n(t)},En=function(n,t){return n(t)},Cn=u,xn=mn,Rn={useState:a,useId:p,useReducer:b,useEffect:h,useLayoutEffect:s,useInsertionEffect:I,useTransition:k,useDeferredValue:w,useSyncExternalStore:C,startTransition:R,useRef:S,useImperativeHandle:y,useMemo:_,useCallback:v,useContext:d,useDebugValue:m,version:\"18.3.1\",Children:O,render:nn,hydrate:tn,unmountComponentAtNode:bn,createPortal:$,createElement:t,createContext:l,createFactory:dn,cloneElement:_n,createRef:c,Fragment:u,isValidElement:mn,isElement:xn,isFragment:pn,isMemo:yn,findDOMNode:Sn,Component:n,PureComponent:N,memo:M,forwardRef:D,flushSync:En,unstable_batchedUpdates:gn,StrictMode:Cn,Suspense:P,SuspenseList:B,lazy:z,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:hn};export{O as Children,N as PureComponent,Cn as StrictMode,P as Suspense,B as SuspenseList,hn as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_n as cloneElement,dn as createFactory,$ as createPortal,Rn as default,Sn as findDOMNode,En as flushSync,D as forwardRef,tn as hydrate,xn as isElement,pn as isFragment,yn as isMemo,mn as isValidElement,z as lazy,M as memo,nn as render,R as startTransition,bn as unmountComponentAtNode,gn as unstable_batchedUpdates,w as useDeferredValue,I as useInsertionEffect,C as useSyncExternalStore,k as useTransition,vn as version};\n//# sourceMappingURL=compat.module.js.map\n","import { useCapability, usePlugin } from '@embedpdf/core/react';\nimport {\n  initialState,\n  InteractionManagerPlugin,\n  InteractionManagerState,\n  PointerEventHandlers,\n  PointerEventHandlersWithLifecycle,\n} from '@embedpdf/plugin-interaction-manager';\nimport { useState, useEffect } from 'react';\n\nexport const useInteractionManagerPlugin = () =>\n  usePlugin<InteractionManagerPlugin>(InteractionManagerPlugin.id);\nexport const useInteractionManagerCapability = () =>\n  useCapability<InteractionManagerPlugin>(InteractionManagerPlugin.id);\n\nexport function useInteractionManager() {\n  const { provides } = useInteractionManagerCapability();\n  const [state, setState] = useState<InteractionManagerState>(initialState);\n\n  useEffect(() => {\n    if (!provides) return;\n    return provides.onStateChange((state) => {\n      setState(state);\n    });\n  }, [provides]);\n\n  return {\n    provides,\n    state,\n  };\n}\n\nexport function useCursor() {\n  const { provides } = useInteractionManagerCapability();\n  return {\n    setCursor: (token: string, cursor: string, prio = 0) => {\n      provides?.setCursor(token, cursor, prio);\n    },\n    removeCursor: (token: string) => {\n      provides?.removeCursor(token);\n    },\n  };\n}\n\ninterface UsePointerHandlersOptions {\n  modeId?: string | string[];\n  pageIndex?: number;\n}\n\nexport function usePointerHandlers({ modeId, pageIndex }: UsePointerHandlersOptions) {\n  const { provides } = useInteractionManagerCapability();\n  return {\n    register: (\n      handlers: PointerEventHandlersWithLifecycle,\n      options?: { modeId?: string | string[]; pageIndex?: number },\n    ) => {\n      // Use provided options or fall back to hook-level options\n      const finalModeId = options?.modeId ?? modeId;\n      const finalPageIndex = options?.pageIndex ?? pageIndex;\n\n      return finalModeId\n        ? provides?.registerHandlers({\n            modeId: finalModeId,\n            handlers,\n            pageIndex: finalPageIndex,\n          })\n        : provides?.registerAlways({\n            scope:\n              finalPageIndex !== undefined\n                ? { type: 'page', pageIndex: finalPageIndex }\n                : { type: 'global' },\n            handlers,\n          });\n    },\n  };\n}\n\nexport function useIsPageExclusive() {\n  const { provides: cap } = useInteractionManagerCapability();\n\n  const [isPageExclusive, setIsPageExclusive] = useState<boolean>(() => {\n    const m = cap?.getActiveInteractionMode();\n    return m?.scope === 'page' && !!m.exclusive;\n  });\n\n  useEffect(() => {\n    if (!cap) return;\n\n    return cap.onModeChange(() => {\n      const mode = cap.getActiveInteractionMode();\n      setIsPageExclusive(mode?.scope === 'page' && !!mode?.exclusive);\n    });\n  }, [cap]);\n\n  return isPageExclusive;\n}\n","import { ReactNode, useEffect, useRef } from 'react';\nimport { createPointerProvider } from '../../shared/utils';\n\nimport { useInteractionManagerCapability } from '../hooks';\n\ninterface GlobalPointerProviderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: ReactNode;\n  style?: React.CSSProperties;\n}\n\nexport const GlobalPointerProvider = ({\n  children,\n  style,\n  ...props\n}: GlobalPointerProviderProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { provides: cap } = useInteractionManagerCapability();\n\n  useEffect(() => {\n    if (!cap || !ref.current) return;\n\n    return createPointerProvider(cap, { type: 'global' }, ref.current);\n  }, [cap]);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        width: '100%',\n        height: '100%',\n        ...style,\n      }}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n","import { ReactNode, useEffect, useRef, useCallback } from 'react';\nimport { Position, restorePosition } from '@embedpdf/models';\nimport { createPointerProvider } from '../../shared/utils';\n\nimport { useInteractionManagerCapability, useIsPageExclusive } from '../hooks';\n\ninterface PagePointerProviderProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: ReactNode;\n  pageIndex: number;\n  pageWidth: number;\n  pageHeight: number;\n  rotation: number;\n  scale: number;\n  style?: React.CSSProperties;\n  convertEventToPoint?: (event: PointerEvent, element: HTMLElement) => Position;\n}\n\nexport const PagePointerProvider = ({\n  pageIndex,\n  children,\n  pageWidth,\n  pageHeight,\n  rotation,\n  scale,\n  convertEventToPoint,\n  style,\n  ...props\n}: PagePointerProviderProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const { provides: cap } = useInteractionManagerCapability();\n  const isPageExclusive = useIsPageExclusive();\n\n  // Memoize the default conversion function\n  const defaultConvertEventToPoint = useCallback(\n    (event: PointerEvent, element: HTMLElement): Position => {\n      const rect = element.getBoundingClientRect();\n      const displayPoint = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top,\n      };\n      return restorePosition(\n        { width: pageWidth, height: pageHeight },\n        displayPoint,\n        rotation,\n        scale,\n      );\n    },\n    [pageWidth, pageHeight, rotation, scale],\n  );\n\n  useEffect(() => {\n    if (!cap || !ref.current) return;\n\n    return createPointerProvider(\n      cap,\n      { type: 'page', pageIndex },\n      ref.current,\n      convertEventToPoint || defaultConvertEventToPoint,\n    );\n  }, [cap, pageIndex, convertEventToPoint, defaultConvertEventToPoint]);\n\n  return (\n    <div\n      ref={ref}\n      style={{\n        ...style,\n      }}\n      {...props}\n    >\n      {children}\n      {isPageExclusive && (\n        <div style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0, zIndex: 10 }} />\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","names":["PdfSoftHyphenMarker","PdfZeroWidthSpace","PdfWordJoiner","PdfBomOrZwnbsp","PdfNonCharacterFFFE","PdfNonCharacterFFFF","PdfUnwantedTextMarkers","BLEND_MODE_INFOS","m","info","PdfAnnotationFlagName","acc","bit","name","g","n","t","e","E","r","N","T","F","u","o","U","V","W","P","j","B","i","l","H","q","G","J","K","Q","X","en","rn","un","on","cn","fn","c","an","sn","PDFContext","createContext","useRegistry","contextValue","useContext","PDFContext","registry","isInitializing","usePlugin","pluginId","plugin","useCapability","isLoading","ready","SET_DOCUMENT","SET_SCALE","SET_ROTATION","SET_PAGES","setScale","scale","swap","size","width","height","transformSize","rotation","scaleFactor","PdfSoftHyphenMarker","PdfZeroWidthSpace","PdfWordJoiner","PdfBomOrZwnbsp","PdfNonCharacterFFFE","PdfNonCharacterFFFF","PdfUnwantedTextMarkers","BLEND_MODE_INFOS","m","info","PdfAnnotationFlagName","acc","bit","name","clamp","value","min","max","arePropsEqual","a","b","visited","aType","pairId","getPairId","aIsArray","bIsArray","arraysEqualUnordered","objectsEqual","objectId","objectIdCounter","objectIds","obj","used","outer","i","elemA","j","aKeys","bKeys","key","valA","valB","getPagesWithRotatedSize","state","page","p","BasePlugin","id","registry","action","newState","oldState","resolve","cap","debounceTime","now","lastActionTime","listener","EventControl","handler","options","data","throttleMode","createEmitter","listeners","v","l","createBehaviorEmitter","initial","equality","proxyMap","_value","notify","baseOn","realListener","destroy","ctl","proxy","selector","eq","prev","mapped","next","x","y","w","E","C","f","d","r","J","s","z","import_react","ee","import_react","import_react","z","M","L","$","F","N","k","P","i","e","_","t","v","r","n","x","a","o","U","B","S","G","d","s","w","c","b","E","C","m","p","u","h","l","ACTIVATE_MODE","PAUSE_INTERACTION","RESUME_INTERACTION","SET_CURSOR","activateMode","mode","setCursor","cursor","pauseInteraction","resumeInteraction","mergeHandlers","list","keys","out","evt","nativeEvt","modeId","_a","_InteractionManagerPlugin","BasePlugin","id","registry","createEmitter","createBehaviorEmitter","options","token","priority","scope","previousMode","handler","handlerSet","bucket","pageIndex","handlers","modeIds","cleanupFunctions","set","cleanup","mergeSets","modeSpecific","alwaysPageSet","modePageSet","top","newState","InteractionManagerPlugin","PdfSoftHyphenMarker","PdfZeroWidthSpace","PdfWordJoiner","PdfBomOrZwnbsp","PdfNonCharacterFFFE","PdfNonCharacterFFFF","PdfUnwantedTextMarkers","BLEND_MODE_INFOS","m","info","PdfAnnotationFlagName","acc","bit","name","B","r","t","S","o","k","p","C","s","M","n","u","E","U","z","y","A","v","i","l","a","_","P","w","R","g","T","q","I","Z","G","J","x","K","Q","X","Y","O","D","N","V","F","m","W","ee","ae","e","j","H","en","rn","un","on","cn","fn","c","an","sn","useInteractionManagerCapability","useCapability","InteractionManagerPlugin","usePointerHandlers","modeId","pageIndex","provides","useInteractionManagerCapability","handlers","options","finalModeId","finalPageIndex","import_jsx_runtime","v","_"]}