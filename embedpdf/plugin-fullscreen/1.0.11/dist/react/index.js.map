{"version":3,"sources":["../../src/react/hooks/use-fullscreen.ts","../../src/react/components/fullscreen.tsx"],"sourcesContent":["import { useCapability, usePlugin } from '@embedpdf/core/react';\nimport { FullscreenPlugin, FullscreenState, initialState } from '@embedpdf/plugin-fullscreen';\nimport { useState, useEffect } from 'react';\n\nexport const useFullscreenPlugin = () => usePlugin<FullscreenPlugin>(FullscreenPlugin.id);\nexport const useFullscreenCapability = () => useCapability<FullscreenPlugin>(FullscreenPlugin.id);\n\nexport const useFullscreen = () => {\n  const { provides } = useFullscreenCapability();\n  const [state, setState] = useState<FullscreenState>(initialState);\n\n  useEffect(() => {\n    return provides?.onStateChange((state) => {\n      setState(state);\n    });\n  }, [provides]);\n\n  return {\n    provides,\n    state,\n  };\n};\n","import { useEffect, useRef } from 'react';\n\nimport { useFullscreenPlugin, useFullscreenCapability } from '../hooks';\n\ntype FullscreenProviderProps = Omit<React.HTMLAttributes<HTMLDivElement>, 'style'> & {\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n};\n\nexport function FullscreenProvider({ children, ...props }: FullscreenProviderProps) {\n  const { provides: fullscreenCapability } = useFullscreenCapability();\n  const { plugin } = useFullscreenPlugin();\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!fullscreenCapability) return;\n\n    const unsub = fullscreenCapability.onRequest(async (action) => {\n      if (action === 'enter') {\n        const el = ref.current;\n        if (el && !document.fullscreenElement) await el.requestFullscreen();\n      } else {\n        if (document.fullscreenElement) await document.exitFullscreen();\n      }\n    });\n\n    return unsub;\n  }, [fullscreenCapability]);\n\n  useEffect(() => {\n    if (!plugin) return;\n    const handler = () => plugin.setFullscreenState(!!document.fullscreenElement);\n    document.addEventListener('fullscreenchange', handler);\n    return () => document.removeEventListener('fullscreenchange', handler);\n  }, [plugin]);\n\n  return (\n    <div\n      {...props}\n      style={{ position: 'relative', width: '100%', height: '100%', ...props.style }}\n      ref={ref}\n    >\n      {children}\n    </div>\n  );\n}\n"],"mappings":";AAAA,SAAS,eAAe,iBAAiB;AACzC,SAAS,kBAAmC,oBAAoB;AAChE,SAAS,UAAU,iBAAiB;AAE7B,IAAM,sBAAsB,MAAM,UAA4B,iBAAiB,EAAE;AACjF,IAAM,0BAA0B,MAAM,cAAgC,iBAAiB,EAAE;AAEzF,IAAM,gBAAgB,MAAM;AACjC,QAAM,EAAE,SAAS,IAAI,wBAAwB;AAC7C,QAAM,CAAC,OAAO,QAAQ,IAAI,SAA0B,YAAY;AAEhE,YAAU,MAAM;AACd,WAAO,UAAU,cAAc,CAACA,WAAU;AACxC,eAASA,MAAK;AAAA,IAChB,CAAC;AAAA,EACH,GAAG,CAAC,QAAQ,CAAC;AAEb,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;ACrBA,SAAS,aAAAC,YAAW,cAAc;AAqC9B;AA5BG,SAAS,mBAAmB,EAAE,UAAU,GAAG,MAAM,GAA4B;AAClF,QAAM,EAAE,UAAU,qBAAqB,IAAI,wBAAwB;AACnE,QAAM,EAAE,OAAO,IAAI,oBAAoB;AACvC,QAAM,MAAM,OAAuB,IAAI;AAEvC,EAAAC,WAAU,MAAM;AACd,QAAI,CAAC,qBAAsB;AAE3B,UAAM,QAAQ,qBAAqB,UAAU,OAAO,WAAW;AAC7D,UAAI,WAAW,SAAS;AACtB,cAAM,KAAK,IAAI;AACf,YAAI,MAAM,CAAC,SAAS,kBAAmB,OAAM,GAAG,kBAAkB;AAAA,MACpE,OAAO;AACL,YAAI,SAAS,kBAAmB,OAAM,SAAS,eAAe;AAAA,MAChE;AAAA,IACF,CAAC;AAED,WAAO;AAAA,EACT,GAAG,CAAC,oBAAoB,CAAC;AAEzB,EAAAA,WAAU,MAAM;AACd,QAAI,CAAC,OAAQ;AACb,UAAM,UAAU,MAAM,OAAO,mBAAmB,CAAC,CAAC,SAAS,iBAAiB;AAC5E,aAAS,iBAAiB,oBAAoB,OAAO;AACrD,WAAO,MAAM,SAAS,oBAAoB,oBAAoB,OAAO;AAAA,EACvE,GAAG,CAAC,MAAM,CAAC;AAEX,SACE;AAAA,IAAC;AAAA;AAAA,MACE,GAAG;AAAA,MACJ,OAAO,EAAE,UAAU,YAAY,OAAO,QAAQ,QAAQ,QAAQ,GAAG,MAAM,MAAM;AAAA,MAC7E;AAAA,MAEC;AAAA;AAAA,EACH;AAEJ;","names":["state","useEffect","useEffect"]}