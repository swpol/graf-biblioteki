{"version":3,"file":"scroll-plugin-DIl4FWp0.js","sources":["../../core/dist/math-ChSRQF3r.js","../../core/dist/index.js","../../models/dist/index.js","../src/lib/types.ts","../src/lib/strategies/base-strategy.ts","../src/lib/strategies/vertical-strategy.ts","../src/lib/strategies/horizontal-strategy.ts","../src/lib/actions.ts","../src/lib/selectors.ts","../src/lib/scroll-plugin.ts"],"sourcesContent":["class b {\n  constructor() {\n    this.dependencyGraph = /* @__PURE__ */ new Map();\n  }\n  addNode(e, t = []) {\n    this.dependencyGraph.set(e, new Set(t));\n  }\n  hasCircularDependencies() {\n    const e = /* @__PURE__ */ new Set(), t = /* @__PURE__ */ new Set(), r = (s) => {\n      e.add(s), t.add(s);\n      const n = this.dependencyGraph.get(s) || /* @__PURE__ */ new Set();\n      for (const a of n)\n        if (e.has(a)) {\n          if (t.has(a))\n            return !0;\n        } else if (r(a)) return !0;\n      return t.delete(s), !1;\n    };\n    for (const s of this.dependencyGraph.keys())\n      if (!e.has(s) && r(s))\n        return !0;\n    return !1;\n  }\n  resolveLoadOrder() {\n    if (this.hasCircularDependencies())\n      throw new Error(\"Circular dependencies detected\");\n    const e = [], t = /* @__PURE__ */ new Set(), r = /* @__PURE__ */ new Set(), s = (n) => {\n      if (r.has(n)) throw new Error(\"Circular dependency\");\n      if (t.has(n)) return;\n      r.add(n);\n      const a = this.dependencyGraph.get(n) || /* @__PURE__ */ new Set();\n      for (const o of a)\n        s(o);\n      r.delete(n), t.add(n), e.push(n);\n    };\n    for (const n of this.dependencyGraph.keys())\n      t.has(n) || s(n);\n    return e;\n  }\n}\nclass l extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginRegistrationError\";\n  }\n}\nclass u extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginNotFoundError\";\n  }\n}\nclass m extends Error {\n  constructor(e) {\n    super(e), this.name = \"CircularDependencyError\";\n  }\n}\nclass K extends Error {\n  constructor(e) {\n    super(e), this.name = \"CapabilityNotFoundError\";\n  }\n}\nclass H extends Error {\n  constructor(e) {\n    super(e), this.name = \"CapabilityConflictError\";\n  }\n}\nclass W extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginInitializationError\";\n  }\n}\nclass R extends Error {\n  constructor(e) {\n    super(e), this.name = \"PluginConfigurationError\";\n  }\n}\nclass D {\n  /**\n   * Initializes the PluginStore with the main store and plugin ID.\n   * @param store The main store instance.\n   * @param pluginId The unique identifier for the plugin.\n   */\n  constructor(e, t) {\n    this.store = e, this.pluginId = t;\n  }\n  /**\n   * Gets the current state of the plugin.\n   * @returns The plugin's state.\n   */\n  getState() {\n    return this.store.getState().plugins[this.pluginId];\n  }\n  /**\n   * Dispatches an action for the plugin and returns the *new* global state.\n   * If you only need the plugin’s updated state, call `getState()` afterward.\n   * @param action The action to dispatch.\n   * @returns The updated global store state (after plugin reducer).\n   */\n  dispatch(e) {\n    return this.store.dispatchToPlugin(this.pluginId, e);\n  }\n  /**\n   * Subscribes to state changes only for this specific plugin.\n   * You now receive (action, newPluginState, oldPluginState) in the callback.\n   *\n   * @param listener The callback to invoke when plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToState(e) {\n    return this.store.subscribeToPlugin(this.pluginId, (t, r, s) => {\n      e(\n        t,\n        r,\n        s\n      );\n    });\n  }\n  /**\n   * Subscribes to a specific action type for the plugin.\n   * This still uses the main store's `onAction`, so you get the *global*\n   * old/new store states there. If you specifically want old/new plugin state,\n   * use `subscribeToState` instead.\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction(e, t) {\n    return this.store.onAction(e, (r, s, n) => {\n      t(\n        r,\n        s.plugins[this.pluginId],\n        n.plugins[this.pluginId]\n      );\n    });\n  }\n}\nconst g = \"LOAD_DOCUMENT\", f = \"SET_DOCUMENT\", p = \"SET_DOCUMENT_ERROR\", y = \"SET_SCALE\", w = \"SET_ROTATION\", E = \"SET_PAGES\", O = [\n  g,\n  f,\n  p,\n  y,\n  w,\n  E\n], Z = () => ({ type: g }), I = (i) => ({\n  type: f,\n  payload: i\n}), V = (i) => ({\n  type: p,\n  payload: i\n}), J = (i) => ({ type: y, payload: i }), Y = (i) => ({\n  type: w,\n  payload: i\n}), Q = (i) => ({\n  type: E,\n  payload: i\n});\nclass A {\n  /**\n   * Initializes the store with the provided core state.\n   * @param reducer          The core reducer function\n   * @param initialCoreState The initial core state\n   */\n  constructor(e, t) {\n    this.initialCoreState = t, this.pluginReducers = {}, this.listeners = [], this.pluginListeners = {}, this.state = { core: t, plugins: {} }, this.coreReducer = e;\n  }\n  /**\n   * Adds a reducer for a plugin-specific state.\n   * @param pluginId The unique identifier for the plugin.\n   * @param reducer The reducer function for the plugin state.\n   * @param initialState The initial state for the plugin.\n   */\n  addPluginReducer(e, t, r) {\n    this.state.plugins[e] = r, this.pluginReducers[e] = t;\n  }\n  /**\n   * Dispatches an action *only* to the core reducer.\n   * Notifies the global store listeners with (action, newState, oldState).\n   *\n   * @param action The action to dispatch, typed as CoreAction\n   * @returns The updated *global* store state\n   */\n  dispatchToCore(e) {\n    if (!this.coreReducer)\n      return this.getState();\n    const t = this.getState();\n    this.state.core = this.coreReducer(this.state.core, e);\n    const r = this.getState();\n    return this.listeners.forEach((s) => s(e, r, t)), r;\n  }\n  /**\n   * Dispatches an action *only* to a specific plugin.\n   * Optionally notifies global store listeners if `notifyGlobal` is true.\n   * Always notifies plugin-specific listeners with (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId   The plugin identifier\n   * @param action     The plugin action to dispatch\n   * @param notifyGlobal Whether to also notify global store listeners\n   * @returns The updated *global* store state\n   */\n  dispatchToPlugin(e, t, r = !0) {\n    const s = this.getState(), n = this.pluginReducers[e];\n    if (!n)\n      return s;\n    const a = s.plugins[e], o = n(a, t);\n    this.state.plugins[e] = o;\n    const c = this.getState();\n    return r && this.listeners.forEach((h) => h(t, c, s)), this.pluginListeners[e] && this.pluginListeners[e].forEach((h) => {\n      h(t, o, a);\n    }), o;\n  }\n  /**\n   * Dispatches an action to update the state using:\n   * - the core reducer (if it's a CoreAction)\n   * - *all* plugin reducers (regardless of action type), with no global notify for each plugin\n   *\n   * Returns the new *global* store state after all reducers have processed the action.\n   *\n   * @param action The action to dispatch (can be CoreAction or any Action).\n   */\n  dispatch(e) {\n    const t = this.getState();\n    this.isCoreAction(e) && (this.state.core = this.coreReducer(this.state.core, e));\n    for (const s in this.pluginReducers) {\n      const n = this.pluginReducers[s], a = t.plugins[s];\n      n && (this.state.plugins[s] = n(a, e));\n    }\n    const r = this.getState();\n    return this.listeners.forEach((s) => s(e, r, t)), r;\n  }\n  /**\n   * Returns a shallow copy of the current state.\n   * @returns The current store state.\n   */\n  getState() {\n    return {\n      core: { ...this.state.core },\n      plugins: { ...this.state.plugins }\n    };\n  }\n  /**\n   * Subscribes a listener to *global* state changes.\n   * The callback signature is now (action, newState, oldState).\n   *\n   * @param listener The callback to invoke on state changes\n   * @returns A function to unsubscribe the listener\n   */\n  subscribe(e) {\n    return this.listeners.push(e), () => {\n      this.listeners = this.listeners.filter((t) => t !== e);\n    };\n  }\n  /**\n   * Subscribes a listener to *plugin-specific* state changes.\n   * The callback signature is now (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId The unique identifier for the plugin.\n   * @param listener The callback to invoke on plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToPlugin(e, t) {\n    if (!(e in this.state.plugins))\n      throw new Error(\n        `Plugin state not found for plugin \"${e}\". Did you forget to call addPluginReducer?`\n      );\n    return this.pluginListeners[e] || (this.pluginListeners[e] = []), this.pluginListeners[e].push(t), () => {\n      this.pluginListeners[e] = this.pluginListeners[e].filter((r) => r !== t), this.pluginListeners[e].length === 0 && delete this.pluginListeners[e];\n    };\n  }\n  /**\n   * Subscribes to a specific action type (only from the core's action union).\n   * The callback signature is (action, newState, oldState).\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction(e, t) {\n    return this.subscribe((r, s, n) => {\n      r.type === e && t(r, s, n);\n    });\n  }\n  /**\n   * Gets a PluginStore handle for a specific plugin.\n   * @param pluginId The unique identifier for the plugin.\n   * @returns A PluginStore instance for the plugin.\n   */\n  getPluginStore(e) {\n    if (!(e in this.state.plugins))\n      throw new Error(\n        `Plugin state not found for plugin \"${e}\". Did you forget to call addPluginReducer?`\n      );\n    return new D(this, e);\n  }\n  /**\n   * Helper method to check if an action is a CoreAction.\n   * Adjust if you have a more refined way to differentiate CoreAction vs. any other Action.\n   */\n  isCoreAction(e) {\n    return O.includes(e.type);\n  }\n  /**\n   * Destroy the store: drop every listener and plugin reducer\n   */\n  destroy() {\n    var e, t;\n    this.listeners.length = 0;\n    for (const r in this.pluginListeners)\n      (t = (e = this.pluginListeners[r]) == null ? void 0 : e.splice) == null || t.call(e, 0);\n    this.pluginListeners = {}, this.pluginReducers = {}, this.state.plugins = {}, this.state.core = { ...this.initialCoreState };\n  }\n}\nvar C = /* @__PURE__ */ ((i) => (i[i.Degree0 = 0] = \"Degree0\", i[i.Degree90 = 1] = \"Degree90\", i[i.Degree180 = 2] = \"Degree180\", i[i.Degree270 = 3] = \"Degree270\", i))(C || {});\nfunction T(i) {\n  const { width: e, height: t } = i;\n  return {\n    width: t,\n    height: e\n  };\n}\nfunction X(i, e, t) {\n  return i = e % 2 === 0 ? i : T(i), {\n    width: i.width * t,\n    height: i.height * t\n  };\n}\nvar z = \"­\", M = \"​\", L = \"⁠\", $ = \"\\uFEFF\", F = \"￾\", N = \"￿\", k = Object.freeze([\n  z,\n  M,\n  L,\n  $,\n  F,\n  N\n]);\nnew RegExp(`[${k.join(\"\")}]`, \"g\");\nvar P = Object.freeze([\n  { id: 0, label: \"Normal\", css: \"normal\" },\n  { id: 1, label: \"Multiply\", css: \"multiply\" },\n  { id: 2, label: \"Screen\", css: \"screen\" },\n  { id: 3, label: \"Overlay\", css: \"overlay\" },\n  { id: 4, label: \"Darken\", css: \"darken\" },\n  { id: 5, label: \"Lighten\", css: \"lighten\" },\n  { id: 6, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10, label: \"Difference\", css: \"difference\" },\n  { id: 11, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12, label: \"Hue\", css: \"hue\" },\n  { id: 13, label: \"Saturation\", css: \"saturation\" },\n  { id: 14, label: \"Color\", css: \"color\" },\n  { id: 15, label: \"Luminosity\", css: \"luminosity\" }\n]);\nP.reduce(\n  (i, e) => (i[e.id] = e, i),\n  {}\n);\nP.reduce((i, e) => (i[e.css] = e.id, i), {});\nP.map((i) => ({\n  value: i.id,\n  label: i.label\n}));\nvar _ = Object.freeze({\n  1: \"invisible\",\n  2: \"hidden\",\n  4: \"print\",\n  8: \"noZoom\",\n  16: \"noRotate\",\n  32: \"noView\",\n  64: \"readOnly\",\n  128: \"locked\",\n  256: \"toggleNoView\"\n});\nObject.entries(\n  _\n).reduce(\n  (i, [e, t]) => (i[t] = Number(e), i),\n  {}\n);\nconst j = (i) => ({\n  scale: (i == null ? void 0 : i.scale) ?? 1,\n  rotation: (i == null ? void 0 : i.rotation) ?? C.Degree0,\n  document: null,\n  pages: [],\n  loading: !1,\n  error: null\n}), q = (i, e) => {\n  switch (e.type) {\n    case g:\n      return {\n        ...i,\n        loading: !0,\n        error: null\n      };\n    case f:\n      return {\n        ...i,\n        document: e.payload,\n        pages: e.payload.pages.map((t) => [t]),\n        loading: !1,\n        error: null\n      };\n    case w:\n      return {\n        ...i,\n        rotation: e.payload\n      };\n    case E:\n      return {\n        ...i,\n        pages: e.payload\n      };\n    case p:\n      return {\n        ...i,\n        loading: !1,\n        error: e.payload\n      };\n    case y:\n      return {\n        ...i,\n        scale: e.payload\n      };\n    default:\n      return i;\n  }\n};\nclass ee {\n  constructor(e, t) {\n    this.plugins = /* @__PURE__ */ new Map(), this.manifests = /* @__PURE__ */ new Map(), this.capabilities = /* @__PURE__ */ new Map(), this.status = /* @__PURE__ */ new Map(), this.configurations = /* @__PURE__ */ new Map(), this.engineInitialized = !1, this.initPromise = null, this.pendingRegistrations = [], this.processingRegistrations = [], this.initialized = !1, this.isInitializing = !1, this.pluginsReadyPromise = null, this.destroyed = !1, this.resolver = new b(), this.engine = e, this.initialCoreState = j(t), this.store = new A(q, this.initialCoreState);\n  }\n  /**\n   * Ensure engine is initialized before proceeding\n   */\n  async ensureEngineInitialized() {\n    this.engineInitialized || (this.engine.initialize ? (await this.engine.initialize().toPromise(), this.engineInitialized = !0) : this.engineInitialized = !0);\n  }\n  /**\n   * Register a plugin without initializing it\n   */\n  registerPlugin(e, t) {\n    if (this.initialized && !this.isInitializing)\n      throw new l(\"Cannot register plugins after initialization\");\n    this.validateManifest(e.manifest), this.store.addPluginReducer(\n      e.manifest.id,\n      // We need one type assertion here since we can't fully reconcile TAction with Action\n      // due to TypeScript's type system limitations with generic variance\n      e.reducer,\n      typeof e.initialState == \"function\" ? e.initialState(\n        this.initialCoreState,\n        {\n          ...e.manifest.defaultConfig,\n          ...t\n        }\n      ) : e.initialState\n    ), this.pendingRegistrations.push({\n      package: e,\n      config: t\n    });\n  }\n  /**\n   * Get the central store instance\n   */\n  getStore() {\n    return this.store;\n  }\n  /**\n   * Get the engine instance\n   */\n  getEngine() {\n    return this.engine;\n  }\n  /**\n   * Get a promise that resolves when all plugins are ready\n   */\n  pluginsReady() {\n    return this.pluginsReadyPromise ? this.pluginsReadyPromise : (this.pluginsReadyPromise = (async () => {\n      this.initialized || await this.initialize();\n      const e = Array.from(this.plugins.values()).map(\n        (t) => typeof t.ready == \"function\" ? t.ready() : Promise.resolve()\n      );\n      await Promise.all(e);\n    })(), this.pluginsReadyPromise);\n  }\n  /**\n   * INITIALISE THE REGISTRY – runs once no-matter-how-many calls   *\n   */\n  async initialize() {\n    if (this.destroyed)\n      throw new l(\"Registry has been destroyed\");\n    return this.initPromise ? this.initPromise : (this.initPromise = (async () => {\n      var e;\n      if (this.initialized)\n        throw new l(\"Registry is already initialized\");\n      this.isInitializing = !0;\n      try {\n        if (await this.ensureEngineInitialized(), this.destroyed)\n          return;\n        for (; this.pendingRegistrations.length > 0; ) {\n          if (this.destroyed)\n            return;\n          this.processingRegistrations = [...this.pendingRegistrations], this.pendingRegistrations = [];\n          for (const r of this.processingRegistrations) {\n            const s = /* @__PURE__ */ new Set(), n = [...r.package.manifest.requires, ...r.package.manifest.optional];\n            for (const a of n) {\n              const o = this.processingRegistrations.find(\n                (c) => c.package.manifest.provides.includes(a)\n              );\n              o && s.add(o.package.manifest.id);\n            }\n            this.resolver.addNode(r.package.manifest.id, [...s]);\n          }\n          const t = this.resolver.resolveLoadOrder();\n          for (const r of t) {\n            const s = this.processingRegistrations.find((n) => n.package.manifest.id === r);\n            await this.initializePlugin(s.package.manifest, s.package.create, s.config);\n          }\n          this.processingRegistrations = [], this.resolver = new b();\n        }\n        for (const t of this.plugins.values())\n          await ((e = t.postInitialize) == null ? void 0 : e.call(t).catch((r) => {\n            console.error(`Error in postInitialize for plugin ${t.id}`, r), this.status.set(t.id, \"error\");\n          }));\n        this.initialized = !0;\n      } catch (t) {\n        throw t instanceof Error ? new m(\n          `Failed to resolve plugin dependencies: ${t.message}`\n        ) : t;\n      } finally {\n        this.isInitializing = !1;\n      }\n    })(), this.initPromise);\n  }\n  /**\n   * Initialize a single plugin with all necessary checks\n   */\n  async initializePlugin(e, t, r) {\n    const s = {\n      ...e.defaultConfig,\n      ...r\n    };\n    this.validateConfig(e.id, s, e.defaultConfig);\n    const n = t(this, this.engine, s);\n    this.validatePlugin(n);\n    for (const a of e.requires)\n      if (!this.capabilities.has(a))\n        throw new l(\n          `Missing required capability: ${a} for plugin ${e.id}`\n        );\n    for (const a of e.optional)\n      this.capabilities.has(a) && console.debug(`Optional capability ${a} is available for plugin ${e.id}`);\n    console.log(\"initializePlugin\", e.id, e.provides);\n    for (const a of e.provides) {\n      if (this.capabilities.has(a))\n        throw new l(\n          `Capability ${a} is already provided by plugin ${this.capabilities.get(a)}`\n        );\n      this.capabilities.set(a, e.id);\n    }\n    this.plugins.set(e.id, n), this.manifests.set(e.id, e), this.status.set(e.id, \"registered\"), this.configurations.set(e.id, s);\n    try {\n      n.initialize && await n.initialize(s), this.status.set(e.id, \"active\");\n    } catch (a) {\n      throw this.plugins.delete(e.id), this.manifests.delete(e.id), console.log(\"initializePlugin failed\", e.id, e.provides), e.provides.forEach((o) => this.capabilities.delete(o)), a;\n    }\n  }\n  getPluginConfig(e) {\n    const t = this.configurations.get(e);\n    if (!t)\n      throw new u(`Configuration for plugin ${e} not found`);\n    return t;\n  }\n  validateConfig(e, t, r) {\n    const n = Object.keys(r).filter((a) => !t.hasOwnProperty(a));\n    if (n.length > 0)\n      throw new R(\n        `Missing required configuration keys for plugin ${e}: ${n.join(\", \")}`\n      );\n  }\n  async updatePluginConfig(e, t) {\n    const r = this.getPlugin(e);\n    if (!r)\n      throw new u(`Plugin ${e} not found`);\n    const s = this.manifests.get(e), n = this.configurations.get(e);\n    if (!s || !n)\n      throw new u(`Plugin ${e} not found`);\n    const a = {\n      ...n,\n      ...t\n    };\n    this.validateConfig(e, a, s.defaultConfig), this.configurations.set(e, a), r.initialize && await r.initialize(a);\n  }\n  /**\n   * Register multiple plugins at once\n   */\n  registerPluginBatch(e) {\n    for (const t of e)\n      this.registerPlugin(t.package, t.config);\n  }\n  /**\n   * Unregister a plugin\n   */\n  async unregisterPlugin(e) {\n    const t = this.plugins.get(e);\n    if (!t)\n      throw new u(`Plugin ${e} is not registered`);\n    const r = this.manifests.get(e);\n    if (!r)\n      throw new u(`Manifest for plugin ${e} not found`);\n    for (const [s, n] of this.manifests.entries()) {\n      if (s === e) continue;\n      if ([...n.requires, ...n.optional].some(\n        (o) => r.provides.includes(o)\n      ))\n        throw new l(\n          `Cannot unregister plugin ${e}: plugin ${s} depends on it`\n        );\n    }\n    try {\n      t.destroy && await t.destroy();\n      for (const s of r.provides)\n        this.capabilities.delete(s);\n      this.plugins.delete(e), this.manifests.delete(e), this.status.delete(e);\n    } catch (s) {\n      throw s instanceof Error ? new Error(`Failed to unregister plugin ${e}: ${s.message}`) : s;\n    }\n  }\n  /**\n   * Get a plugin instance\n   * @param pluginId The ID of the plugin to get\n   * @returns The plugin instance or null if not found\n   */\n  getPlugin(e) {\n    const t = this.plugins.get(e);\n    return t || null;\n  }\n  /**\n   * Get a plugin that provides a specific capability\n   * @param capability The capability to get a provider for\n   * @returns The plugin providing the capability or null if not found\n   */\n  getCapabilityProvider(e) {\n    const t = this.capabilities.get(e);\n    return t ? this.getPlugin(t) : null;\n  }\n  /**\n   * Check if a capability is available\n   */\n  hasCapability(e) {\n    return this.capabilities.has(e);\n  }\n  /**\n   * Get all registered plugins\n   */\n  getAllPlugins() {\n    return Array.from(this.plugins.values());\n  }\n  /**\n   * Get plugin status\n   */\n  getPluginStatus(e) {\n    const t = this.status.get(e);\n    if (!t)\n      throw new u(`Plugin ${e} not found`);\n    return t;\n  }\n  /**\n   * Validate plugin object\n   */\n  validatePlugin(e) {\n    if (!e.id)\n      throw new l(\"Plugin must have an id\");\n  }\n  /**\n   * Validate plugin manifest\n   */\n  validateManifest(e) {\n    if (!e.id)\n      throw new l(\"Manifest must have an id\");\n    if (!e.name)\n      throw new l(\"Manifest must have a name\");\n    if (!e.version)\n      throw new l(\"Manifest must have a version\");\n    if (!Array.isArray(e.provides))\n      throw new l(\"Manifest must have a provides array\");\n    if (!Array.isArray(e.requires))\n      throw new l(\"Manifest must have a requires array\");\n    if (!Array.isArray(e.optional))\n      throw new l(\"Manifest must have an optional array\");\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n  /**\n   * DESTROY EVERYTHING – waits for any ongoing initialise(), once  *\n   */\n  async destroy() {\n    var e;\n    if (this.destroyed) throw new l(\"Registry has already been destroyed\");\n    this.destroyed = !0;\n    try {\n      await this.initPromise;\n    } catch {\n    }\n    for (const t of Array.from(this.plugins.values()).reverse())\n      await ((e = t.destroy) == null ? void 0 : e.call(t));\n    this.store.destroy(), this.plugins.clear(), this.manifests.clear(), this.capabilities.clear(), this.status.clear(), this.pendingRegistrations.length = 0, this.processingRegistrations.length = 0;\n  }\n}\nfunction te(i, e, t) {\n  return i < e ? e : i > t ? t : i;\n}\nfunction v(i, e, t) {\n  if (i === e)\n    return !0;\n  if (i == null || e == null)\n    return i === e;\n  const r = typeof i;\n  if (r !== typeof e) return !1;\n  if (r === \"object\") {\n    t || (t = /* @__PURE__ */ new Set());\n    const n = x(i, e);\n    if (t.has(n))\n      return !0;\n    t.add(n);\n    const a = Array.isArray(i), o = Array.isArray(e);\n    return a && o ? U(i, e, t) : !a && !o ? B(i, e, t) : !1;\n  }\n  return !1;\n}\nfunction x(i, e) {\n  return `${S(i)}__${S(e)}`;\n}\nlet G = 0;\nconst d = /* @__PURE__ */ new WeakMap();\nfunction S(i) {\n  return d.has(i) || d.set(i, ++G), d.get(i);\n}\nfunction U(i, e, t) {\n  if (i.length !== e.length) return !1;\n  const r = new Array(e.length).fill(!1);\n  e: for (let s = 0; s < i.length; s++) {\n    const n = i[s];\n    for (let a = 0; a < e.length; a++)\n      if (!r[a] && v(n, e[a], t)) {\n        r[a] = !0;\n        continue e;\n      }\n    return !1;\n  }\n  return !0;\n}\nfunction B(i, e, t) {\n  const r = Object.keys(i).sort(), s = Object.keys(e).sort();\n  if (r.length !== s.length) return !1;\n  for (let n = 0; n < r.length; n++)\n    if (r[n] !== s[n]) return !1;\n  for (const n of r) {\n    const a = i[n], o = e[n];\n    if (!v(a, o, t))\n      return !1;\n  }\n  return !0;\n}\nexport {\n  m as C,\n  b as D,\n  g as L,\n  ee as P,\n  f as S,\n  v as a,\n  l as b,\n  u as c,\n  K as d,\n  H as e,\n  W as f,\n  R as g,\n  p as h,\n  y as i,\n  w as j,\n  E as k,\n  O as l,\n  Z as m,\n  V as n,\n  J as o,\n  Y as p,\n  Q as q,\n  j as r,\n  I as s,\n  X as t,\n  te as u\n};\n//# sourceMappingURL=math-ChSRQF3r.js.map\n","import { t as S, a as m } from \"./math-ChSRQF3r.js\";\nimport { l as v, e as D, d as I, C as F, D as _, L as O, g as A, f as N, c as M, b as U, P as z, S as x, h as L, k as j, j as q, i as B, u as K, r as $, m as k, s as G, n as W, q as Y, p as H, o as J } from \"./math-ChSRQF3r.js\";\nconst f = (o) => o.pages.map(\n  (t) => t.map((e) => ({\n    ...e,\n    rotatedSize: S(e.size, o.rotation, 1)\n  }))\n);\nfunction y(o, t) {\n  return {\n    package: o,\n    config: t\n  };\n}\nclass w {\n  constructor(t, e) {\n    if (this.id = t, this.registry = e, this.debouncedActions = {}, this.unsubscribeFromState = null, this.unsubscribeFromCoreStore = null, t !== this.constructor.id)\n      throw new Error(\n        `Plugin ID mismatch: ${t} !== ${this.constructor.id}`\n      );\n    this.coreStore = this.registry.getStore(), this.pluginStore = this.coreStore.getPluginStore(this.id), this.unsubscribeFromState = this.pluginStore.subscribeToState((i, s, c) => {\n      this.onStoreUpdated(c, s);\n    }), this.unsubscribeFromCoreStore = this.coreStore.subscribe((i, s, c) => {\n      this.onCoreStoreUpdated(c, s);\n    }), this.readyPromise = new Promise((i) => {\n      this.readyResolve = i;\n    }), this.readyResolve();\n  }\n  provides() {\n    if (!this._capability) {\n      const t = this.buildCapability();\n      this._capability = Object.freeze(t);\n    }\n    return this._capability;\n  }\n  /**\n   *  Get a copy of the current state\n   */\n  get state() {\n    return this.pluginStore.getState();\n  }\n  /**\n   *  Get a copy of the current core state\n   */\n  get coreState() {\n    return this.coreStore.getState();\n  }\n  /**\n   * @deprecated  use `this.state` Get a copy of the current state\n   */\n  getState() {\n    return this.pluginStore.getState();\n  }\n  /**\n   * @deprecated  use `this.coreState` Get a copy of the current core state\n   */\n  getCoreState() {\n    return this.coreStore.getState();\n  }\n  /**\n   * Core Dispatch\n   */\n  dispatchCoreAction(t) {\n    return this.coreStore.dispatchToCore(t);\n  }\n  /**\n   * Dispatch an action to all plugins\n   */\n  dispatchToAllPlugins(t) {\n    return this.coreStore.dispatch(t);\n  }\n  /**\n   * Dispatch an action\n   */\n  dispatch(t) {\n    return this.pluginStore.dispatch(t);\n  }\n  /**\n   * Dispatch an action with debouncing to prevent rapid repeated calls\n   * @param action The action to dispatch\n   * @param debounceTime Time in ms to debounce (default: 100ms)\n   * @returns boolean indicating whether the action was dispatched or debounced\n   */\n  debouncedDispatch(t, e = 100) {\n    const i = Date.now(), s = this.debouncedActions[t.type] || 0;\n    return i - s >= e ? (this.debouncedActions[t.type] = i, this.dispatch(t), !0) : !1;\n  }\n  /**\n   * Subscribe to state changes\n   */\n  subscribe(t) {\n    return this.pluginStore.subscribeToState(t);\n  }\n  /**\n   * Subscribe to core store changes\n   */\n  subscribeToCoreStore(t) {\n    return this.coreStore.subscribe(t);\n  }\n  /**\n   * Called when the plugin store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  onStoreUpdated(t, e) {\n  }\n  /**\n   * Called when the core store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  onCoreStoreUpdated(t, e) {\n  }\n  /**\n   * Cleanup method to be called when plugin is being destroyed\n   */\n  destroy() {\n    this.unsubscribeFromState && (this.unsubscribeFromState(), this.unsubscribeFromState = null), this.unsubscribeFromCoreStore && (this.unsubscribeFromCoreStore(), this.unsubscribeFromCoreStore = null);\n  }\n  /**\n   * Returns a promise that resolves when the plugin is ready\n   */\n  ready() {\n    return this.readyPromise;\n  }\n  /**\n   * Mark the plugin as ready\n   */\n  markReady() {\n    this.readyResolve();\n  }\n  /**\n   * Reset the ready state (useful for plugins that need to reinitialize)\n   */\n  resetReady() {\n    this.readyPromise = new Promise((t) => {\n      this.readyResolve = t;\n    });\n  }\n}\nclass b {\n  constructor(t, e) {\n    this.handler = t, this.options = e, this.lastRun = 0, this.handle = (i) => {\n      this.options.mode === \"debounce\" ? this.debounce(i) : this.throttle(i);\n    };\n  }\n  debounce(t) {\n    this.timeoutId && window.clearTimeout(this.timeoutId), this.timeoutId = window.setTimeout(() => {\n      this.handler(t), this.timeoutId = void 0;\n    }, this.options.wait);\n  }\n  throttle(t) {\n    if (this.options.mode === \"debounce\") return;\n    const e = Date.now(), i = this.options.throttleMode || \"leading-trailing\";\n    e - this.lastRun >= this.options.wait && (i === \"leading-trailing\" && this.handler(t), this.lastRun = e), this.timeoutId && window.clearTimeout(this.timeoutId), this.timeoutId = window.setTimeout(\n      () => {\n        this.handler(t), this.lastRun = Date.now(), this.timeoutId = void 0;\n      },\n      this.options.wait - (e - this.lastRun)\n    );\n  }\n  destroy() {\n    this.timeoutId && window.clearTimeout(this.timeoutId);\n  }\n}\nfunction E() {\n  const o = /* @__PURE__ */ new Set();\n  return {\n    emit: (e = void 0) => o.forEach((i) => i(e)),\n    on: (e) => (o.add(e), () => o.delete(e)),\n    off: (e) => o.delete(e),\n    clear: () => o.clear()\n  };\n}\nfunction C(o, t = m) {\n  const e = /* @__PURE__ */ new Set(), i = /* @__PURE__ */ new Map();\n  let s = o;\n  const c = (r) => e.forEach((n) => n(r)), p = (r, n) => {\n    let a = r, d = () => {\n    };\n    if (n) {\n      const u = new b(r, n);\n      a = u.handle, d = () => u.destroy(), i.set(r, { wrapped: a, destroy: d });\n    }\n    return s !== void 0 && a(s), e.add(a), () => {\n      e.delete(a), d(), i.delete(r);\n    };\n  };\n  return {\n    /* emitter behaviour ---------------------------------------- */\n    get value() {\n      return s;\n    },\n    emit(r = void 0) {\n      (s === void 0 || !t(s, r)) && (s = r, c(r));\n    },\n    on: p,\n    off(r) {\n      const n = i.get(r);\n      n ? (e.delete(n.wrapped), n.destroy(), i.delete(r)) : e.delete(r);\n    },\n    clear() {\n      e.clear(), i.forEach((r) => r.destroy()), i.clear();\n    },\n    /* derived hook --------------------------------------------- */\n    select(r, n = m) {\n      return (a, d) => {\n        let u;\n        if (s !== void 0) {\n          const h = r(s);\n          u = h, a(h);\n        }\n        return p(\n          (h) => {\n            const l = r(h);\n            (u === void 0 || !n(u, l)) && (u = l, a(l));\n          },\n          d\n        );\n      };\n    }\n  };\n}\nfunction T(o) {\n  return Object.entries(o).map(([t, e]) => {\n    const i = Number(t);\n    return [Number.isFinite(i) && t.trim() !== \"\" ? i : t, e];\n  });\n}\nexport {\n  w as BasePlugin,\n  v as CORE_ACTION_TYPES,\n  D as CapabilityConflictError,\n  I as CapabilityNotFoundError,\n  F as CircularDependencyError,\n  _ as DependencyResolver,\n  b as EventControl,\n  O as LOAD_DOCUMENT,\n  A as PluginConfigurationError,\n  N as PluginInitializationError,\n  M as PluginNotFoundError,\n  U as PluginRegistrationError,\n  z as PluginRegistry,\n  x as SET_DOCUMENT,\n  L as SET_DOCUMENT_ERROR,\n  j as SET_PAGES,\n  q as SET_ROTATION,\n  B as SET_SCALE,\n  m as arePropsEqual,\n  K as clamp,\n  C as createBehaviorEmitter,\n  E as createEmitter,\n  y as createPluginRegistration,\n  T as enumEntries,\n  f as getPagesWithRotatedSize,\n  $ as initialCoreState,\n  k as loadDocument,\n  G as setDocument,\n  W as setDocumentError,\n  Y as setPages,\n  H as setRotation,\n  J as setScale\n};\n//# sourceMappingURL=index.js.map\n","// src/geometry.ts\nvar Rotation = /* @__PURE__ */ ((Rotation2) => {\n  Rotation2[Rotation2[\"Degree0\"] = 0] = \"Degree0\";\n  Rotation2[Rotation2[\"Degree90\"] = 1] = \"Degree90\";\n  Rotation2[Rotation2[\"Degree180\"] = 2] = \"Degree180\";\n  Rotation2[Rotation2[\"Degree270\"] = 3] = \"Degree270\";\n  return Rotation2;\n})(Rotation || {});\nfunction toIntPos(p) {\n  return { x: Math.floor(p.x), y: Math.floor(p.y) };\n}\nfunction toIntSize(s) {\n  return { width: Math.ceil(s.width), height: Math.ceil(s.height) };\n}\nfunction toIntRect(r) {\n  return {\n    origin: toIntPos(r.origin),\n    size: toIntSize(r.size)\n  };\n}\nfunction calculateDegree(rotation) {\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return 0;\n    case 1 /* Degree90 */:\n      return 90;\n    case 2 /* Degree180 */:\n      return 180;\n    case 3 /* Degree270 */:\n      return 270;\n  }\n}\nfunction calculateAngle(rotation) {\n  return calculateDegree(rotation) * Math.PI / 180;\n}\nfunction swap(size) {\n  const { width, height } = size;\n  return {\n    width: height,\n    height: width\n  };\n}\nfunction transformSize(size, rotation, scaleFactor) {\n  size = rotation % 2 === 0 ? size : swap(size);\n  return {\n    width: size.width * scaleFactor,\n    height: size.height * scaleFactor\n  };\n}\nfunction quadToRect(q) {\n  const xs = [q.p1.x, q.p2.x, q.p3.x, q.p4.x];\n  const ys = [q.p1.y, q.p2.y, q.p3.y, q.p4.y];\n  return {\n    origin: { x: Math.min(...xs), y: Math.min(...ys) },\n    size: {\n      width: Math.max(...xs) - Math.min(...xs),\n      height: Math.max(...ys) - Math.min(...ys)\n    }\n  };\n}\nfunction rectToQuad(r) {\n  return {\n    p1: { x: r.origin.x, y: r.origin.y },\n    p2: { x: r.origin.x + r.size.width, y: r.origin.y },\n    p3: { x: r.origin.x + r.size.width, y: r.origin.y + r.size.height },\n    p4: { x: r.origin.x, y: r.origin.y + r.size.height }\n  };\n}\nfunction rotatePosition(containerSize, position, rotation) {\n  let x = position.x;\n  let y = position.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      x = position.x;\n      y = position.y;\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - position.y;\n      y = position.x;\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - position.x;\n      y = containerSize.height - position.y;\n      break;\n    case 3 /* Degree270 */:\n      x = position.y;\n      y = containerSize.width - position.x;\n      break;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction scalePosition(position, scaleFactor) {\n  return {\n    x: position.x * scaleFactor,\n    y: position.y * scaleFactor\n  };\n}\nfunction transformPosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(rotatePosition(containerSize, position, rotation), scaleFactor);\n}\nfunction restorePosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(\n    rotatePosition(containerSize, position, (4 - rotation) % 4),\n    1 / scaleFactor\n  );\n}\nfunction rotateRect(containerSize, rect, rotation) {\n  let x = rect.origin.x;\n  let y = rect.origin.y;\n  let size = rect.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - rect.origin.y - rect.size.height;\n      y = rect.origin.x;\n      size = swap(rect.size);\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - rect.origin.x - rect.size.width;\n      y = containerSize.height - rect.origin.y - rect.size.height;\n      break;\n    case 3 /* Degree270 */:\n      x = rect.origin.y;\n      y = containerSize.width - rect.origin.x - rect.size.width;\n      size = swap(rect.size);\n      break;\n  }\n  return {\n    origin: {\n      x,\n      y\n    },\n    size: {\n      width: size.width,\n      height: size.height\n    }\n  };\n}\nfunction scaleRect(rect, scaleFactor) {\n  return {\n    origin: {\n      x: rect.origin.x * scaleFactor,\n      y: rect.origin.y * scaleFactor\n    },\n    size: {\n      width: rect.size.width * scaleFactor,\n      height: rect.size.height * scaleFactor\n    }\n  };\n}\nfunction transformRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, rotation), scaleFactor);\n}\nfunction restoreRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, (4 - rotation) % 4), 1 / scaleFactor);\n}\nfunction restoreOffset(offset, rotation, scaleFactor) {\n  let offsetX = offset.x;\n  let offsetY = offset.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      offsetX = offset.x / scaleFactor;\n      offsetY = offset.y / scaleFactor;\n      break;\n    case 1 /* Degree90 */:\n      offsetX = offset.y / scaleFactor;\n      offsetY = -offset.x / scaleFactor;\n      break;\n    case 2 /* Degree180 */:\n      offsetX = -offset.x / scaleFactor;\n      offsetY = -offset.y / scaleFactor;\n      break;\n    case 3 /* Degree270 */:\n      offsetX = -offset.y / scaleFactor;\n      offsetY = offset.x / scaleFactor;\n      break;\n  }\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\nfunction boundingRect(rects) {\n  if (rects.length === 0) return null;\n  let minX = rects[0].origin.x, minY = rects[0].origin.y, maxX = rects[0].origin.x + rects[0].size.width, maxY = rects[0].origin.y + rects[0].size.height;\n  for (const r of rects) {\n    minX = Math.min(minX, r.origin.x);\n    minY = Math.min(minY, r.origin.y);\n    maxX = Math.max(maxX, r.origin.x + r.size.width);\n    maxY = Math.max(maxY, r.origin.y + r.size.height);\n  }\n  return {\n    origin: {\n      x: minX,\n      y: minY\n    },\n    size: {\n      width: maxX - minX,\n      height: maxY - minY\n    }\n  };\n}\nvar makeMatrix = (rectangle, rotation, scaleFactor) => {\n  const { width, height } = rectangle.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: -scaleFactor,\n        e: 0,\n        f: height * scaleFactor\n      };\n    case 1 /* Degree90 */:\n      return {\n        a: 0,\n        b: scaleFactor,\n        c: scaleFactor,\n        d: 0,\n        e: 0,\n        f: 0\n      };\n    case 2 /* Degree180 */:\n      return {\n        a: -scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: width * scaleFactor,\n        f: 0\n      };\n    case 3 /* Degree270 */:\n      return {\n        a: 0,\n        b: -scaleFactor,\n        c: -scaleFactor,\n        d: 0,\n        e: height * scaleFactor,\n        f: width * scaleFactor\n      };\n  }\n};\n\n// src/logger.ts\nvar NoopLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug() {\n  }\n  /** {@inheritDoc Logger.info} */\n  info() {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn() {\n  }\n  /** {@inheritDoc Logger.error} */\n  error() {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf() {\n  }\n};\nvar ConsoleLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    console.debug(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    console.info(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    console.warn(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    console.error(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    console.info(`${source}.${category}.${event}.${phase}`, ...args);\n  }\n};\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"Debug\"] = 0] = \"Debug\";\n  LogLevel2[LogLevel2[\"Info\"] = 1] = \"Info\";\n  LogLevel2[LogLevel2[\"Warn\"] = 2] = \"Warn\";\n  LogLevel2[LogLevel2[\"Error\"] = 3] = \"Error\";\n  return LogLevel2;\n})(LogLevel || {});\nvar LevelLogger = class {\n  /**\n   * create new LevelLogger\n   * @param logger - the original logger\n   * @param level - log level that used for filtering, all logs lower than this level will be filtered out\n   */\n  constructor(logger, level) {\n    this.logger = logger;\n    this.level = level;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    if (this.level <= 0 /* Debug */) {\n      this.logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    if (this.level <= 1 /* Info */) {\n      this.logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    if (this.level <= 2 /* Warn */) {\n      this.logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    if (this.level <= 3 /* Error */) {\n      this.logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    this.logger.perf(source, category, event, phase, ...args);\n  }\n};\nvar PerfLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor() {\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, identifier, ...args) {\n    switch (phase) {\n      case \"Begin\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        break;\n      case \"End\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        window.performance.measure(\n          `${source}.${category}.${event}.Measure.${identifier}`,\n          `${source}.${category}.${event}.Begin.${identifier}`,\n          `${source}.${category}.${event}.End.${identifier}`\n        );\n        break;\n    }\n  }\n};\nvar AllLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor(loggers) {\n    this.loggers = loggers;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    for (const logger of this.loggers) {\n      logger.perf(source, category, event, phase, ...args);\n    }\n  }\n};\n\n// src/task.ts\nvar TaskStage = /* @__PURE__ */ ((TaskStage2) => {\n  TaskStage2[TaskStage2[\"Pending\"] = 0] = \"Pending\";\n  TaskStage2[TaskStage2[\"Resolved\"] = 1] = \"Resolved\";\n  TaskStage2[TaskStage2[\"Rejected\"] = 2] = \"Rejected\";\n  TaskStage2[TaskStage2[\"Aborted\"] = 3] = \"Aborted\";\n  return TaskStage2;\n})(TaskStage || {});\nvar TaskAbortedError = class extends Error {\n  constructor(reason) {\n    super(`Task aborted: ${JSON.stringify(reason)}`);\n    this.name = \"TaskAbortedError\";\n  }\n};\nvar TaskRejectedError = class extends Error {\n  constructor(reason) {\n    super(`Task rejected: ${JSON.stringify(reason)}`);\n    this.name = \"TaskRejectedError\";\n  }\n};\nvar Task = class _Task {\n  constructor() {\n    this.state = {\n      stage: 0 /* Pending */\n    };\n    /**\n     * callbacks that will be executed when task is resolved\n     */\n    this.resolvedCallbacks = [];\n    /**\n     * callbacks that will be executed when task is rejected\n     */\n    this.rejectedCallbacks = [];\n    /**\n     * Promise that will be resolved when task is settled\n     */\n    this._promise = null;\n  }\n  /**\n   * Convert task to promise\n   * @returns promise that will be resolved when task is settled\n   */\n  toPromise() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this.wait(\n          (result) => resolve(result),\n          (error) => {\n            if (error.type === \"abort\") {\n              reject(new TaskAbortedError(error.reason));\n            } else {\n              reject(new TaskRejectedError(error.reason));\n            }\n          }\n        );\n      });\n    }\n    return this._promise;\n  }\n  /**\n   * wait for task to be settled\n   * @param resolvedCallback - callback for resolved value\n   * @param rejectedCallback - callback for rejected value\n   */\n  wait(resolvedCallback, rejectedCallback) {\n    switch (this.state.stage) {\n      case 0 /* Pending */:\n        this.resolvedCallbacks.push(resolvedCallback);\n        this.rejectedCallbacks.push(rejectedCallback);\n        break;\n      case 1 /* Resolved */:\n        resolvedCallback(this.state.result);\n        break;\n      case 2 /* Rejected */:\n        rejectedCallback({\n          type: \"reject\",\n          reason: this.state.reason\n        });\n        break;\n      case 3 /* Aborted */:\n        rejectedCallback({\n          type: \"abort\",\n          reason: this.state.reason\n        });\n        break;\n    }\n  }\n  /**\n   * resolve task with specific result\n   * @param result - result value\n   */\n  resolve(result) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 1 /* Resolved */,\n        result\n      };\n      for (const resolvedCallback of this.resolvedCallbacks) {\n        try {\n          resolvedCallback(result);\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * reject task with specific reason\n   * @param reason - abort reason\n   *\n   */\n  reject(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 2 /* Rejected */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"reject\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * abort task with specific reason\n   * @param reason - abort reason\n   */\n  abort(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 3 /* Aborted */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"abort\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * fail task with a TaskError from another task\n   * This is a convenience method for error propagation between tasks\n   * @param error - TaskError from another task\n   */\n  fail(error) {\n    if (error.type === \"abort\") {\n      this.abort(error.reason);\n    } else {\n      this.reject(error.reason);\n    }\n  }\n  /**\n   * Static method to wait for all tasks to resolve\n   * Returns a new task that resolves with an array of all results\n   * Rejects immediately if any task fails\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static all(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let resolvedCount = 0;\n    let isSettled = false;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          results[index] = result;\n          resolvedCount++;\n          if (resolvedCount === tasks.length) {\n            isSettled = true;\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method to wait for all tasks to settle (resolve, reject, or abort)\n   * Always resolves with an array of settlement results\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks settle\n   * @public\n   */\n  static allSettled(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let settledCount = 0;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          results[index] = { status: \"resolved\", value: result };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          results[index] = {\n            status: error.type === \"abort\" ? \"aborted\" : \"rejected\",\n            reason: error.reason\n          };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method that resolves/rejects with the first task that settles\n   *\n   * @param tasks - array of tasks to race\n   * @returns new task that settles with the first input task that settles\n   * @public\n   */\n  static race(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.reject(\"No tasks provided\");\n      return combinedTask;\n    }\n    let isSettled = false;\n    tasks.forEach((task) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          isSettled = true;\n          combinedTask.resolve(result);\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Utility to track progress of multiple tasks\n   *\n   * @param tasks - array of tasks to track\n   * @param onProgress - callback called when any task completes\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static withProgress(tasks, onProgress) {\n    const combinedTask = _Task.all(tasks);\n    if (onProgress) {\n      let completedCount = 0;\n      tasks.forEach((task) => {\n        task.wait(\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          }\n        );\n      });\n    }\n    return combinedTask;\n  }\n};\n\n// src/pdf.ts\nvar PdfSoftHyphenMarker = \"\\xAD\";\nvar PdfZeroWidthSpace = \"\\u200B\";\nvar PdfWordJoiner = \"\\u2060\";\nvar PdfBomOrZwnbsp = \"\\uFEFF\";\nvar PdfNonCharacterFFFE = \"\\uFFFE\";\nvar PdfNonCharacterFFFF = \"\\uFFFF\";\nvar PdfUnwantedTextMarkers = Object.freeze([\n  PdfSoftHyphenMarker,\n  PdfZeroWidthSpace,\n  PdfWordJoiner,\n  PdfBomOrZwnbsp,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF\n]);\nvar PdfUnwantedTextRegex = new RegExp(`[${PdfUnwantedTextMarkers.join(\"\")}]`, \"g\");\nfunction stripPdfUnwantedMarkers(text) {\n  return text.replace(PdfUnwantedTextRegex, \"\");\n}\nvar PdfZoomMode = /* @__PURE__ */ ((PdfZoomMode2) => {\n  PdfZoomMode2[PdfZoomMode2[\"Unknown\"] = 0] = \"Unknown\";\n  PdfZoomMode2[PdfZoomMode2[\"XYZ\"] = 1] = \"XYZ\";\n  PdfZoomMode2[PdfZoomMode2[\"FitPage\"] = 2] = \"FitPage\";\n  PdfZoomMode2[PdfZoomMode2[\"FitHorizontal\"] = 3] = \"FitHorizontal\";\n  PdfZoomMode2[PdfZoomMode2[\"FitVertical\"] = 4] = \"FitVertical\";\n  PdfZoomMode2[PdfZoomMode2[\"FitRectangle\"] = 5] = \"FitRectangle\";\n  return PdfZoomMode2;\n})(PdfZoomMode || {});\nvar PdfBlendMode = /* @__PURE__ */ ((PdfBlendMode2) => {\n  PdfBlendMode2[PdfBlendMode2[\"Normal\"] = 0] = \"Normal\";\n  PdfBlendMode2[PdfBlendMode2[\"Multiply\"] = 1] = \"Multiply\";\n  PdfBlendMode2[PdfBlendMode2[\"Screen\"] = 2] = \"Screen\";\n  PdfBlendMode2[PdfBlendMode2[\"Overlay\"] = 3] = \"Overlay\";\n  PdfBlendMode2[PdfBlendMode2[\"Darken\"] = 4] = \"Darken\";\n  PdfBlendMode2[PdfBlendMode2[\"Lighten\"] = 5] = \"Lighten\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorDodge\"] = 6] = \"ColorDodge\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorBurn\"] = 7] = \"ColorBurn\";\n  PdfBlendMode2[PdfBlendMode2[\"HardLight\"] = 8] = \"HardLight\";\n  PdfBlendMode2[PdfBlendMode2[\"SoftLight\"] = 9] = \"SoftLight\";\n  PdfBlendMode2[PdfBlendMode2[\"Difference\"] = 10] = \"Difference\";\n  PdfBlendMode2[PdfBlendMode2[\"Exclusion\"] = 11] = \"Exclusion\";\n  PdfBlendMode2[PdfBlendMode2[\"Hue\"] = 12] = \"Hue\";\n  PdfBlendMode2[PdfBlendMode2[\"Saturation\"] = 13] = \"Saturation\";\n  PdfBlendMode2[PdfBlendMode2[\"Color\"] = 14] = \"Color\";\n  PdfBlendMode2[PdfBlendMode2[\"Luminosity\"] = 15] = \"Luminosity\";\n  return PdfBlendMode2;\n})(PdfBlendMode || {});\nvar MixedBlendMode = Symbol(\"mixed\");\nvar BLEND_MODE_INFOS = Object.freeze([\n  { id: 0 /* Normal */, label: \"Normal\", css: \"normal\" },\n  { id: 1 /* Multiply */, label: \"Multiply\", css: \"multiply\" },\n  { id: 2 /* Screen */, label: \"Screen\", css: \"screen\" },\n  { id: 3 /* Overlay */, label: \"Overlay\", css: \"overlay\" },\n  { id: 4 /* Darken */, label: \"Darken\", css: \"darken\" },\n  { id: 5 /* Lighten */, label: \"Lighten\", css: \"lighten\" },\n  { id: 6 /* ColorDodge */, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7 /* ColorBurn */, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8 /* HardLight */, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9 /* SoftLight */, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10 /* Difference */, label: \"Difference\", css: \"difference\" },\n  { id: 11 /* Exclusion */, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12 /* Hue */, label: \"Hue\", css: \"hue\" },\n  { id: 13 /* Saturation */, label: \"Saturation\", css: \"saturation\" },\n  { id: 14 /* Color */, label: \"Color\", css: \"color\" },\n  { id: 15 /* Luminosity */, label: \"Luminosity\", css: \"luminosity\" }\n]);\nvar enumToInfo = BLEND_MODE_INFOS.reduce(\n  (m, info) => {\n    m[info.id] = info;\n    return m;\n  },\n  {}\n);\nvar cssToEnum = BLEND_MODE_INFOS.reduce((m, info) => {\n  m[info.css] = info.id;\n  return m;\n}, {});\nfunction getBlendModeInfo(mode) {\n  return enumToInfo[mode] ?? enumToInfo[0 /* Normal */];\n}\nfunction blendModeToCss(mode) {\n  return getBlendModeInfo(mode).css;\n}\nfunction cssToBlendMode(value) {\n  return cssToEnum[value];\n}\nfunction blendModeLabel(mode) {\n  return getBlendModeInfo(mode).label;\n}\nfunction reduceBlendModes(modes) {\n  if (!modes.length) return 0 /* Normal */;\n  const first = modes[0];\n  return modes.every((m) => m === first) ? first : MixedBlendMode;\n}\nvar blendModeSelectOptions = BLEND_MODE_INFOS.map((info) => ({\n  value: info.id,\n  label: info.label\n}));\nfunction uiBlendModeDisplay(value) {\n  return value === MixedBlendMode ? \"(mixed)\" : blendModeLabel(value);\n}\nvar PdfActionType = /* @__PURE__ */ ((PdfActionType2) => {\n  PdfActionType2[PdfActionType2[\"Unsupported\"] = 0] = \"Unsupported\";\n  PdfActionType2[PdfActionType2[\"Goto\"] = 1] = \"Goto\";\n  PdfActionType2[PdfActionType2[\"RemoteGoto\"] = 2] = \"RemoteGoto\";\n  PdfActionType2[PdfActionType2[\"URI\"] = 3] = \"URI\";\n  PdfActionType2[PdfActionType2[\"LaunchAppOrOpenFile\"] = 4] = \"LaunchAppOrOpenFile\";\n  return PdfActionType2;\n})(PdfActionType || {});\nvar PdfAnnotationSubtype = /* @__PURE__ */ ((PdfAnnotationSubtype2) => {\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINK\"] = 2] = \"LINK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FREETEXT\"] = 3] = \"FREETEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINE\"] = 4] = \"LINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUARE\"] = 5] = \"SQUARE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CIRCLE\"] = 6] = \"CIRCLE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYGON\"] = 7] = \"POLYGON\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYLINE\"] = 8] = \"POLYLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"HIGHLIGHT\"] = 9] = \"HIGHLIGHT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNDERLINE\"] = 10] = \"UNDERLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUIGGLY\"] = 11] = \"SQUIGGLY\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STRIKEOUT\"] = 12] = \"STRIKEOUT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STAMP\"] = 13] = \"STAMP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CARET\"] = 14] = \"CARET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"INK\"] = 15] = \"INK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POPUP\"] = 16] = \"POPUP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FILEATTACHMENT\"] = 17] = \"FILEATTACHMENT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SOUND\"] = 18] = \"SOUND\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"MOVIE\"] = 19] = \"MOVIE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WIDGET\"] = 20] = \"WIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SCREEN\"] = 21] = \"SCREEN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"PRINTERMARK\"] = 22] = \"PRINTERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TRAPNET\"] = 23] = \"TRAPNET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WATERMARK\"] = 24] = \"WATERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"THREED\"] = 25] = \"THREED\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"RICHMEDIA\"] = 26] = \"RICHMEDIA\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"XFAWIDGET\"] = 27] = \"XFAWIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"REDACT\"] = 28] = \"REDACT\";\n  return PdfAnnotationSubtype2;\n})(PdfAnnotationSubtype || {});\nvar PdfAnnotationSubtypeName = {\n  [0 /* UNKNOWN */]: \"unknow\",\n  [1 /* TEXT */]: \"text\",\n  [2 /* LINK */]: \"link\",\n  [3 /* FREETEXT */]: \"freetext\",\n  [4 /* LINE */]: \"line\",\n  [5 /* SQUARE */]: \"square\",\n  [6 /* CIRCLE */]: \"circle\",\n  [7 /* POLYGON */]: \"polygon\",\n  [8 /* POLYLINE */]: \"polyline\",\n  [9 /* HIGHLIGHT */]: \"highlight\",\n  [10 /* UNDERLINE */]: \"underline\",\n  [11 /* SQUIGGLY */]: \"squiggly\",\n  [12 /* STRIKEOUT */]: \"strikeout\",\n  [13 /* STAMP */]: \"stamp\",\n  [14 /* CARET */]: \"caret\",\n  [15 /* INK */]: \"ink\",\n  [16 /* POPUP */]: \"popup\",\n  [17 /* FILEATTACHMENT */]: \"fileattachment\",\n  [18 /* SOUND */]: \"sound\",\n  [19 /* MOVIE */]: \"movie\",\n  [20 /* WIDGET */]: \"widget\",\n  [21 /* SCREEN */]: \"screen\",\n  [22 /* PRINTERMARK */]: \"printermark\",\n  [23 /* TRAPNET */]: \"trapnet\",\n  [24 /* WATERMARK */]: \"watermark\",\n  [25 /* THREED */]: \"threed\",\n  [26 /* RICHMEDIA */]: \"richmedia\",\n  [27 /* XFAWIDGET */]: \"xfawidget\",\n  [28 /* REDACT */]: \"redact\"\n};\nvar PdfAnnotationObjectStatus = /* @__PURE__ */ ((PdfAnnotationObjectStatus2) => {\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Created\"] = 0] = \"Created\";\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Committed\"] = 1] = \"Committed\";\n  return PdfAnnotationObjectStatus2;\n})(PdfAnnotationObjectStatus || {});\nvar AppearanceMode = /* @__PURE__ */ ((AppearanceMode2) => {\n  AppearanceMode2[AppearanceMode2[\"Normal\"] = 0] = \"Normal\";\n  AppearanceMode2[AppearanceMode2[\"Rollover\"] = 1] = \"Rollover\";\n  AppearanceMode2[AppearanceMode2[\"Down\"] = 2] = \"Down\";\n  return AppearanceMode2;\n})(AppearanceMode || {});\nvar PdfAnnotationState = /* @__PURE__ */ ((PdfAnnotationState2) => {\n  PdfAnnotationState2[\"Marked\"] = \"Marked\";\n  PdfAnnotationState2[\"Unmarked\"] = \"Unmarked\";\n  PdfAnnotationState2[\"Accepted\"] = \"Accepted\";\n  PdfAnnotationState2[\"Rejected\"] = \"Rejected\";\n  PdfAnnotationState2[\"Complete\"] = \"Complete\";\n  PdfAnnotationState2[\"Cancelled\"] = \"Cancelled\";\n  PdfAnnotationState2[\"None\"] = \"None\";\n  return PdfAnnotationState2;\n})(PdfAnnotationState || {});\nvar PdfAnnotationStateModel = /* @__PURE__ */ ((PdfAnnotationStateModel2) => {\n  PdfAnnotationStateModel2[\"Marked\"] = \"Marked\";\n  PdfAnnotationStateModel2[\"Reviewed\"] = \"Reviewed\";\n  return PdfAnnotationStateModel2;\n})(PdfAnnotationStateModel || {});\nvar PDF_FORM_FIELD_TYPE = /* @__PURE__ */ ((PDF_FORM_FIELD_TYPE2) => {\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"PUSHBUTTON\"] = 1] = \"PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"CHECKBOX\"] = 2] = \"CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"RADIOBUTTON\"] = 3] = \"RADIOBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"COMBOBOX\"] = 4] = \"COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"LISTBOX\"] = 5] = \"LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"TEXTFIELD\"] = 6] = \"TEXTFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"SIGNATURE\"] = 7] = \"SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA\"] = 8] = \"XFA\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_CHECKBOX\"] = 9] = \"XFA_CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_COMBOBOX\"] = 10] = \"XFA_COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_IMAGEFIELD\"] = 11] = \"XFA_IMAGEFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_LISTBOX\"] = 12] = \"XFA_LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_PUSHBUTTON\"] = 13] = \"XFA_PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_SIGNATURE\"] = 14] = \"XFA_SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_TEXTFIELD\"] = 15] = \"XFA_TEXTFIELD\";\n  return PDF_FORM_FIELD_TYPE2;\n})(PDF_FORM_FIELD_TYPE || {});\nvar PdfAnnotationColorType = /* @__PURE__ */ ((PdfAnnotationColorType2) => {\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"Color\"] = 0] = \"Color\";\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"InteriorColor\"] = 1] = \"InteriorColor\";\n  return PdfAnnotationColorType2;\n})(PdfAnnotationColorType || {});\nvar PdfAnnotationBorderStyle = /* @__PURE__ */ ((PdfAnnotationBorderStyle2) => {\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"SOLID\"] = 1] = \"SOLID\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"DASHED\"] = 2] = \"DASHED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"BEVELED\"] = 3] = \"BEVELED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"INSET\"] = 4] = \"INSET\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNDERLINE\"] = 5] = \"UNDERLINE\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"CLOUDY\"] = 6] = \"CLOUDY\";\n  return PdfAnnotationBorderStyle2;\n})(PdfAnnotationBorderStyle || {});\nvar PdfAnnotationFlags = /* @__PURE__ */ ((PdfAnnotationFlags2) => {\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NONE\"] = 0] = \"NONE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"INVISIBLE\"] = 1] = \"INVISIBLE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"HIDDEN\"] = 2] = \"HIDDEN\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"PRINT\"] = 4] = \"PRINT\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ZOOM\"] = 8] = \"NO_ZOOM\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ROTATE\"] = 16] = \"NO_ROTATE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_VIEW\"] = 32] = \"NO_VIEW\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"READ_ONLY\"] = 64] = \"READ_ONLY\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"LOCKED\"] = 128] = \"LOCKED\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"TOGGLE_NOVIEW\"] = 256] = \"TOGGLE_NOVIEW\";\n  return PdfAnnotationFlags2;\n})(PdfAnnotationFlags || {});\nvar PDF_FORM_FIELD_FLAG = /* @__PURE__ */ ((PDF_FORM_FIELD_FLAG2) => {\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NONE\"] = 0] = \"NONE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"READONLY\"] = 1] = \"READONLY\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"REQUIRED\"] = 2] = \"REQUIRED\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NOEXPORT\"] = 4] = \"NOEXPORT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_MULTIPLINE\"] = 4096] = \"TEXT_MULTIPLINE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_PASSWORD\"] = 8192] = \"TEXT_PASSWORD\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_COMBO\"] = 131072] = \"CHOICE_COMBO\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_EDIT\"] = 262144] = \"CHOICE_EDIT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_MULTL_SELECT\"] = 2097152] = \"CHOICE_MULTL_SELECT\";\n  return PDF_FORM_FIELD_FLAG2;\n})(PDF_FORM_FIELD_FLAG || {});\nvar PdfPageObjectType = /* @__PURE__ */ ((PdfPageObjectType2) => {\n  PdfPageObjectType2[PdfPageObjectType2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfPageObjectType2[PdfPageObjectType2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfPageObjectType2[PdfPageObjectType2[\"PATH\"] = 2] = \"PATH\";\n  PdfPageObjectType2[PdfPageObjectType2[\"IMAGE\"] = 3] = \"IMAGE\";\n  PdfPageObjectType2[PdfPageObjectType2[\"SHADING\"] = 4] = \"SHADING\";\n  PdfPageObjectType2[PdfPageObjectType2[\"FORM\"] = 5] = \"FORM\";\n  return PdfPageObjectType2;\n})(PdfPageObjectType || {});\nvar PdfAnnotationFlagName = Object.freeze({\n  [1 /* INVISIBLE */]: \"invisible\",\n  [2 /* HIDDEN */]: \"hidden\",\n  [4 /* PRINT */]: \"print\",\n  [8 /* NO_ZOOM */]: \"noZoom\",\n  [16 /* NO_ROTATE */]: \"noRotate\",\n  [32 /* NO_VIEW */]: \"noView\",\n  [64 /* READ_ONLY */]: \"readOnly\",\n  [128 /* LOCKED */]: \"locked\",\n  [256 /* TOGGLE_NOVIEW */]: \"toggleNoView\"\n});\nvar PdfAnnotationFlagValue = Object.entries(\n  PdfAnnotationFlagName\n).reduce(\n  (acc, [bit, name]) => {\n    acc[name] = Number(bit);\n    return acc;\n  },\n  {}\n);\nfunction flagsToNames(raw) {\n  return Object.keys(PdfAnnotationFlagName).filter((flag) => (raw & flag) !== 0).map((flag) => PdfAnnotationFlagName[flag]);\n}\nfunction namesToFlags(names) {\n  return names.reduce(\n    (mask, name) => mask | PdfAnnotationFlagValue[name],\n    0 /* NONE */\n  );\n}\nvar PdfSegmentObjectType = /* @__PURE__ */ ((PdfSegmentObjectType2) => {\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"LINETO\"] = 0] = \"LINETO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"BEZIERTO\"] = 1] = \"BEZIERTO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"MOVETO\"] = 2] = \"MOVETO\";\n  return PdfSegmentObjectType2;\n})(PdfSegmentObjectType || {});\nvar PdfEngineFeature = /* @__PURE__ */ ((PdfEngineFeature2) => {\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPage\"] = 0] = \"RenderPage\";\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPageRect\"] = 1] = \"RenderPageRect\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Thumbnails\"] = 2] = \"Thumbnails\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Bookmarks\"] = 3] = \"Bookmarks\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Annotations\"] = 4] = \"Annotations\";\n  return PdfEngineFeature2;\n})(PdfEngineFeature || {});\nvar PdfEngineOperation = /* @__PURE__ */ ((PdfEngineOperation2) => {\n  PdfEngineOperation2[PdfEngineOperation2[\"Create\"] = 0] = \"Create\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Read\"] = 1] = \"Read\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Update\"] = 2] = \"Update\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Delete\"] = 3] = \"Delete\";\n  return PdfEngineOperation2;\n})(PdfEngineOperation || {});\nvar MatchFlag = /* @__PURE__ */ ((MatchFlag2) => {\n  MatchFlag2[MatchFlag2[\"None\"] = 0] = \"None\";\n  MatchFlag2[MatchFlag2[\"MatchCase\"] = 1] = \"MatchCase\";\n  MatchFlag2[MatchFlag2[\"MatchWholeWord\"] = 2] = \"MatchWholeWord\";\n  MatchFlag2[MatchFlag2[\"MatchConsecutive\"] = 4] = \"MatchConsecutive\";\n  return MatchFlag2;\n})(MatchFlag || {});\nfunction unionFlags(flags) {\n  return flags.reduce((flag, currFlag) => {\n    return flag | currFlag;\n  }, 0 /* None */);\n}\nfunction compareSearchTarget(targetA, targetB) {\n  const flagA = unionFlags(targetA.flags);\n  const flagB = unionFlags(targetB.flags);\n  return flagA === flagB && targetA.keyword === targetB.keyword;\n}\nvar PdfPermission = /* @__PURE__ */ ((PdfPermission2) => {\n  PdfPermission2[PdfPermission2[\"PrintDocument\"] = 8] = \"PrintDocument\";\n  PdfPermission2[PdfPermission2[\"ModifyContent\"] = 16] = \"ModifyContent\";\n  PdfPermission2[PdfPermission2[\"CopyOrExtract\"] = 32] = \"CopyOrExtract\";\n  PdfPermission2[PdfPermission2[\"AddOrModifyTextAnnot\"] = 64] = \"AddOrModifyTextAnnot\";\n  PdfPermission2[PdfPermission2[\"FillInExistingForm\"] = 512] = \"FillInExistingForm\";\n  PdfPermission2[PdfPermission2[\"ExtractTextOrGraphics\"] = 1024] = \"ExtractTextOrGraphics\";\n  PdfPermission2[PdfPermission2[\"AssembleDocument\"] = 2048] = \"AssembleDocument\";\n  PdfPermission2[PdfPermission2[\"PrintHighQuality\"] = 4096] = \"PrintHighQuality\";\n  return PdfPermission2;\n})(PdfPermission || {});\nvar PdfPageFlattenFlag = /* @__PURE__ */ ((PdfPageFlattenFlag2) => {\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Display\"] = 0] = \"Display\";\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Print\"] = 1] = \"Print\";\n  return PdfPageFlattenFlag2;\n})(PdfPageFlattenFlag || {});\nvar PdfPageFlattenResult = /* @__PURE__ */ ((PdfPageFlattenResult2) => {\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Fail\"] = 0] = \"Fail\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Success\"] = 1] = \"Success\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"NothingToDo\"] = 2] = \"NothingToDo\";\n  return PdfPageFlattenResult2;\n})(PdfPageFlattenResult || {});\nvar PdfErrorCode = /* @__PURE__ */ ((PdfErrorCode2) => {\n  PdfErrorCode2[PdfErrorCode2[\"Ok\"] = 0] = \"Ok\";\n  PdfErrorCode2[PdfErrorCode2[\"Unknown\"] = 1] = \"Unknown\";\n  PdfErrorCode2[PdfErrorCode2[\"NotFound\"] = 2] = \"NotFound\";\n  PdfErrorCode2[PdfErrorCode2[\"WrongFormat\"] = 3] = \"WrongFormat\";\n  PdfErrorCode2[PdfErrorCode2[\"Password\"] = 4] = \"Password\";\n  PdfErrorCode2[PdfErrorCode2[\"Security\"] = 5] = \"Security\";\n  PdfErrorCode2[PdfErrorCode2[\"PageError\"] = 6] = \"PageError\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALoad\"] = 7] = \"XFALoad\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALayout\"] = 8] = \"XFALayout\";\n  PdfErrorCode2[PdfErrorCode2[\"Cancelled\"] = 9] = \"Cancelled\";\n  PdfErrorCode2[PdfErrorCode2[\"Initialization\"] = 10] = \"Initialization\";\n  PdfErrorCode2[PdfErrorCode2[\"NotReady\"] = 11] = \"NotReady\";\n  PdfErrorCode2[PdfErrorCode2[\"NotSupport\"] = 12] = \"NotSupport\";\n  PdfErrorCode2[PdfErrorCode2[\"LoadDoc\"] = 13] = \"LoadDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"DocNotOpen\"] = 14] = \"DocNotOpen\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCloseDoc\"] = 15] = \"CantCloseDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateNewDoc\"] = 16] = \"CantCreateNewDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantImportPages\"] = 17] = \"CantImportPages\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateAnnot\"] = 18] = \"CantCreateAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotRect\"] = 19] = \"CantSetAnnotRect\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotContent\"] = 20] = \"CantSetAnnotContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantRemoveInkList\"] = 21] = \"CantRemoveInkList\";\n  PdfErrorCode2[PdfErrorCode2[\"CantAddInkStoke\"] = 22] = \"CantAddInkStoke\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentSize\"] = 23] = \"CantReadAttachmentSize\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentContent\"] = 24] = \"CantReadAttachmentContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantFocusAnnot\"] = 25] = \"CantFocusAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectText\"] = 26] = \"CantSelectText\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectOption\"] = 27] = \"CantSelectOption\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCheckField\"] = 28] = \"CantCheckField\";\n  return PdfErrorCode2;\n})(PdfErrorCode || {});\nvar PdfTaskHelper = class {\n  /**\n   * Create a task\n   * @returns new task\n   */\n  static create() {\n    return new Task();\n  }\n  /**\n   * Create a task that has been resolved with value\n   * @param result - resolved value\n   * @returns resolved task\n   */\n  static resolve(result) {\n    const task = new Task();\n    task.resolve(result);\n    return task;\n  }\n  /**\n   * Create a task that has been rejected with error\n   * @param reason - rejected error\n   * @returns rejected task\n   */\n  static reject(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n  /**\n   * Create a task that has been aborted with error\n   * @param reason - aborted error\n   * @returns aborted task\n   */\n  static abort(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n};\n\n// src/color.ts\nfunction pdfAlphaColorToWebAlphaColor(c) {\n  const clamp = (n) => Math.max(0, Math.min(255, n));\n  const toHex = (n) => clamp(n).toString(16).padStart(2, \"0\");\n  const color = `#${toHex(c.red)}${toHex(c.green)}${toHex(c.blue)}`;\n  const opacity = clamp(c.alpha) / 255;\n  return { color, opacity };\n}\nfunction webAlphaColorToPdfAlphaColor({ color, opacity }) {\n  if (/^#?[0-9a-f]{3}$/i.test(color)) {\n    color = color.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, \"#$1$1$2$2$3$3\").toLowerCase();\n  }\n  const [, r, g, b] = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color) ?? (() => {\n    throw new Error(`Invalid hex colour: \\u201C${color}\\u201D`);\n  })();\n  const clamp = (n, hi = 255) => Math.max(0, Math.min(hi, n));\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: clamp(Math.round(opacity * 255))\n  };\n}\n\n// src/date.ts\nfunction pdfDateToDate(pdf) {\n  if (!pdf?.startsWith(\"D:\") || pdf.length < 16) return;\n  const y = +pdf.slice(2, 6);\n  const mo = +pdf.slice(6, 8) - 1;\n  const d = +pdf.slice(8, 10);\n  const H = +pdf.slice(10, 12);\n  const M = +pdf.slice(12, 14);\n  const S = +pdf.slice(14, 16);\n  return new Date(Date.UTC(y, mo, d, H, M, S));\n}\nfunction dateToPdfDate(date = /* @__PURE__ */ new Date()) {\n  const z = (n, len = 2) => n.toString().padStart(len, \"0\");\n  const YYYY = date.getUTCFullYear();\n  const MM = z(date.getUTCMonth() + 1);\n  const DD = z(date.getUTCDate());\n  const HH = z(date.getUTCHours());\n  const mm = z(date.getUTCMinutes());\n  const SS = z(date.getUTCSeconds());\n  return `D:${YYYY}${MM}${DD}${HH}${mm}${SS}`;\n}\n\n// src/index.ts\nfunction ignore() {\n}\nexport {\n  AllLogger,\n  AppearanceMode,\n  ConsoleLogger,\n  LevelLogger,\n  LogLevel,\n  MatchFlag,\n  MixedBlendMode,\n  NoopLogger,\n  PDF_FORM_FIELD_FLAG,\n  PDF_FORM_FIELD_TYPE,\n  PdfActionType,\n  PdfAnnotationBorderStyle,\n  PdfAnnotationColorType,\n  PdfAnnotationFlagName,\n  PdfAnnotationFlags,\n  PdfAnnotationObjectStatus,\n  PdfAnnotationState,\n  PdfAnnotationStateModel,\n  PdfAnnotationSubtype,\n  PdfAnnotationSubtypeName,\n  PdfBlendMode,\n  PdfBomOrZwnbsp,\n  PdfEngineFeature,\n  PdfEngineOperation,\n  PdfErrorCode,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF,\n  PdfPageFlattenFlag,\n  PdfPageFlattenResult,\n  PdfPageObjectType,\n  PdfPermission,\n  PdfSegmentObjectType,\n  PdfSoftHyphenMarker,\n  PdfTaskHelper,\n  PdfUnwantedTextMarkers,\n  PdfUnwantedTextRegex,\n  PdfWordJoiner,\n  PdfZeroWidthSpace,\n  PdfZoomMode,\n  PerfLogger,\n  Rotation,\n  Task,\n  TaskAbortedError,\n  TaskRejectedError,\n  TaskStage,\n  blendModeLabel,\n  blendModeSelectOptions,\n  blendModeToCss,\n  boundingRect,\n  calculateAngle,\n  calculateDegree,\n  compareSearchTarget,\n  cssToBlendMode,\n  dateToPdfDate,\n  flagsToNames,\n  getBlendModeInfo,\n  ignore,\n  makeMatrix,\n  namesToFlags,\n  pdfAlphaColorToWebAlphaColor,\n  pdfDateToDate,\n  quadToRect,\n  rectToQuad,\n  reduceBlendModes,\n  restoreOffset,\n  restorePosition,\n  restoreRect,\n  rotatePosition,\n  rotateRect,\n  scalePosition,\n  scaleRect,\n  stripPdfUnwantedMarkers,\n  swap,\n  toIntPos,\n  toIntRect,\n  toIntSize,\n  transformPosition,\n  transformRect,\n  transformSize,\n  uiBlendModeDisplay,\n  unionFlags,\n  webAlphaColorToPdfAlphaColor\n};\n//# sourceMappingURL=index.js.map","import { BasePluginConfig, Emitter, EventHook } from '@embedpdf/core';\nimport { PdfPageObject, Rect, Rotation } from '@embedpdf/models';\nimport { ViewportMetrics } from '@embedpdf/plugin-viewport';\nimport { VirtualItem } from './types/virtual-item';\n\nexport interface ScrollState extends ScrollMetrics {\n  virtualItems: VirtualItem[];\n  totalPages: number;\n  totalContentSize: { width: number; height: number };\n  desiredScrollPosition: { x: number; y: number };\n  strategy: ScrollStrategy;\n  pageGap: number;\n  scale: number;\n}\n\nexport interface ScrollerLayout {\n  startSpacing: number;\n  endSpacing: number;\n  totalWidth: number;\n  totalHeight: number;\n  pageGap: number;\n  strategy: ScrollState['strategy'];\n  items: VirtualItem[];\n}\n\nexport enum ScrollStrategy {\n  Vertical = 'vertical',\n  Horizontal = 'horizontal',\n}\n\nexport interface PageVisibilityMetrics {\n  pageNumber: number;\n  viewportX: number;\n  viewportY: number;\n  visiblePercentage: number;\n  original: {\n    pageX: number;\n    pageY: number;\n    visibleWidth: number;\n    visibleHeight: number;\n    scale: number;\n  };\n  scaled: {\n    pageX: number;\n    pageY: number;\n    visibleWidth: number;\n    visibleHeight: number;\n    scale: number;\n  };\n}\n\nexport interface ScrollMetrics {\n  currentPage: number;\n  visiblePages: number[];\n  pageVisibilityMetrics: PageVisibilityMetrics[];\n  renderedPageIndexes: number[];\n  scrollOffset: { x: number; y: number };\n  startSpacing: number;\n  endSpacing: number;\n}\n\nexport interface ScrollStrategyInterface {\n  initialize(container: HTMLElement, innerDiv: HTMLElement): void;\n  destroy(): void;\n  updateLayout(viewport: ViewportMetrics, pdfPageObject: PdfPageObject[][]): void;\n  handleScroll(viewport: ViewportMetrics): void;\n  getVirtualItems(): VirtualItem[];\n  scrollToPage(pageNumber: number, behavior?: ScrollBehavior): void;\n  calculateDimensions(pdfPageObject: PdfPageObject[][]): void;\n}\n\nexport interface ScrollPluginConfig extends BasePluginConfig {\n  strategy?: ScrollStrategy;\n  initialPage?: number;\n  bufferSize?: number;\n  pageGap?: number;\n}\n\nexport type LayoutChangePayload = Pick<ScrollState, 'virtualItems' | 'totalContentSize'>;\n\nexport interface ScrollToPageOptions {\n  pageNumber: number;\n  pageCoordinates?: { x: number; y: number };\n  behavior?: ScrollBehavior;\n  center?: boolean;\n}\n\nexport interface PageChangePayload {\n  pageNumber: number;\n  totalPages: number;\n}\n\nexport interface ScrollCapability {\n  onScrollerData: EventHook<ScrollerLayout>;\n  onStateChange: EventHook<ScrollState>;\n  onScroll: EventHook<ScrollMetrics>;\n  getCurrentPage(): number;\n  getTotalPages(): number;\n  onPageChange: EventHook<PageChangePayload>;\n  onLayoutChange: EventHook<LayoutChangePayload>;\n  onLayoutReady: EventHook<boolean>;\n  scrollToPage(options: ScrollToPageOptions): void;\n  scrollToNextPage(behavior?: ScrollBehavior): void;\n  scrollToPreviousPage(behavior?: ScrollBehavior): void;\n  getMetrics(viewport?: ViewportMetrics): ScrollMetrics;\n  getLayout(): LayoutChangePayload;\n  getScrollerLayout(): ScrollerLayout;\n  getRectPositionForPage(\n    page: number,\n    rect: Rect,\n    scale?: number,\n    rotation?: Rotation,\n  ): Rect | null;\n  setScrollStrategy(strategy: ScrollStrategy): void;\n  getPageGap(): number;\n}\n","import {\n  PdfPageObjectWithRotatedSize,\n  Position,\n  Rect,\n  Rotation,\n  scalePosition,\n  transformPosition,\n  transformRect,\n} from '@embedpdf/models';\nimport { ViewportMetrics } from '@embedpdf/plugin-viewport';\nimport { VirtualItem } from '../types/virtual-item';\nimport { ScrollMetrics } from '../types';\n\nexport interface ScrollStrategyConfig {\n  pageGap?: number;\n  viewportGap?: number;\n  bufferSize?: number;\n}\n\nexport abstract class BaseScrollStrategy {\n  protected pageGap: number;\n  protected viewportGap: number;\n  protected bufferSize: number;\n\n  constructor(config: ScrollStrategyConfig) {\n    this.pageGap = config.pageGap ?? 20;\n    this.viewportGap = config.viewportGap ?? 20;\n    this.bufferSize = config.bufferSize ?? 2;\n  }\n\n  abstract createVirtualItems(pdfPageObject: PdfPageObjectWithRotatedSize[][]): VirtualItem[];\n  abstract getTotalContentSize(virtualItems: VirtualItem[]): { width: number; height: number };\n  protected abstract getScrollOffset(viewport: ViewportMetrics): number;\n  protected abstract getClientSize(viewport: ViewportMetrics): number;\n\n  protected getVisibleRange(\n    viewport: ViewportMetrics,\n    virtualItems: VirtualItem[],\n    scale: number,\n  ): { start: number; end: number } {\n    const scrollOffset = this.getScrollOffset(viewport);\n    const clientSize = this.getClientSize(viewport);\n    const viewportStart = scrollOffset;\n    const viewportEnd = scrollOffset + clientSize;\n\n    let startIndex = 0;\n    while (\n      startIndex < virtualItems.length &&\n      (virtualItems[startIndex].offset + virtualItems[startIndex].height) * scale <= viewportStart\n    ) {\n      startIndex++;\n    }\n\n    let endIndex = startIndex;\n    while (endIndex < virtualItems.length && virtualItems[endIndex].offset * scale <= viewportEnd) {\n      endIndex++;\n    }\n\n    return {\n      start: Math.max(0, startIndex - this.bufferSize),\n      end: Math.min(virtualItems.length - 1, endIndex + this.bufferSize - 1),\n    };\n  }\n\n  handleScroll(\n    viewport: ViewportMetrics,\n    virtualItems: VirtualItem[],\n    scale: number,\n  ): ScrollMetrics {\n    const range = this.getVisibleRange(viewport, virtualItems, scale);\n    const visibleItems = virtualItems.slice(range.start, range.end + 1);\n    const pageVisibilityMetrics = this.calculatePageVisibility(visibleItems, viewport, scale);\n    const visiblePages = pageVisibilityMetrics.map((m) => m.pageNumber);\n    const renderedPageIndexes = virtualItems\n      .slice(range.start, range.end + 1)\n      .flatMap((item) => item.index);\n    const currentPage = this.determineCurrentPage(pageVisibilityMetrics);\n    const first = virtualItems[range.start];\n    const last = virtualItems[range.end];\n    const startSpacing = first ? first.offset * scale : 0;\n    const endSpacing = last\n      ? (virtualItems[virtualItems.length - 1].offset + // end of content\n          virtualItems[virtualItems.length - 1].height) *\n          scale - // minus\n        (last.offset + last.height) * scale // end of last rendered\n      : 0;\n\n    return {\n      currentPage,\n      visiblePages,\n      pageVisibilityMetrics,\n      renderedPageIndexes,\n      scrollOffset: { x: viewport.scrollLeft, y: viewport.scrollTop },\n      startSpacing,\n      endSpacing,\n    };\n  }\n\n  protected calculatePageVisibility(\n    virtualItems: VirtualItem[],\n    viewport: ViewportMetrics,\n    scale: number,\n  ): ScrollMetrics['pageVisibilityMetrics'] {\n    const visibilityMetrics: ScrollMetrics['pageVisibilityMetrics'] = [];\n\n    virtualItems.forEach((item) => {\n      item.pageLayouts.forEach((page) => {\n        const itemX = item.x * scale;\n        const itemY = item.y * scale;\n        const pageX = itemX + page.x * scale;\n        const pageY = itemY + page.y * scale;\n        const pageWidth = page.rotatedWidth * scale;\n        const pageHeight = page.rotatedHeight * scale;\n\n        const viewportLeft = viewport.scrollLeft;\n        const viewportTop = viewport.scrollTop;\n        const viewportRight = viewportLeft + viewport.clientWidth;\n        const viewportBottom = viewportTop + viewport.clientHeight;\n\n        const intersectionLeft = Math.max(pageX, viewportLeft);\n        const intersectionTop = Math.max(pageY, viewportTop);\n        const intersectionRight = Math.min(pageX + pageWidth, viewportRight);\n        const intersectionBottom = Math.min(pageY + pageHeight, viewportBottom);\n\n        if (intersectionLeft < intersectionRight && intersectionTop < intersectionBottom) {\n          const visibleWidth = intersectionRight - intersectionLeft;\n          const visibleHeight = intersectionBottom - intersectionTop;\n          const totalArea = pageWidth * pageHeight;\n          const visibleArea = visibleWidth * visibleHeight;\n\n          visibilityMetrics.push({\n            pageNumber: page.pageNumber,\n            viewportX: intersectionLeft - viewportLeft,\n            viewportY: intersectionTop - viewportTop,\n            visiblePercentage: (visibleArea / totalArea) * 100,\n            original: {\n              pageX: (intersectionLeft - pageX) / scale,\n              pageY: (intersectionTop - pageY) / scale,\n              visibleWidth: visibleWidth / scale,\n              visibleHeight: visibleHeight / scale,\n              scale: 1,\n            },\n            scaled: {\n              pageX: intersectionLeft - pageX,\n              pageY: intersectionTop - pageY,\n              visibleWidth,\n              visibleHeight,\n              scale,\n            },\n          });\n        }\n      });\n    });\n\n    return visibilityMetrics;\n  }\n\n  protected determineCurrentPage(\n    visibilityMetrics: ScrollMetrics['pageVisibilityMetrics'],\n  ): number {\n    if (visibilityMetrics.length === 0) return 1;\n\n    const maxVisibility = Math.max(...visibilityMetrics.map((m) => m.visiblePercentage));\n    const mostVisiblePages = visibilityMetrics.filter((m) => m.visiblePercentage === maxVisibility);\n\n    return mostVisiblePages.length === 1\n      ? mostVisiblePages[0].pageNumber\n      : mostVisiblePages.sort((a, b) => a.pageNumber - b.pageNumber)[0].pageNumber;\n  }\n\n  private getRectLocationForPage(pageNumber: number, virtualItems: VirtualItem[]): Rect | null {\n    // Find the virtual item containing the page\n    const item = virtualItems.find((item) => item.pageNumbers.includes(pageNumber));\n    if (!item) return null;\n\n    // Find the specific page layout for the requested page number\n    const pageLayout = item.pageLayouts.find((layout) => layout.pageNumber === pageNumber);\n    if (!pageLayout) return null;\n\n    return {\n      origin: {\n        x: item.x + pageLayout.x,\n        y: item.y + pageLayout.y,\n      },\n      size: {\n        width: pageLayout.width,\n        height: pageLayout.height,\n      },\n    };\n  }\n\n  getScrollPositionForPage(\n    pageNumber: number,\n    virtualItems: VirtualItem[],\n    scale: number,\n    rotation: Rotation,\n    pageCoordinates?: { x: number; y: number },\n  ): Position | null {\n    // Find the virtual item containing the page\n    const pageRect = this.getRectLocationForPage(pageNumber, virtualItems);\n    if (!pageRect) return null;\n\n    const scaledBasePosition = scalePosition(pageRect.origin, scale);\n\n    // If specific page coordinates are provided, add them to the base position\n    if (pageCoordinates) {\n      const rotatedSize = transformPosition(\n        {\n          width: pageRect.size.width,\n          height: pageRect.size.height,\n        },\n        {\n          x: pageCoordinates.x,\n          y: pageCoordinates.y,\n        },\n        rotation,\n        scale,\n      );\n\n      return {\n        x: scaledBasePosition.x + rotatedSize.x + this.viewportGap,\n        y: scaledBasePosition.y + rotatedSize.y + this.viewportGap,\n      };\n    }\n\n    return {\n      x: scaledBasePosition.x + this.viewportGap,\n      y: scaledBasePosition.y + this.viewportGap,\n    };\n  }\n\n  getRectPositionForPage(\n    pageNumber: number,\n    virtualItems: VirtualItem[],\n    scale: number,\n    rotation: Rotation,\n    rect: Rect,\n  ): Rect | null {\n    const pageRect = this.getRectLocationForPage(pageNumber, virtualItems);\n    if (!pageRect) return null;\n\n    const scaledBasePosition = scalePosition(pageRect.origin, scale);\n\n    const rotatedSize = transformRect(\n      {\n        width: pageRect.size.width,\n        height: pageRect.size.height,\n      },\n      rect,\n      rotation,\n      scale,\n    );\n\n    return {\n      origin: {\n        x: scaledBasePosition.x + rotatedSize.origin.x,\n        y: scaledBasePosition.y + rotatedSize.origin.y,\n      },\n      size: rotatedSize.size,\n    };\n  }\n}\n","import { PdfPageObjectWithRotatedSize } from '@embedpdf/models';\nimport { ViewportMetrics } from '@embedpdf/plugin-viewport';\nimport { BaseScrollStrategy, ScrollStrategyConfig } from './base-strategy';\nimport { VirtualItem, PageLayout } from '../types/virtual-item';\nimport { ScrollMetrics } from '../types';\n\nexport class VerticalScrollStrategy extends BaseScrollStrategy {\n  constructor(config: ScrollStrategyConfig) {\n    super(config);\n  }\n\n  createVirtualItems(pdfPageObject: PdfPageObjectWithRotatedSize[][]): VirtualItem[] {\n    let yOffset = 0;\n    return pdfPageObject.map((pagesInSpread, index) => {\n      let pageX = 0;\n      const pageLayouts: PageLayout[] = pagesInSpread.map((page) => {\n        const layout: PageLayout = {\n          pageNumber: page.index + 1,\n          pageIndex: page.index,\n          x: pageX,\n          y: 0,\n          width: page.size.width,\n          height: page.size.height,\n          rotatedWidth: page.rotatedSize.width,\n          rotatedHeight: page.rotatedSize.height,\n        };\n        pageX += page.rotatedSize.width + this.pageGap;\n        return layout;\n      });\n      const width = pagesInSpread.reduce(\n        (sum, page, i) =>\n          sum + page.rotatedSize.width + (i < pagesInSpread.length - 1 ? this.pageGap : 0),\n        0,\n      );\n      const height = Math.max(...pagesInSpread.map((p) => p.rotatedSize.height));\n      const item: VirtualItem = {\n        id: `item-${index}`,\n        x: 0,\n        y: yOffset,\n        offset: yOffset,\n        width,\n        height,\n        pageLayouts,\n        pageNumbers: pagesInSpread.map((p) => p.index + 1),\n        index,\n      };\n      yOffset += height + this.pageGap;\n      return item;\n    });\n  }\n\n  getTotalContentSize(virtualItems: VirtualItem[]): { width: number; height: number } {\n    if (virtualItems.length === 0) return { width: 0, height: 0 };\n    const maxWidth = Math.max(...virtualItems.map((item) => item.width));\n    const totalHeight =\n      virtualItems[virtualItems.length - 1].y + virtualItems[virtualItems.length - 1].height;\n    return {\n      width: maxWidth,\n      height: totalHeight,\n    };\n  }\n\n  protected getScrollOffset(viewport: ViewportMetrics): number {\n    return viewport.scrollTop;\n  }\n\n  protected getClientSize(viewport: ViewportMetrics): number {\n    return viewport.clientHeight;\n  }\n}\n","import { PdfPageObjectWithRotatedSize } from '@embedpdf/models';\nimport { ViewportMetrics } from '@embedpdf/plugin-viewport';\nimport { BaseScrollStrategy, ScrollStrategyConfig } from './base-strategy';\nimport { VirtualItem, PageLayout } from '../types/virtual-item';\n\nexport class HorizontalScrollStrategy extends BaseScrollStrategy {\n  constructor(config: ScrollStrategyConfig) {\n    super(config);\n  }\n\n  createVirtualItems(pdfPageObject: PdfPageObjectWithRotatedSize[][]): VirtualItem[] {\n    let xOffset = 0;\n    return pdfPageObject.map((pagesInSpread, index) => {\n      let pageX = 0;\n      const pageLayouts: PageLayout[] = pagesInSpread.map((page) => {\n        const layout: PageLayout = {\n          pageNumber: page.index + 1,\n          pageIndex: page.index,\n          x: pageX,\n          y: 0,\n          width: page.size.width,\n          height: page.size.height,\n          rotatedWidth: page.rotatedSize.width,\n          rotatedHeight: page.rotatedSize.height,\n        };\n        pageX += page.rotatedSize.width + this.pageGap;\n        return layout;\n      });\n      const width = pagesInSpread.reduce(\n        (sum, page, i) =>\n          sum + page.rotatedSize.width + (i < pagesInSpread.length - 1 ? this.pageGap : 0),\n        0,\n      );\n      const height = Math.max(...pagesInSpread.map((p) => p.rotatedSize.height));\n      const item: VirtualItem = {\n        id: `item-${index}`,\n        x: xOffset,\n        y: 0,\n        offset: xOffset,\n        width,\n        height,\n        pageLayouts,\n        pageNumbers: pagesInSpread.map((p) => p.index + 1),\n        index,\n      };\n      xOffset += width + this.pageGap;\n      return item;\n    });\n  }\n\n  getTotalContentSize(virtualItems: VirtualItem[]): { width: number; height: number } {\n    if (virtualItems.length === 0) return { width: 0, height: 0 };\n    const totalWidth =\n      virtualItems[virtualItems.length - 1].x + virtualItems[virtualItems.length - 1].width;\n    const maxHeight = Math.max(...virtualItems.map((item) => item.height));\n    return {\n      width: totalWidth,\n      height: maxHeight,\n    };\n  }\n\n  protected getScrollOffset(viewport: ViewportMetrics): number {\n    return viewport.scrollLeft;\n  }\n\n  protected getClientSize(viewport: ViewportMetrics): number {\n    return viewport.clientWidth;\n  }\n}\n","import { Action } from '@embedpdf/core';\nimport { ScrollState } from './types';\n\nexport const UPDATE_SCROLL_STATE = 'UPDATE_SCROLL_STATE';\nexport const SET_DESIRED_SCROLL_POSITION = 'SET_DESIRED_SCROLL_POSITION';\nexport const UPDATE_TOTAL_PAGES = 'UPDATE_TOTAL_PAGES';\n\nexport interface UpdateScrollStateAction extends Action {\n  type: typeof UPDATE_SCROLL_STATE;\n  payload: Partial<ScrollState>;\n}\n\nexport interface SetDesiredScrollPositionAction extends Action {\n  type: typeof SET_DESIRED_SCROLL_POSITION;\n  payload: { x: number; y: number };\n}\n\nexport interface UpdateTotalPagesAction extends Action {\n  type: typeof UPDATE_TOTAL_PAGES;\n  payload: number;\n}\n\nexport type ScrollAction =\n  | UpdateScrollStateAction\n  | SetDesiredScrollPositionAction\n  | UpdateTotalPagesAction;\n\nexport function updateScrollState(payload: Partial<ScrollState>): UpdateScrollStateAction {\n  return { type: UPDATE_SCROLL_STATE, payload };\n}\n\nexport function setDesiredScrollPosition(payload: {\n  x: number;\n  y: number;\n}): SetDesiredScrollPositionAction {\n  return { type: SET_DESIRED_SCROLL_POSITION, payload };\n}\n\nexport function updateTotalPages(payload: number): UpdateTotalPagesAction {\n  return { type: UPDATE_TOTAL_PAGES, payload };\n}\n","import { ScrollerLayout, ScrollState } from './types';\n\nexport const getScrollerLayout = (state: ScrollState, scale: number): ScrollerLayout => {\n  return {\n    startSpacing: state.startSpacing,\n    endSpacing: state.endSpacing,\n    totalWidth: state.totalContentSize.width * scale,\n    totalHeight: state.totalContentSize.height * scale,\n    pageGap: state.pageGap * scale,\n    strategy: state.strategy,\n    items: state.renderedPageIndexes.map((idx) => {\n      return {\n        ...state.virtualItems[idx],\n        pageLayouts: state.virtualItems[idx].pageLayouts.map((layout) => {\n          return {\n            ...layout,\n            rotatedWidth: layout.rotatedWidth * scale,\n            rotatedHeight: layout.rotatedHeight * scale,\n            width: layout.width * scale,\n            height: layout.height * scale,\n          };\n        }),\n      };\n    }),\n  };\n};\n","import {\n  BasePlugin,\n  CoreState,\n  PluginRegistry,\n  SET_DOCUMENT,\n  SET_PAGES,\n  SET_ROTATION,\n  StoreState,\n  createBehaviorEmitter,\n  createEmitter,\n  getPagesWithRotatedSize,\n} from '@embedpdf/core';\nimport {\n  PdfPageObject,\n  PdfPageObjectWithRotatedSize,\n  Position,\n  Rect,\n  restoreRect,\n  rotateRect,\n  Rotation,\n  transformRect,\n} from '@embedpdf/models';\nimport { ViewportCapability, ViewportMetrics, ViewportPlugin } from '@embedpdf/plugin-viewport';\nimport {\n  ScrollCapability,\n  ScrollPluginConfig,\n  ScrollStrategy,\n  ScrollMetrics,\n  ScrollState,\n  LayoutChangePayload,\n  ScrollerLayout,\n  ScrollToPageOptions,\n  PageChangePayload,\n} from './types';\nimport { BaseScrollStrategy, ScrollStrategyConfig } from './strategies/base-strategy';\nimport { VerticalScrollStrategy } from './strategies/vertical-strategy';\nimport { HorizontalScrollStrategy } from './strategies/horizontal-strategy';\nimport { updateScrollState, ScrollAction, updateTotalPages } from './actions';\nimport { VirtualItem } from './types/virtual-item';\nimport { getScrollerLayout } from './selectors';\n\ntype PartialScroll = Partial<ScrollState>;\ntype Emits = {\n  layout?: LayoutChangePayload;\n  metrics?: ScrollMetrics;\n};\n\nexport class ScrollPlugin extends BasePlugin<\n  ScrollPluginConfig,\n  ScrollCapability,\n  ScrollState,\n  ScrollAction\n> {\n  static readonly id = 'scroll' as const;\n  private viewport: ViewportCapability;\n  private strategy: BaseScrollStrategy;\n  private strategyConfig: ScrollStrategyConfig;\n  private currentScale: number = 1;\n  private currentRotation: Rotation = Rotation.Degree0;\n  private initialPage?: number;\n  private currentPage: number = 1;\n  private layoutReady: boolean = false;\n\n  private readonly layout$ = createBehaviorEmitter<LayoutChangePayload>();\n  private readonly scroll$ = createBehaviorEmitter<ScrollMetrics>();\n  private readonly state$ = createBehaviorEmitter<ScrollState>();\n  private readonly scrollerLayout$ = createBehaviorEmitter<ScrollerLayout>();\n  private readonly pageChange$ = createBehaviorEmitter<PageChangePayload>();\n  private readonly layoutReady$ = createBehaviorEmitter<boolean>();\n\n  constructor(\n    public readonly id: string,\n    registry: PluginRegistry,\n    private config?: ScrollPluginConfig,\n  ) {\n    super(id, registry);\n\n    this.viewport = this.registry.getPlugin<ViewportPlugin>('viewport')!.provides();\n\n    this.strategyConfig = {\n      pageGap: this.config?.pageGap ?? 10,\n      viewportGap: this.viewport.getViewportGap(),\n      bufferSize: this.config?.bufferSize ?? 2,\n    };\n\n    this.strategy =\n      this.config?.strategy === ScrollStrategy.Horizontal\n        ? new HorizontalScrollStrategy(this.strategyConfig)\n        : new VerticalScrollStrategy(this.strategyConfig);\n\n    this.initialPage = this.config?.initialPage;\n    this.currentScale = this.coreState.core.scale;\n    this.currentRotation = this.coreState.core.rotation;\n    // Subscribe to viewport and page manager events\n    this.viewport.onViewportChange((vp) => this.commitMetrics(this.computeMetrics(vp)), {\n      mode: 'throttle',\n      wait: 250,\n    });\n    this.coreStore.onAction(SET_DOCUMENT, (_action, state) => {\n      const totalPages = state.core.pages.length;\n      this.dispatch(updateTotalPages(totalPages));\n      this.pageChange$.emit({ pageNumber: this.currentPage, totalPages });\n      this.refreshAll(getPagesWithRotatedSize(state.core), this.viewport.getMetrics());\n    });\n    this.coreStore.onAction(SET_ROTATION, (_action, state) =>\n      this.refreshAll(getPagesWithRotatedSize(state.core), this.viewport.getMetrics()),\n    );\n    this.coreStore.onAction(SET_PAGES, (_action, state) =>\n      this.refreshAll(getPagesWithRotatedSize(state.core), this.viewport.getMetrics()),\n    );\n  }\n\n  /* ------------------------------------------------------------------ */\n  /*  ᴄᴏᴍᴘᴜᴛᴇʀs                                                       */\n  /* ------------------------------------------------------------------ */\n\n  private computeLayout(pages: PdfPageObjectWithRotatedSize[][]) {\n    const virtualItems = this.strategy.createVirtualItems(pages);\n    const totalContentSize = this.strategy.getTotalContentSize(virtualItems);\n    return { virtualItems, totalContentSize };\n  }\n\n  private computeMetrics(vp: ViewportMetrics, items: VirtualItem[] = this.state.virtualItems) {\n    return this.strategy.handleScroll(vp, items, this.currentScale);\n  }\n\n  /* ------------------------------------------------------------------ */\n  /*  ᴄᴏᴍᴍɪᴛ  (single source of truth)                                  */\n  /* ------------------------------------------------------------------ */\n\n  private commit(stateDelta: PartialScroll, emit?: Emits) {\n    /* update Redux-like store */\n    this.dispatch(updateScrollState(stateDelta));\n\n    /* fire optional events */\n    if (emit?.layout) this.layout$.emit(emit.layout);\n    if (emit?.metrics) {\n      this.scroll$.emit(emit.metrics);\n\n      if (emit.metrics.currentPage !== this.currentPage) {\n        this.currentPage = emit.metrics.currentPage;\n        this.pageChange$.emit({ pageNumber: this.currentPage, totalPages: this.state.totalPages });\n      }\n    }\n\n    /* keep scroller-layout reactive */\n    this.scrollerLayout$.emit(this.getScrollerLayoutFromState());\n  }\n\n  /* convenience wrappers */\n  private commitMetrics(metrics: ScrollMetrics) {\n    this.commit(metrics, { metrics });\n  }\n\n  /* full re-compute after page-spread or initialisation */\n  private refreshAll(pages: PdfPageObjectWithRotatedSize[][], vp: ViewportMetrics) {\n    const layout = this.computeLayout(pages);\n    const metrics = this.computeMetrics(vp, layout.virtualItems);\n\n    this.commit({ ...layout, ...metrics }, { layout, metrics });\n  }\n\n  private getVirtualItemsFromState(): VirtualItem[] {\n    return this.state.virtualItems || [];\n  }\n\n  private getScrollerLayoutFromState(): ScrollerLayout {\n    const scale = this.coreState.core.scale;\n    return getScrollerLayout(this.state, scale);\n  }\n\n  private pushScrollLayout() {\n    this.scrollerLayout$.emit(this.getScrollerLayoutFromState());\n  }\n\n  override onStoreUpdated(_prevState: ScrollState, _newState: ScrollState): void {\n    this.pushScrollLayout();\n  }\n\n  override onCoreStoreUpdated(\n    prevState: StoreState<CoreState>,\n    newState: StoreState<CoreState>,\n  ): void {\n    if (prevState.core.scale !== newState.core.scale) {\n      this.currentScale = newState.core.scale;\n      this.commitMetrics(this.computeMetrics(this.viewport.getMetrics()));\n    }\n    if (prevState.core.rotation !== newState.core.rotation) {\n      this.currentRotation = newState.core.rotation;\n    }\n  }\n\n  /**\n   * Change the scroll strategy at runtime (e.g., vertical <-> horizontal)\n   * @param newStrategy ScrollStrategy.Horizontal or ScrollStrategy.Vertical\n   */\n  private setScrollStrategy(newStrategy: ScrollStrategy) {\n    // Only update if the strategy is actually changing\n    if (\n      (newStrategy === ScrollStrategy.Horizontal &&\n        this.strategy instanceof HorizontalScrollStrategy) ||\n      (newStrategy === ScrollStrategy.Vertical && this.strategy instanceof VerticalScrollStrategy)\n    ) {\n      return;\n    }\n\n    this.strategy =\n      newStrategy === ScrollStrategy.Horizontal\n        ? new HorizontalScrollStrategy(this.strategyConfig)\n        : new VerticalScrollStrategy(this.strategyConfig);\n\n    // Update state with new strategy\n    this.dispatch(\n      updateScrollState({\n        strategy: newStrategy,\n      }),\n    );\n\n    // Recalculate layout and scroll metrics\n    const pages = getPagesWithRotatedSize(this.coreState.core);\n    this.refreshAll(pages, this.viewport.getMetrics());\n  }\n\n  public setLayoutReady() {\n    if (this.layoutReady) return;\n\n    this.layoutReady = true;\n    this.layoutReady$.emit(true);\n  }\n\n  protected buildCapability(): ScrollCapability {\n    return {\n      onStateChange: this.state$.on,\n      onLayoutChange: this.layout$.on,\n      onScroll: this.scroll$.on,\n      onPageChange: this.pageChange$.on,\n      onScrollerData: this.scrollerLayout$.on,\n      onLayoutReady: this.layoutReady$.on,\n      getCurrentPage: () => this.currentPage,\n      getTotalPages: () => this.state.totalPages,\n      scrollToPage: (options: ScrollToPageOptions) => {\n        const { pageNumber, behavior = 'smooth', pageCoordinates, center = false } = options;\n        const virtualItems = this.getVirtualItemsFromState();\n        const position = this.strategy.getScrollPositionForPage(\n          pageNumber,\n          virtualItems,\n          this.currentScale,\n          this.currentRotation,\n          pageCoordinates,\n        );\n        if (position) {\n          this.viewport.scrollTo({ ...position, behavior, center });\n        }\n      },\n      scrollToNextPage: (behavior = 'smooth') => {\n        const virtualItems = this.getVirtualItemsFromState();\n        const currentItemIndex = virtualItems.findIndex((item) =>\n          item.pageNumbers.includes(this.currentPage),\n        );\n        if (currentItemIndex >= 0 && currentItemIndex < virtualItems.length - 1) {\n          const nextItem = virtualItems[currentItemIndex + 1];\n          const position = this.strategy.getScrollPositionForPage(\n            nextItem.pageNumbers[0],\n            virtualItems,\n            this.currentScale,\n            this.currentRotation,\n          );\n          if (position) {\n            this.viewport.scrollTo({ ...position, behavior });\n          }\n        }\n      },\n      scrollToPreviousPage: (behavior = 'smooth') => {\n        const virtualItems = this.getVirtualItemsFromState();\n        const currentItemIndex = virtualItems.findIndex((item) =>\n          item.pageNumbers.includes(this.currentPage),\n        );\n        if (currentItemIndex > 0) {\n          const prevItem = virtualItems[currentItemIndex - 1];\n          const position = this.strategy.getScrollPositionForPage(\n            prevItem.pageNumbers[0],\n            virtualItems,\n            this.currentScale,\n            this.currentRotation,\n          );\n          if (position) {\n            this.viewport.scrollTo({ ...position, behavior });\n          }\n        }\n      },\n      getMetrics: this.getMetrics.bind(this),\n      getLayout: this.getLayout.bind(this),\n      getRectPositionForPage: this.getRectPositionForPage.bind(this),\n      getPageGap: () => this.state.pageGap,\n      getScrollerLayout: () => this.getScrollerLayoutFromState(),\n      setScrollStrategy: (strategy: ScrollStrategy) => this.setScrollStrategy(strategy),\n    };\n  }\n\n  private getMetrics(viewport?: ViewportMetrics): ScrollMetrics {\n    const metrics = viewport || this.viewport.getMetrics();\n    const virtualItems = this.getVirtualItemsFromState();\n    return this.strategy.handleScroll(metrics, virtualItems, this.currentScale);\n  }\n\n  private getLayout(): LayoutChangePayload {\n    return {\n      virtualItems: this.state.virtualItems,\n      totalContentSize: this.state.totalContentSize,\n    };\n  }\n\n  private getRectPositionForPage(\n    pageIndex: number,\n    rect: Rect,\n    scale?: number,\n    rotation?: Rotation,\n  ): Rect | null {\n    return this.strategy.getRectPositionForPage(\n      pageIndex + 1,\n      this.state.virtualItems,\n      scale ?? this.currentScale,\n      rotation ?? this.currentRotation,\n      rect,\n    );\n  }\n\n  async initialize(): Promise<void> {\n    // No DOM initialization needed; state drives rendering\n  }\n\n  async destroy(): Promise<void> {\n    this.layout$.clear();\n    this.scroll$.clear();\n    this.pageChange$.clear();\n    this.state$.clear();\n    this.scrollerLayout$.clear();\n    this.layoutReady$.clear();\n    super.destroy();\n  }\n}\n"],"names":["f","y","w","E","T","i","e","t","X","z","M","L","$","F","N","k","P","_","v","r","n","x","a","o","U","B","S","G","d","c","b","C","m","p","h","l","Rotation","Rotation2","swap","size","width","height","rotatePosition","containerSize","position","rotation","scalePosition","scaleFactor","transformPosition","rotateRect","rect","scaleRect","transformRect","PdfSoftHyphenMarker","PdfZeroWidthSpace","PdfWordJoiner","PdfBomOrZwnbsp","PdfNonCharacterFFFE","PdfNonCharacterFFFF","PdfUnwantedTextMarkers","BLEND_MODE_INFOS","info","PdfAnnotationFlagName","acc","bit","name","ScrollStrategy","BaseScrollStrategy","config","viewport","virtualItems","scale","scrollOffset","clientSize","viewportStart","viewportEnd","startIndex","endIndex","range","visibleItems","pageVisibilityMetrics","visiblePages","renderedPageIndexes","item","currentPage","first","last","startSpacing","endSpacing","visibilityMetrics","page","itemX","itemY","pageX","pageY","pageWidth","pageHeight","viewportLeft","viewportTop","viewportRight","viewportBottom","intersectionLeft","intersectionTop","intersectionRight","intersectionBottom","visibleWidth","visibleHeight","totalArea","visibleArea","maxVisibility","mostVisiblePages","pageNumber","pageLayout","layout","pageCoordinates","pageRect","scaledBasePosition","rotatedSize","VerticalScrollStrategy","pdfPageObject","yOffset","pagesInSpread","index","pageLayouts","sum","maxWidth","totalHeight","HorizontalScrollStrategy","xOffset","totalWidth","maxHeight","UPDATE_SCROLL_STATE","SET_DESIRED_SCROLL_POSITION","UPDATE_TOTAL_PAGES","updateScrollState","payload","updateTotalPages","getScrollerLayout","state","idx","_ScrollPlugin","BasePlugin","id","registry","_a","_b","_c","_d","createBehaviorEmitter","vp","SET_DOCUMENT","_action","totalPages","getPagesWithRotatedSize","SET_ROTATION","SET_PAGES","pages","totalContentSize","items","stateDelta","emit","metrics","_prevState","_newState","prevState","newState","newStrategy","options","behavior","center","currentItemIndex","nextItem","prevItem","strategy","pageIndex","ScrollPlugin"],"mappings":"AAwIK,MAAsBA,IAAI,gBAA0CC,KAAI,aAAaC,IAAI,gBAAgBC,IAAI;AAgLlH,SAASC,EAAEC,GAAG;AACZ,QAAM,EAAE,OAAOC,GAAG,QAAQC,EAAC,IAAKF;AAChC,SAAO;AAAA,IACL,OAAOE;AAAA,IACP,QAAQD;AAAA,EACZ;AACA;AACA,SAASE,EAAEH,GAAGC,GAAGC,GAAG;AAClB,SAAOF,IAAIC,IAAI,MAAM,IAAID,IAAID,EAAEC,CAAC,GAAG;AAAA,IACjC,OAAOA,EAAE,QAAQE;AAAA,IACjB,QAAQF,EAAE,SAASE;AAAA,EACvB;AACA;AACA,IAAIE,IAAI,KAAKC,IAAI,KAAKC,IAAI,KAAKC,IAAI,UAAUC,IAAI,KAAKC,IAAI,KAAKC,IAAI,OAAO,OAAO;AAAA,EAC/EN;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AACF,CAAC;AACD,IAAI,OAAO,IAAIC,EAAE,KAAK,EAAE,CAAC,KAAK,GAAG;AACjC,IAAIC,IAAI,OAAO,OAAO;AAAA,EACpB,EAAE,IAAI,GAAG,OAAO,UAAU,KAAK,SAAQ;AAAA,EACvC,EAAE,IAAI,GAAG,OAAO,YAAY,KAAK,WAAU;AAAA,EAC3C,EAAE,IAAI,GAAG,OAAO,UAAU,KAAK,SAAQ;AAAA,EACvC,EAAE,IAAI,GAAG,OAAO,WAAW,KAAK,UAAS;AAAA,EACzC,EAAE,IAAI,GAAG,OAAO,UAAU,KAAK,SAAQ;AAAA,EACvC,EAAE,IAAI,GAAG,OAAO,WAAW,KAAK,UAAS;AAAA,EACzC,EAAE,IAAI,GAAG,OAAO,eAAe,KAAK,cAAa;AAAA,EACjD,EAAE,IAAI,GAAG,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/C,EAAE,IAAI,GAAG,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/C,EAAE,IAAI,GAAG,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/C,EAAE,IAAI,IAAI,OAAO,cAAc,KAAK,aAAY;AAAA,EAChD,EAAE,IAAI,IAAI,OAAO,aAAa,KAAK,YAAW;AAAA,EAC9C,EAAE,IAAI,IAAI,OAAO,OAAO,KAAK,MAAK;AAAA,EAClC,EAAE,IAAI,IAAI,OAAO,cAAc,KAAK,aAAY;AAAA,EAChD,EAAE,IAAI,IAAI,OAAO,SAAS,KAAK,QAAO;AAAA,EACtC,EAAE,IAAI,IAAI,OAAO,cAAc,KAAK,aAAY;AAClD,CAAC;AACDA,EAAE;AAAA,EACA,CAACX,GAAGC,OAAOD,EAAEC,EAAE,EAAE,IAAIA,GAAGD;AAAA,EACxB,CAAA;AACF;AACAW,EAAE,OAAO,CAACX,GAAGC,OAAOD,EAAEC,EAAE,GAAG,IAAIA,EAAE,IAAID,IAAI,CAAA,CAAE;AAC3CW,EAAE,IAAI,CAACX,OAAO;AAAA,EACZ,OAAOA,EAAE;AAAA,EACT,OAAOA,EAAE;AACX,EAAE;AACF,IAAIY,KAAI,OAAO,OAAO;AAAA,EACpB,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,GAAG;AAAA,EACH,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AACP,CAAC;AACD,OAAO;AAAA,EACLA;AACF,EAAE;AAAA,EACA,CAACZ,GAAG,CAACC,GAAGC,CAAC,OAAOF,EAAEE,CAAC,IAAI,OAAOD,CAAC,GAAGD;AAAA,EAClC,CAAA;AACF;AA8UA,SAASa,EAAEb,GAAGC,GAAGC,GAAG;AAClB,MAAIF,MAAMC;AACR,WAAO;AACT,MAAID,KAAK,QAAQC,KAAK;AACpB,WAAOD,MAAMC;AACf,QAAMa,IAAI,OAAOd;AACjB,MAAIc,MAAM,OAAOb,EAAG,QAAO;AAC3B,MAAIa,MAAM,UAAU;AAClB,IAAAZ,MAAMA,IAAoB,oBAAI;AAC9B,UAAMa,IAAIC,GAAEhB,GAAGC,CAAC;AAChB,QAAIC,EAAE,IAAIa,CAAC;AACT,aAAO;AACT,IAAAb,EAAE,IAAIa,CAAC;AACP,UAAME,IAAI,MAAM,QAAQjB,CAAC,GAAGkB,IAAI,MAAM,QAAQjB,CAAC;AAC/C,WAAOgB,KAAKC,IAAIC,GAAEnB,GAAGC,GAAGC,CAAC,IAAI,CAACe,KAAK,CAACC,IAAIE,GAAEpB,GAAGC,GAAGC,CAAC,IAAI;AAAA,EACvD;AACA,SAAO;AACT;AACA,SAASc,GAAEhB,GAAGC,GAAG;AACf,SAAO,GAAGoB,EAAErB,CAAC,CAAC,KAAKqB,EAAEpB,CAAC,CAAC;AACzB;AACA,IAAIqB,KAAI;AACR,MAAMC,IAAoB,oBAAI,QAAO;AACrC,SAASF,EAAErB,GAAG;AACZ,SAAOuB,EAAE,IAAIvB,CAAC,KAAKuB,EAAE,IAAIvB,GAAG,EAAEsB,EAAC,GAAGC,EAAE,IAAIvB,CAAC;AAC3C;AACA,SAASmB,GAAEnB,GAAGC,GAAGC,GAAG;AAClB,MAAIF,EAAE,WAAWC,EAAE,OAAQ,QAAO;AAClC,QAAMa,IAAI,IAAI,MAAMb,EAAE,MAAM,EAAE,KAAK,EAAE;AACrC,EAAAA,EAAG,UAAS,IAAI,GAAG,IAAID,EAAE,QAAQ,KAAK;AACpC,UAAMe,IAAIf,EAAE,CAAC;AACb,aAAS,IAAI,GAAG,IAAIC,EAAE,QAAQ;AAC5B,UAAI,CAACa,EAAE,CAAC,KAAKD,EAAEE,GAAGd,EAAE,CAAC,GAAGC,CAAC,GAAG;AAC1B,QAAAY,EAAE,CAAC,IAAI;AACP,iBAASb;AAAA,MACX;AACF,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,SAASmB,GAAEpB,GAAGC,GAAGC,GAAG;AAClB,QAAMY,IAAI,OAAO,KAAKd,CAAC,EAAE,QAAQ,IAAI,OAAO,KAAKC,CAAC,EAAE,KAAI;AACxD,MAAIa,EAAE,WAAW,EAAE,OAAQ,QAAO;AAClC,WAASC,IAAI,GAAGA,IAAID,EAAE,QAAQC;AAC5B,QAAID,EAAEC,CAAC,MAAM,EAAEA,CAAC,EAAG,QAAO;AAC5B,aAAWA,KAAKD,GAAG;AACjB,UAAM,IAAId,EAAEe,CAAC,GAAGG,IAAIjB,EAAEc,CAAC;AACvB,QAAI,CAACF,EAAE,GAAGK,GAAGhB,CAAC;AACZ,aAAO;AAAA,EACX;AACA,SAAO;AACT;ACxvBA,MAAMP,IAAI,CAACuB,MAAMA,EAAE,MAAM;AAAA,EACvB,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO;AAAA,IACnB,GAAG;AAAA,IACH,aAAaG,EAAE,EAAE,MAAMH,EAAE,UAAU,CAAC;AAAA,EACxC,EAAI;AACJ;AAOA,MAAMrB,GAAE;AAAA,EACN,YAAY,GAAG,GAAG;AAChB,QAAI,KAAK,KAAK,GAAG,KAAK,WAAW,GAAG,KAAK,mBAAmB,CAAA,GAAI,KAAK,uBAAuB,MAAM,KAAK,2BAA2B,MAAM,MAAM,KAAK,YAAY;AAC7J,YAAM,IAAI;AAAA,QACR,uBAAuB,CAAC,QAAQ,KAAK,YAAY,EAAE;AAAA,MAC3D;AACI,SAAK,YAAY,KAAK,SAAS,YAAY,KAAK,cAAc,KAAK,UAAU,eAAe,KAAK,EAAE,GAAG,KAAK,uBAAuB,KAAK,YAAY,iBAAiB,CAAC,GAAG,GAAG2B,MAAM;AAC/K,WAAK,eAAeA,GAAG,CAAC;AAAA,IAC1B,CAAC,GAAG,KAAK,2BAA2B,KAAK,UAAU,UAAU,CAAC,GAAG,GAAGA,MAAM;AACxE,WAAK,mBAAmBA,GAAG,CAAC;AAAA,IAC9B,CAAC,GAAG,KAAK,eAAe,IAAI,QAAQ,CAAC,MAAM;AACzC,WAAK,eAAe;AAAA,IACtB,CAAC,GAAG,KAAK,aAAY;AAAA,EACvB;AAAA,EACA,WAAW;AACT,QAAI,CAAC,KAAK,aAAa;AACrB,YAAM,IAAI,KAAK,gBAAe;AAC9B,WAAK,cAAc,OAAO,OAAO,CAAC;AAAA,IACpC;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AACV,WAAO,KAAK,YAAY,SAAQ;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,YAAY;AACd,WAAO,KAAK,UAAU,SAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,WAAO,KAAK,YAAY,SAAQ;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACb,WAAO,KAAK,UAAU,SAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,GAAG;AACpB,WAAO,KAAK,UAAU,eAAe,CAAC;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB,GAAG;AACtB,WAAO,KAAK,UAAU,SAAS,CAAC;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS,GAAG;AACV,WAAO,KAAK,YAAY,SAAS,CAAC;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkB,GAAG,IAAI,KAAK;AAC5B,UAAM,IAAI,KAAK,OAAO,IAAI,KAAK,iBAAiB,EAAE,IAAI,KAAK;AAC3D,WAAO,IAAI,KAAK,KAAK,KAAK,iBAAiB,EAAE,IAAI,IAAI,GAAG,KAAK,SAAS,CAAC,GAAG,MAAM;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU,GAAG;AACX,WAAO,KAAK,YAAY,iBAAiB,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB,GAAG;AACtB,WAAO,KAAK,UAAU,UAAU,CAAC;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,GAAG,GAAG;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB,GAAG,GAAG;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACR,SAAK,yBAAyB,KAAK,qBAAoB,GAAI,KAAK,uBAAuB,OAAO,KAAK,6BAA6B,KAAK,yBAAwB,GAAI,KAAK,2BAA2B;AAAA,EACnM;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY;AACV,SAAK,aAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa;AACX,SAAK,eAAe,IAAI,QAAQ,CAAC,MAAM;AACrC,WAAK,eAAe;AAAA,IACtB,CAAC;AAAA,EACH;AACF;AACA,MAAMC,GAAE;AAAA,EACN,YAAY,GAAG,GAAG;AAChB,SAAK,UAAU,GAAG,KAAK,UAAU,GAAG,KAAK,UAAU,GAAG,KAAK,SAAS,CAAC,MAAM;AACzE,WAAK,QAAQ,SAAS,aAAa,KAAK,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC;AAAA,IACvE;AAAA,EACF;AAAA,EACA,SAAS,GAAG;AACV,SAAK,aAAa,OAAO,aAAa,KAAK,SAAS,GAAG,KAAK,YAAY,OAAO,WAAW,MAAM;AAC9F,WAAK,QAAQ,CAAC,GAAG,KAAK,YAAY;AAAA,IACpC,GAAG,KAAK,QAAQ,IAAI;AAAA,EACtB;AAAA,EACA,SAAS,GAAG;AACV,QAAI,KAAK,QAAQ,SAAS,WAAY;AACtC,UAAM,IAAI,KAAK,IAAG,GAAI,IAAI,KAAK,QAAQ,gBAAgB;AACvD,QAAI,KAAK,WAAW,KAAK,QAAQ,SAAS,MAAM,sBAAsB,KAAK,QAAQ,CAAC,GAAG,KAAK,UAAU,IAAI,KAAK,aAAa,OAAO,aAAa,KAAK,SAAS,GAAG,KAAK,YAAY,OAAO;AAAA,MACvL,MAAM;AACJ,aAAK,QAAQ,CAAC,GAAG,KAAK,UAAU,KAAK,IAAG,GAAI,KAAK,YAAY;AAAA,MAC/D;AAAA,MACA,KAAK,QAAQ,QAAQ,IAAI,KAAK;AAAA,IACpC;AAAA,EACE;AAAA,EACA,UAAU;AACR,SAAK,aAAa,OAAO,aAAa,KAAK,SAAS;AAAA,EACtD;AACF;AAUA,SAASC,EAAER,GAAG,IAAIS,GAAG;AACnB,QAAM,IAAoB,oBAAI,IAAG,GAAI,IAAoB,oBAAI,IAAG;AAChE,MAAI,IAAIT;AACR,QAAMM,IAAI,CAACV,MAAM,EAAE,QAAQ,CAACC,MAAMA,EAAED,CAAC,CAAC,GAAGc,IAAI,CAACd,GAAGC,MAAM;AACrD,QAAIE,IAAIH,GAAGS,IAAI,MAAM;AAAA,IACrB;AACA,QAAIR,GAAG;AACL,YAAM,IAAI,IAAIU,GAAEX,GAAGC,CAAC;AACpB,MAAAE,IAAI,EAAE,QAAQM,IAAI,MAAM,EAAE,QAAO,GAAI,EAAE,IAAIT,GAAG,EAAE,SAASG,GAAG,SAASM,GAAG;AAAA,IAC1E;AACA,WAAO,MAAM,UAAUN,EAAE,CAAC,GAAG,EAAE,IAAIA,CAAC,GAAG,MAAM;AAC3C,QAAE,OAAOA,CAAC,GAAGM,EAAC,GAAI,EAAE,OAAOT,CAAC;AAAA,IAC9B;AAAA,EACF;AACA,SAAO;AAAA;AAAA,IAEL,IAAI,QAAQ;AACV,aAAO;AAAA,IACT;AAAA,IACA,KAAKA,IAAI,QAAQ;AACf,OAAC,MAAM,UAAU,CAAC,EAAE,GAAGA,CAAC,OAAO,IAAIA,GAAGU,EAAEV,CAAC;AAAA,IAC3C;AAAA,IACA,IAAIc;AAAA,IACJ,IAAId,GAAG;AACL,YAAMC,IAAI,EAAE,IAAID,CAAC;AACjB,MAAAC,KAAK,EAAE,OAAOA,EAAE,OAAO,GAAGA,EAAE,QAAO,GAAI,EAAE,OAAOD,CAAC,KAAK,EAAE,OAAOA,CAAC;AAAA,IAClE;AAAA,IACA,QAAQ;AACN,QAAE,MAAK,GAAI,EAAE,QAAQ,CAACA,MAAMA,EAAE,QAAO,CAAE,GAAG,EAAE,MAAK;AAAA,IACnD;AAAA;AAAA,IAEA,OAAOA,GAAGC,IAAIY,GAAG;AACf,aAAO,CAACV,GAAGM,MAAM;AACf,YAAI;AACJ,YAAI,MAAM,QAAQ;AAChB,gBAAMM,IAAIf,EAAE,CAAC;AACb,cAAIe,GAAGZ,EAAEY,CAAC;AAAA,QACZ;AACA,eAAOD;AAAA,UACL,CAACC,MAAM;AACL,kBAAMC,IAAIhB,EAAEe,CAAC;AACb,aAAC,MAAM,UAAU,CAACd,EAAE,GAAGe,CAAC,OAAO,IAAIA,GAAGb,EAAEa,CAAC;AAAA,UAC3C;AAAA,UACAP;AAAA,QACV;AAAA,MACM;AAAA,IACF;AAAA,EACJ;AACA;AC7NA,IAAIQ,IAA4B,kBAACC,OAC/BA,EAAUA,EAAU,UAAa,CAAC,IAAI,WACtCA,EAAUA,EAAU,WAAc,CAAC,IAAI,YACvCA,EAAUA,EAAU,YAAe,CAAC,IAAI,aACxCA,EAAUA,EAAU,YAAe,CAAC,IAAI,aACjCA,IACND,KAAY,CAAA,CAAE;AA4BjB,SAASE,EAAKC,GAAM;AAClB,QAAM,EAAE,OAAAC,GAAO,QAAAC,EAAM,IAAKF;AAC1B,SAAO;AAAA,IACL,OAAOE;AAAA,IACP,QAAQD;AAAA,EACZ;AACA;AA2BA,SAASE,GAAeC,GAAeC,GAAUC,GAAU;AACzD,MAAIxB,IAAIuB,EAAS,GACb3C,IAAI2C,EAAS;AACjB,UAAQC,GAAQ;AAAA,IACd,KAAK;AACH,MAAAxB,IAAIuB,EAAS,GACb3C,IAAI2C,EAAS;AACb;AAAA,IACF,KAAK;AACH,MAAAvB,IAAIsB,EAAc,SAASC,EAAS,GACpC3C,IAAI2C,EAAS;AACb;AAAA,IACF,KAAK;AACH,MAAAvB,IAAIsB,EAAc,QAAQC,EAAS,GACnC3C,IAAI0C,EAAc,SAASC,EAAS;AACpC;AAAA,IACF,KAAK;AACH,MAAAvB,IAAIuB,EAAS,GACb3C,IAAI0C,EAAc,QAAQC,EAAS;AACnC;AAAA,EACN;AACE,SAAO;AAAA,IACL,GAAAvB;AAAA,IACA,GAAApB;AAAA,EACJ;AACA;AACA,SAAS6C,EAAcF,GAAUG,GAAa;AAC5C,SAAO;AAAA,IACL,GAAGH,EAAS,IAAIG;AAAA,IAChB,GAAGH,EAAS,IAAIG;AAAA,EACpB;AACA;AACA,SAASC,GAAkBL,GAAeC,GAAUC,GAAUE,GAAa;AACzE,SAAOD,EAAcJ,GAAeC,GAAeC,GAAUC,CAAQ,GAAGE,CAAW;AACrF;AAOA,SAASE,GAAWN,GAAeO,GAAML,GAAU;AACjD,MAAIxB,IAAI6B,EAAK,OAAO,GAChBjD,IAAIiD,EAAK,OAAO,GAChBX,IAAOW,EAAK;AAChB,UAAQL,GAAQ;AAAA,IACd,KAAK;AACH;AAAA,IACF,KAAK;AACH,MAAAxB,IAAIsB,EAAc,SAASO,EAAK,OAAO,IAAIA,EAAK,KAAK,QACrDjD,IAAIiD,EAAK,OAAO,GAChBX,IAAOD,EAAKY,EAAK,IAAI;AACrB;AAAA,IACF,KAAK;AACH,MAAA7B,IAAIsB,EAAc,QAAQO,EAAK,OAAO,IAAIA,EAAK,KAAK,OACpDjD,IAAI0C,EAAc,SAASO,EAAK,OAAO,IAAIA,EAAK,KAAK;AACrD;AAAA,IACF,KAAK;AACH,MAAA7B,IAAI6B,EAAK,OAAO,GAChBjD,IAAI0C,EAAc,QAAQO,EAAK,OAAO,IAAIA,EAAK,KAAK,OACpDX,IAAOD,EAAKY,EAAK,IAAI;AACrB;AAAA,EACN;AACE,SAAO;AAAA,IACL,QAAQ;AAAA,MACN,GAAA7B;AAAA,MACA,GAAApB;AAAA,IACN;AAAA,IACI,MAAM;AAAA,MACJ,OAAOsC,EAAK;AAAA,MACZ,QAAQA,EAAK;AAAA,IACnB;AAAA,EACA;AACA;AACA,SAASY,GAAUD,GAAMH,GAAa;AACpC,SAAO;AAAA,IACL,QAAQ;AAAA,MACN,GAAGG,EAAK,OAAO,IAAIH;AAAA,MACnB,GAAGG,EAAK,OAAO,IAAIH;AAAA,IACzB;AAAA,IACI,MAAM;AAAA,MACJ,OAAOG,EAAK,KAAK,QAAQH;AAAA,MACzB,QAAQG,EAAK,KAAK,SAASH;AAAA,IACjC;AAAA,EACA;AACA;AACA,SAASK,GAAcT,GAAeO,GAAML,GAAUE,GAAa;AACjE,SAAOI,GAAUF,GAAWN,GAAeO,GAAML,CAAQ,GAAGE,CAAW;AACzE;AAujBA,IAAIM,KAAsB,KACtBC,KAAoB,KACpBC,KAAgB,KAChBC,KAAiB,UACjBC,KAAsB,KACtBC,KAAsB,KACtBC,KAAyB,OAAO,OAAO;AAAA,EACzCN;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AACF,CAAC;AAC0B,IAAI,OAAO,IAAIC,GAAuB,KAAK,EAAE,CAAC,KAAK,GAAG;AAiCjF,IAAIC,IAAmB,OAAO,OAAO;AAAA,EACnC,EAAE,IAAI,GAAgB,OAAO,UAAU,KAAK,SAAQ;AAAA,EACpD,EAAE,IAAI,GAAkB,OAAO,YAAY,KAAK,WAAU;AAAA,EAC1D,EAAE,IAAI,GAAgB,OAAO,UAAU,KAAK,SAAQ;AAAA,EACpD,EAAE,IAAI,GAAiB,OAAO,WAAW,KAAK,UAAS;AAAA,EACvD,EAAE,IAAI,GAAgB,OAAO,UAAU,KAAK,SAAQ;AAAA,EACpD,EAAE,IAAI,GAAiB,OAAO,WAAW,KAAK,UAAS;AAAA,EACvD,EAAE,IAAI,GAAoB,OAAO,eAAe,KAAK,cAAa;AAAA,EAClE,EAAE,IAAI,GAAmB,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/D,EAAE,IAAI,GAAmB,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/D,EAAE,IAAI,GAAmB,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/D,EAAE,IAAI,IAAqB,OAAO,cAAc,KAAK,aAAY;AAAA,EACjE,EAAE,IAAI,IAAoB,OAAO,aAAa,KAAK,YAAW;AAAA,EAC9D,EAAE,IAAI,IAAc,OAAO,OAAO,KAAK,MAAK;AAAA,EAC5C,EAAE,IAAI,IAAqB,OAAO,cAAc,KAAK,aAAY;AAAA,EACjE,EAAE,IAAI,IAAgB,OAAO,SAAS,KAAK,QAAO;AAAA,EAClD,EAAE,IAAI,IAAqB,OAAO,cAAc,KAAK,aAAY;AACnE,CAAC;AACgBA,EAAiB;AAAA,EAChC,CAAC5B,GAAG6B,OACF7B,EAAE6B,EAAK,EAAE,IAAIA,GACN7B;AAAA,EAET,CAAA;AACF;AACgB4B,EAAiB,OAAO,CAAC5B,GAAG6B,OAC1C7B,EAAE6B,EAAK,GAAG,IAAIA,EAAK,IACZ7B,IACN,CAAA,CAAE;AAkBwB4B,EAAiB,IAAI,CAACC,OAAU;AAAA,EAC3D,OAAOA,EAAK;AAAA,EACZ,OAAOA,EAAK;AACd,EAAE;AAyKF,IAAIC,KAAwB,OAAO,OAAO;AAAA,EACvC,GAAoB;AAAA,EACpB,GAAiB;AAAA,EACjB,GAAgB;AAAA,EAChB,GAAkB;AAAA,EAClB,IAAqB;AAAA,EACrB,IAAmB;AAAA,EACnB,IAAqB;AAAA,EACrB,KAAmB;AAAA,EACnB,KAA0B;AAC7B,CAAC;AAC4B,OAAO;AAAA,EAClCA;AACF,EAAE;AAAA,EACA,CAACC,GAAK,CAACC,GAAKC,CAAI,OACdF,EAAIE,CAAI,IAAI,OAAOD,CAAG,GACfD;AAAA,EAET,CAAA;AACF;ACt9BO,IAAKG,sBAAAA,OACVA,EAAA,WAAW,YACXA,EAAA,aAAa,cAFHA,IAAAA,KAAA,CAAA,CAAA;ACNL,MAAeC,EAAmB;AAAA,EAKvC,YAAYC,GAA8B;AACxC,SAAK,UAAUA,EAAO,WAAW,IACjC,KAAK,cAAcA,EAAO,eAAe,IACzC,KAAK,aAAaA,EAAO,cAAc;AAAA,EACzC;AAAA,EAOU,gBACRC,GACAC,GACAC,GACgC;AAChC,UAAMC,IAAe,KAAK,gBAAgBH,CAAQ,GAC5CI,IAAa,KAAK,cAAcJ,CAAQ,GACxCK,IAAgBF,GAChBG,IAAcH,IAAeC;AAEnC,QAAIG,IAAa;AACjB,WACEA,IAAaN,EAAa,WACzBA,EAAaM,CAAU,EAAE,SAASN,EAAaM,CAAU,EAAE,UAAUL,KAASG;AAE/E,MAAAE;AAGF,QAAIC,IAAWD;AACf,WAAOC,IAAWP,EAAa,UAAUA,EAAaO,CAAQ,EAAE,SAASN,KAASI;AAChF,MAAAE;AAGF,WAAO;AAAA,MACL,OAAO,KAAK,IAAI,GAAGD,IAAa,KAAK,UAAU;AAAA,MAC/C,KAAK,KAAK,IAAIN,EAAa,SAAS,GAAGO,IAAW,KAAK,aAAa,CAAC;AAAA,IAAA;AAAA,EAEzE;AAAA,EAEA,aACER,GACAC,GACAC,GACe;AACf,UAAMO,IAAQ,KAAK,gBAAgBT,GAAUC,GAAcC,CAAK,GAC1DQ,IAAeT,EAAa,MAAMQ,EAAM,OAAOA,EAAM,MAAM,CAAC,GAC5DE,IAAwB,KAAK,wBAAwBD,GAAcV,GAAUE,CAAK,GAClFU,IAAeD,EAAsB,IAAI,CAAChD,MAAMA,EAAE,UAAU,GAC5DkD,IAAsBZ,EACzB,MAAMQ,EAAM,OAAOA,EAAM,MAAM,CAAC,EAChC,QAAQ,CAACK,MAASA,EAAK,KAAK,GACzBC,IAAc,KAAK,qBAAqBJ,CAAqB,GAC7DK,IAAQf,EAAaQ,EAAM,KAAK,GAChCQ,IAAOhB,EAAaQ,EAAM,GAAG,GAC7BS,IAAeF,IAAQA,EAAM,SAASd,IAAQ,GAC9CiB,IAAaF,KACdhB,EAAaA,EAAa,SAAS,CAAC,EAAE;AAAA,IACrCA,EAAaA,EAAa,SAAS,CAAC,EAAE,UACtCC;AAAA,KACDe,EAAK,SAASA,EAAK,UAAUf,IAC9B;AAEJ,WAAO;AAAA,MACL,aAAAa;AAAA,MACA,cAAAH;AAAA,MACA,uBAAAD;AAAA,MACA,qBAAAE;AAAA,MACA,cAAc,EAAE,GAAGb,EAAS,YAAY,GAAGA,EAAS,UAAA;AAAA,MACpD,cAAAkB;AAAA,MACA,YAAAC;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEU,wBACRlB,GACAD,GACAE,GACwC;AACxC,UAAMkB,IAA4D,CAAA;AAElE,WAAAnB,EAAa,QAAQ,CAACa,MAAS;AAC7B,MAAAA,EAAK,YAAY,QAAQ,CAACO,MAAS;AACjC,cAAMC,IAAQR,EAAK,IAAIZ,GACjBqB,IAAQT,EAAK,IAAIZ,GACjBsB,IAAQF,IAAQD,EAAK,IAAInB,GACzBuB,IAAQF,IAAQF,EAAK,IAAInB,GACzBwB,IAAYL,EAAK,eAAenB,GAChCyB,IAAaN,EAAK,gBAAgBnB,GAElC0B,IAAe5B,EAAS,YACxB6B,IAAc7B,EAAS,WACvB8B,IAAgBF,IAAe5B,EAAS,aACxC+B,IAAiBF,IAAc7B,EAAS,cAExCgC,IAAmB,KAAK,IAAIR,GAAOI,CAAY,GAC/CK,IAAkB,KAAK,IAAIR,GAAOI,CAAW,GAC7CK,IAAoB,KAAK,IAAIV,IAAQE,GAAWI,CAAa,GAC7DK,IAAqB,KAAK,IAAIV,IAAQE,GAAYI,CAAc;AAEtE,YAAIC,IAAmBE,KAAqBD,IAAkBE,GAAoB;AAChF,gBAAMC,IAAeF,IAAoBF,GACnCK,IAAgBF,IAAqBF,GACrCK,IAAYZ,IAAYC,GACxBY,IAAcH,IAAeC;AAEnC,UAAAjB,EAAkB,KAAK;AAAA,YACrB,YAAYC,EAAK;AAAA,YACjB,WAAWW,IAAmBJ;AAAA,YAC9B,WAAWK,IAAkBJ;AAAA,YAC7B,mBAAoBU,IAAcD,IAAa;AAAA,YAC/C,UAAU;AAAA,cACR,QAAQN,IAAmBR,KAAStB;AAAA,cACpC,QAAQ+B,IAAkBR,KAASvB;AAAA,cACnC,cAAckC,IAAelC;AAAA,cAC7B,eAAemC,IAAgBnC;AAAA,cAC/B,OAAO;AAAA,YAAA;AAAA,YAET,QAAQ;AAAA,cACN,OAAO8B,IAAmBR;AAAA,cAC1B,OAAOS,IAAkBR;AAAA,cACzB,cAAAW;AAAA,cACA,eAAAC;AAAA,cACA,OAAAnC;AAAA,YAAA;AAAA,UACF,CACD;AAAA,QACH;AAAA,MACF,CAAC;AAAA,IACH,CAAC,GAEMkB;AAAA,EACT;AAAA,EAEU,qBACRA,GACQ;AACR,QAAIA,EAAkB,WAAW,EAAG,QAAO;AAE3C,UAAMoB,IAAgB,KAAK,IAAI,GAAGpB,EAAkB,IAAI,CAACzD,MAAMA,EAAE,iBAAiB,CAAC,GAC7E8E,IAAmBrB,EAAkB,OAAO,CAACzD,MAAMA,EAAE,sBAAsB6E,CAAa;AAE9F,WAAOC,EAAiB,WAAW,IAC/BA,EAAiB,CAAC,EAAE,aACpBA,EAAiB,KAAK,CAACxF,GAAGQ,MAAMR,EAAE,aAAaQ,EAAE,UAAU,EAAE,CAAC,EAAE;AAAA,EACtE;AAAA,EAEQ,uBAAuBiF,GAAoBzC,GAA0C;AAE3F,UAAMa,IAAOb,EAAa,KAAK,CAACa,MAASA,EAAK,YAAY,SAAS4B,CAAU,CAAC;AAC9E,QAAI,CAAC5B,EAAM,QAAO;AAGlB,UAAM6B,IAAa7B,EAAK,YAAY,KAAK,CAAC8B,MAAWA,EAAO,eAAeF,CAAU;AACrF,WAAKC,IAEE;AAAA,MACL,QAAQ;AAAA,QACN,GAAG7B,EAAK,IAAI6B,EAAW;AAAA,QACvB,GAAG7B,EAAK,IAAI6B,EAAW;AAAA,MAAA;AAAA,MAEzB,MAAM;AAAA,QACJ,OAAOA,EAAW;AAAA,QAClB,QAAQA,EAAW;AAAA,MAAA;AAAA,IACrB,IAVsB;AAAA,EAY1B;AAAA,EAEA,yBACED,GACAzC,GACAC,GACA1B,GACAqE,GACiB;AAEjB,UAAMC,IAAW,KAAK,uBAAuBJ,GAAYzC,CAAY;AACrE,QAAI,CAAC6C,EAAU,QAAO;AAEtB,UAAMC,IAAqBtE,EAAcqE,EAAS,QAAQ5C,CAAK;AAG/D,QAAI2C,GAAiB;AACnB,YAAMG,IAAcrE;AAAA,QAClB;AAAA,UACE,OAAOmE,EAAS,KAAK;AAAA,UACrB,QAAQA,EAAS,KAAK;AAAA,QAAA;AAAA,QAExB;AAAA,UACE,GAAGD,EAAgB;AAAA,UACnB,GAAGA,EAAgB;AAAA,QAAA;AAAA,QAErBrE;AAAA,QACA0B;AAAA,MAAA;AAGF,aAAO;AAAA,QACL,GAAG6C,EAAmB,IAAIC,EAAY,IAAI,KAAK;AAAA,QAC/C,GAAGD,EAAmB,IAAIC,EAAY,IAAI,KAAK;AAAA,MAAA;AAAA,IAEnD;AAEA,WAAO;AAAA,MACL,GAAGD,EAAmB,IAAI,KAAK;AAAA,MAC/B,GAAGA,EAAmB,IAAI,KAAK;AAAA,IAAA;AAAA,EAEnC;AAAA,EAEA,uBACEL,GACAzC,GACAC,GACA1B,GACAK,GACa;AACb,UAAMiE,IAAW,KAAK,uBAAuBJ,GAAYzC,CAAY;AACrE,QAAI,CAAC6C,EAAU,QAAO;AAEtB,UAAMC,IAAqBtE,EAAcqE,EAAS,QAAQ5C,CAAK,GAEzD8C,IAAcjE;AAAA,MAClB;AAAA,QACE,OAAO+D,EAAS,KAAK;AAAA,QACrB,QAAQA,EAAS,KAAK;AAAA,MAAA;AAAA,MAExBjE;AAAA,MACAL;AAAA,MACA0B;AAAA,IAAA;AAGF,WAAO;AAAA,MACL,QAAQ;AAAA,QACN,GAAG6C,EAAmB,IAAIC,EAAY,OAAO;AAAA,QAC7C,GAAGD,EAAmB,IAAIC,EAAY,OAAO;AAAA,MAAA;AAAA,MAE/C,MAAMA,EAAY;AAAA,IAAA;AAAA,EAEtB;AACF;AC/PO,MAAMC,UAA+BnD,EAAmB;AAAA,EAC7D,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AAAA,EACd;AAAA,EAEA,mBAAmBmD,GAAgE;AACjF,QAAIC,IAAU;AACd,WAAOD,EAAc,IAAI,CAACE,GAAeC,MAAU;AACjD,UAAI7B,IAAQ;AACZ,YAAM8B,IAA4BF,EAAc,IAAI,CAAC/B,MAAS;AAC5D,cAAMuB,IAAqB;AAAA,UACzB,YAAYvB,EAAK,QAAQ;AAAA,UACzB,WAAWA,EAAK;AAAA,UAChB,GAAGG;AAAA,UACH,GAAG;AAAA,UACH,OAAOH,EAAK,KAAK;AAAA,UACjB,QAAQA,EAAK,KAAK;AAAA,UAClB,cAAcA,EAAK,YAAY;AAAA,UAC/B,eAAeA,EAAK,YAAY;AAAA,QAAA;AAElC,eAAAG,KAASH,EAAK,YAAY,QAAQ,KAAK,SAChCuB;AAAA,MACT,CAAC,GACKzE,IAAQiF,EAAc;AAAA,QAC1B,CAACG,GAAKlC,GAAMrF,MACVuH,IAAMlC,EAAK,YAAY,SAASrF,IAAIoH,EAAc,SAAS,IAAI,KAAK,UAAU;AAAA,QAChF;AAAA,MAAA,GAEIhF,IAAS,KAAK,IAAI,GAAGgF,EAAc,IAAI,CAACxF,MAAMA,EAAE,YAAY,MAAM,CAAC,GACnEkD,IAAoB;AAAA,QACxB,IAAI,QAAQuC,CAAK;AAAA,QACjB,GAAG;AAAA,QACH,GAAGF;AAAA,QACH,QAAQA;AAAA,QACR,OAAAhF;AAAA,QACA,QAAAC;AAAA,QACA,aAAAkF;AAAA,QACA,aAAaF,EAAc,IAAI,CAACxF,MAAMA,EAAE,QAAQ,CAAC;AAAA,QACjD,OAAAyF;AAAA,MAAA;AAEF,aAAAF,KAAW/E,IAAS,KAAK,SAClB0C;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EAEA,oBAAoBb,GAAgE;AAClF,QAAIA,EAAa,WAAW,EAAG,QAAO,EAAE,OAAO,GAAG,QAAQ,EAAA;AAC1D,UAAMuD,IAAW,KAAK,IAAI,GAAGvD,EAAa,IAAI,CAACa,MAASA,EAAK,KAAK,CAAC,GAC7D2C,IACJxD,EAAaA,EAAa,SAAS,CAAC,EAAE,IAAIA,EAAaA,EAAa,SAAS,CAAC,EAAE;AAClF,WAAO;AAAA,MACL,OAAOuD;AAAA,MACP,QAAQC;AAAA,IAAA;AAAA,EAEZ;AAAA,EAEU,gBAAgBzD,GAAmC;AAC3D,WAAOA,EAAS;AAAA,EAClB;AAAA,EAEU,cAAcA,GAAmC;AACzD,WAAOA,EAAS;AAAA,EAClB;AACF;AChEO,MAAM0D,UAAiC5D,EAAmB;AAAA,EAC/D,YAAYC,GAA8B;AACxC,UAAMA,CAAM;AAAA,EACd;AAAA,EAEA,mBAAmBmD,GAAgE;AACjF,QAAIS,IAAU;AACd,WAAOT,EAAc,IAAI,CAACE,GAAeC,MAAU;AACjD,UAAI7B,IAAQ;AACZ,YAAM8B,IAA4BF,EAAc,IAAI,CAAC/B,MAAS;AAC5D,cAAMuB,IAAqB;AAAA,UACzB,YAAYvB,EAAK,QAAQ;AAAA,UACzB,WAAWA,EAAK;AAAA,UAChB,GAAGG;AAAA,UACH,GAAG;AAAA,UACH,OAAOH,EAAK,KAAK;AAAA,UACjB,QAAQA,EAAK,KAAK;AAAA,UAClB,cAAcA,EAAK,YAAY;AAAA,UAC/B,eAAeA,EAAK,YAAY;AAAA,QAAA;AAElC,eAAAG,KAASH,EAAK,YAAY,QAAQ,KAAK,SAChCuB;AAAA,MACT,CAAC,GACKzE,IAAQiF,EAAc;AAAA,QAC1B,CAACG,GAAKlC,GAAMrF,MACVuH,IAAMlC,EAAK,YAAY,SAASrF,IAAIoH,EAAc,SAAS,IAAI,KAAK,UAAU;AAAA,QAChF;AAAA,MAAA,GAEIhF,IAAS,KAAK,IAAI,GAAGgF,EAAc,IAAI,CAACxF,MAAMA,EAAE,YAAY,MAAM,CAAC,GACnEkD,IAAoB;AAAA,QACxB,IAAI,QAAQuC,CAAK;AAAA,QACjB,GAAGM;AAAA,QACH,GAAG;AAAA,QACH,QAAQA;AAAA,QACR,OAAAxF;AAAA,QACA,QAAAC;AAAA,QACA,aAAAkF;AAAA,QACA,aAAaF,EAAc,IAAI,CAACxF,MAAMA,EAAE,QAAQ,CAAC;AAAA,QACjD,OAAAyF;AAAA,MAAA;AAEF,aAAAM,KAAWxF,IAAQ,KAAK,SACjB2C;AAAA,IACT,CAAC;AAAA,EACH;AAAA,EAEA,oBAAoBb,GAAgE;AAClF,QAAIA,EAAa,WAAW,EAAG,QAAO,EAAE,OAAO,GAAG,QAAQ,EAAA;AAC1D,UAAM2D,IACJ3D,EAAaA,EAAa,SAAS,CAAC,EAAE,IAAIA,EAAaA,EAAa,SAAS,CAAC,EAAE,OAC5E4D,IAAY,KAAK,IAAI,GAAG5D,EAAa,IAAI,CAACa,MAASA,EAAK,MAAM,CAAC;AACrE,WAAO;AAAA,MACL,OAAO8C;AAAA,MACP,QAAQC;AAAA,IAAA;AAAA,EAEZ;AAAA,EAEU,gBAAgB7D,GAAmC;AAC3D,WAAOA,EAAS;AAAA,EAClB;AAAA,EAEU,cAAcA,GAAmC;AACzD,WAAOA,EAAS;AAAA,EAClB;AACF;ACjEO,MAAM8D,KAAsB,uBACtBC,KAA8B,+BAC9BC,KAAqB;AAsB3B,SAASC,EAAkBC,GAAwD;AACxF,SAAO,EAAE,MAAMJ,IAAqB,SAAAI,EAAA;AACtC;AASO,SAASC,GAAiBD,GAAyC;AACxE,SAAO,EAAE,MAAMF,IAAoB,SAAAE,EAAA;AACrC;ACtCO,MAAME,KAAoB,CAACC,GAAoBnE,OAC7C;AAAA,EACL,cAAcmE,EAAM;AAAA,EACpB,YAAYA,EAAM;AAAA,EAClB,YAAYA,EAAM,iBAAiB,QAAQnE;AAAA,EAC3C,aAAamE,EAAM,iBAAiB,SAASnE;AAAA,EAC7C,SAASmE,EAAM,UAAUnE;AAAA,EACzB,UAAUmE,EAAM;AAAA,EAChB,OAAOA,EAAM,oBAAoB,IAAI,CAACC,OAC7B;AAAA,IACL,GAAGD,EAAM,aAAaC,CAAG;AAAA,IACzB,aAAaD,EAAM,aAAaC,CAAG,EAAE,YAAY,IAAI,CAAC1B,OAC7C;AAAA,MACL,GAAGA;AAAA,MACH,cAAcA,EAAO,eAAe1C;AAAA,MACpC,eAAe0C,EAAO,gBAAgB1C;AAAA,MACtC,OAAO0C,EAAO,QAAQ1C;AAAA,MACtB,QAAQ0C,EAAO,SAAS1C;AAAA,IAAA,EAE3B;AAAA,EAAA,EAEJ;AAAA,ICwBQqE,IAAN,MAAMA,UAAqBC,GAKhC;AAAA,EAkBA,YACkBC,GAChBC,GACQ3E,GACR;AT8DC,QAAA4E,GAAAC,GAAAC,GAAAC;AS7DD,UAAML,GAAIC,CAAQ,GAJF,KAAA,KAAAD,GAER,KAAA,SAAA1E,GAhBV,KAAQ,eAAuB,GAC/B,KAAQ,kBAA4BhC,EAAS,SAE7C,KAAQ,cAAsB,GAC9B,KAAQ,cAAuB,IAE/B,KAAiB,UAAUgH,EAAA,GAC3B,KAAiB,UAAUA,EAAA,GAC3B,KAAiB,SAASA,EAAA,GAC1B,KAAiB,kBAAkBA,EAAA,GACnC,KAAiB,cAAcA,EAAA,GAC/B,KAAiB,eAAeA,EAAA,GAS9B,KAAK,WAAW,KAAK,SAAS,UAA0B,UAAU,EAAG,SAAA,GAErE,KAAK,iBAAiB;AAAA,MACpB,WAASJ,IAAA,KAAK,WAAL,gBAAAA,EAAa,YAAW;AAAA,MACjC,aAAa,KAAK,SAAS,eAAA;AAAA,MAC3B,cAAYC,IAAA,KAAK,WAAL,gBAAAA,EAAa,eAAc;AAAA,IAAA,GAGzC,KAAK,aACHC,IAAA,KAAK,WAAL,gBAAAA,EAAa,cAAahF,EAAe,aACrC,IAAI6D,EAAyB,KAAK,cAAc,IAChD,IAAIT,EAAuB,KAAK,cAAc,GAEpD,KAAK,eAAc6B,IAAA,KAAK,WAAL,gBAAAA,EAAa,aAChC,KAAK,eAAe,KAAK,UAAU,KAAK,OACxC,KAAK,kBAAkB,KAAK,UAAU,KAAK,UAE3C,KAAK,SAAS,iBAAiB,CAACE,MAAO,KAAK,cAAc,KAAK,eAAeA,CAAE,CAAC,GAAG;AAAA,MAClF,MAAM;AAAA,MACN,MAAM;AAAA,IAAA,CACP,GACD,KAAK,UAAU,SAASC,GAAc,CAACC,GAASb,MAAU;AACxD,YAAMc,IAAad,EAAM,KAAK,MAAM;AACpC,WAAK,SAASF,GAAiBgB,CAAU,CAAC,GAC1C,KAAK,YAAY,KAAK,EAAE,YAAY,KAAK,aAAa,YAAAA,GAAY,GAClE,KAAK,WAAWC,EAAwBf,EAAM,IAAI,GAAG,KAAK,SAAS,YAAY;AAAA,IACjF,CAAC,GACD,KAAK,UAAU;AAAA,MAASgB;AAAAA,MAAc,CAACH,GAASb,MAC9C,KAAK,WAAWe,EAAwBf,EAAM,IAAI,GAAG,KAAK,SAAS,WAAA,CAAY;AAAA,IAAA,GAEjF,KAAK,UAAU;AAAA,MAASiB;AAAAA,MAAW,CAACJ,GAASb,MAC3C,KAAK,WAAWe,EAAwBf,EAAM,IAAI,GAAG,KAAK,SAAS,WAAA,CAAY;AAAA,IAAA;AAAA,EAEnF;AAAA;AAAA;AAAA;AAAA,EAMQ,cAAckB,GAAyC;AAC7D,UAAMtF,IAAe,KAAK,SAAS,mBAAmBsF,CAAK,GACrDC,IAAmB,KAAK,SAAS,oBAAoBvF,CAAY;AACvE,WAAO,EAAE,cAAAA,GAAc,kBAAAuF,EAAA;AAAA,EACzB;AAAA,EAEQ,eAAeR,GAAqBS,IAAuB,KAAK,MAAM,cAAc;AAC1F,WAAO,KAAK,SAAS,aAAaT,GAAIS,GAAO,KAAK,YAAY;AAAA,EAChE;AAAA;AAAA;AAAA;AAAA,EAMQ,OAAOC,GAA2BC,GAAc;AAEtD,SAAK,SAAS1B,EAAkByB,CAAU,CAAC,GAGvCC,KAAA,QAAAA,EAAM,UAAQ,KAAK,QAAQ,KAAKA,EAAK,MAAM,GAC3CA,KAAA,QAAAA,EAAM,YACR,KAAK,QAAQ,KAAKA,EAAK,OAAO,GAE1BA,EAAK,QAAQ,gBAAgB,KAAK,gBACpC,KAAK,cAAcA,EAAK,QAAQ,aAChC,KAAK,YAAY,KAAK,EAAE,YAAY,KAAK,aAAa,YAAY,KAAK,MAAM,WAAA,CAAY,KAK7F,KAAK,gBAAgB,KAAK,KAAK,2BAAA,CAA4B;AAAA,EAC7D;AAAA;AAAA,EAGQ,cAAcC,GAAwB;AAC5C,SAAK,OAAOA,GAAS,EAAE,SAAAA,EAAA,CAAS;AAAA,EAClC;AAAA;AAAA,EAGQ,WAAWL,GAAyCP,GAAqB;AAC/E,UAAMpC,IAAS,KAAK,cAAc2C,CAAK,GACjCK,IAAU,KAAK,eAAeZ,GAAIpC,EAAO,YAAY;AAE3D,SAAK,OAAO,EAAE,GAAGA,GAAQ,GAAGgD,KAAW,EAAE,QAAAhD,GAAQ,SAAAgD,GAAS;AAAA,EAC5D;AAAA,EAEQ,2BAA0C;AAChD,WAAO,KAAK,MAAM,gBAAgB,CAAA;AAAA,EACpC;AAAA,EAEQ,6BAA6C;AACnD,UAAM1F,IAAQ,KAAK,UAAU,KAAK;AAClC,WAAOkE,GAAkB,KAAK,OAAOlE,CAAK;AAAA,EAC5C;AAAA,EAEQ,mBAAmB;AACzB,SAAK,gBAAgB,KAAK,KAAK,2BAAA,CAA4B;AAAA,EAC7D;AAAA,EAES,eAAe2F,GAAyBC,GAA8B;AAC7E,SAAK,iBAAA;AAAA,EACP;AAAA,EAES,mBACPC,GACAC,GACM;AACN,IAAID,EAAU,KAAK,UAAUC,EAAS,KAAK,UACzC,KAAK,eAAeA,EAAS,KAAK,OAClC,KAAK,cAAc,KAAK,eAAe,KAAK,SAAS,WAAA,CAAY,CAAC,IAEhED,EAAU,KAAK,aAAaC,EAAS,KAAK,aAC5C,KAAK,kBAAkBA,EAAS,KAAK;AAAA,EAEzC;AAAA;AAAA;AAAA;AAAA;AAAA,EAMQ,kBAAkBC,GAA6B;AAErD,QACGA,MAAgBpG,EAAe,cAC9B,KAAK,oBAAoB6D,KAC1BuC,MAAgBpG,EAAe,YAAY,KAAK,oBAAoBoD;AAErE;AAGF,SAAK,WACHgD,MAAgBpG,EAAe,aAC3B,IAAI6D,EAAyB,KAAK,cAAc,IAChD,IAAIT,EAAuB,KAAK,cAAc,GAGpD,KAAK;AAAA,MACHgB,EAAkB;AAAA,QAChB,UAAUgC;AAAA,MAAA,CACX;AAAA,IAAA;AAIH,UAAMV,IAAQH,EAAwB,KAAK,UAAU,IAAI;AACzD,SAAK,WAAWG,GAAO,KAAK,SAAS,YAAY;AAAA,EACnD;AAAA,EAEO,iBAAiB;AACtB,IAAI,KAAK,gBAET,KAAK,cAAc,IACnB,KAAK,aAAa,KAAK,EAAI;AAAA,EAC7B;AAAA,EAEU,kBAAoC;AAC5C,WAAO;AAAA,MACL,eAAe,KAAK,OAAO;AAAA,MAC3B,gBAAgB,KAAK,QAAQ;AAAA,MAC7B,UAAU,KAAK,QAAQ;AAAA,MACvB,cAAc,KAAK,YAAY;AAAA,MAC/B,gBAAgB,KAAK,gBAAgB;AAAA,MACrC,eAAe,KAAK,aAAa;AAAA,MACjC,gBAAgB,MAAM,KAAK;AAAA,MAC3B,eAAe,MAAM,KAAK,MAAM;AAAA,MAChC,cAAc,CAACW,MAAiC;AAC9C,cAAM,EAAE,YAAAxD,GAAY,UAAAyD,IAAW,UAAU,iBAAAtD,GAAiB,QAAAuD,IAAS,OAAUF,GACvEjG,IAAe,KAAK,yBAAA,GACpB1B,IAAW,KAAK,SAAS;AAAA,UAC7BmE;AAAA,UACAzC;AAAA,UACA,KAAK;AAAA,UACL,KAAK;AAAA,UACL4C;AAAA,QAAA;AAEF,QAAItE,KACF,KAAK,SAAS,SAAS,EAAE,GAAGA,GAAU,UAAA4H,GAAU,QAAAC,GAAQ;AAAA,MAE5D;AAAA,MACA,kBAAkB,CAACD,IAAW,aAAa;AACzC,cAAMlG,IAAe,KAAK,yBAAA,GACpBoG,IAAmBpG,EAAa;AAAA,UAAU,CAACa,MAC/CA,EAAK,YAAY,SAAS,KAAK,WAAW;AAAA,QAAA;AAE5C,YAAIuF,KAAoB,KAAKA,IAAmBpG,EAAa,SAAS,GAAG;AACvE,gBAAMqG,IAAWrG,EAAaoG,IAAmB,CAAC,GAC5C9H,IAAW,KAAK,SAAS;AAAA,YAC7B+H,EAAS,YAAY,CAAC;AAAA,YACtBrG;AAAA,YACA,KAAK;AAAA,YACL,KAAK;AAAA,UAAA;AAEP,UAAI1B,KACF,KAAK,SAAS,SAAS,EAAE,GAAGA,GAAU,UAAA4H,GAAU;AAAA,QAEpD;AAAA,MACF;AAAA,MACA,sBAAsB,CAACA,IAAW,aAAa;AAC7C,cAAMlG,IAAe,KAAK,yBAAA,GACpBoG,IAAmBpG,EAAa;AAAA,UAAU,CAACa,MAC/CA,EAAK,YAAY,SAAS,KAAK,WAAW;AAAA,QAAA;AAE5C,YAAIuF,IAAmB,GAAG;AACxB,gBAAME,IAAWtG,EAAaoG,IAAmB,CAAC,GAC5C9H,IAAW,KAAK,SAAS;AAAA,YAC7BgI,EAAS,YAAY,CAAC;AAAA,YACtBtG;AAAA,YACA,KAAK;AAAA,YACL,KAAK;AAAA,UAAA;AAEP,UAAI1B,KACF,KAAK,SAAS,SAAS,EAAE,GAAGA,GAAU,UAAA4H,GAAU;AAAA,QAEpD;AAAA,MACF;AAAA,MACA,YAAY,KAAK,WAAW,KAAK,IAAI;AAAA,MACrC,WAAW,KAAK,UAAU,KAAK,IAAI;AAAA,MACnC,wBAAwB,KAAK,uBAAuB,KAAK,IAAI;AAAA,MAC7D,YAAY,MAAM,KAAK,MAAM;AAAA,MAC7B,mBAAmB,MAAM,KAAK,2BAAA;AAAA,MAC9B,mBAAmB,CAACK,MAA6B,KAAK,kBAAkBA,CAAQ;AAAA,IAAA;AAAA,EAEpF;AAAA,EAEQ,WAAWxG,GAA2C;AAC5D,UAAM4F,IAAU5F,KAAY,KAAK,SAAS,WAAA,GACpCC,IAAe,KAAK,yBAAA;AAC1B,WAAO,KAAK,SAAS,aAAa2F,GAAS3F,GAAc,KAAK,YAAY;AAAA,EAC5E;AAAA,EAEQ,YAAiC;AACvC,WAAO;AAAA,MACL,cAAc,KAAK,MAAM;AAAA,MACzB,kBAAkB,KAAK,MAAM;AAAA,IAAA;AAAA,EAEjC;AAAA,EAEQ,uBACNwG,GACA5H,GACAqB,GACA1B,GACa;AACb,WAAO,KAAK,SAAS;AAAA,MACnBiI,IAAY;AAAA,MACZ,KAAK,MAAM;AAAA,MACXvG,KAAS,KAAK;AAAA,MACd1B,KAAY,KAAK;AAAA,MACjBK;AAAA,IAAA;AAAA,EAEJ;AAAA,EAEA,MAAM,aAA4B;AAAA,EAElC;AAAA,EAEA,MAAM,UAAyB;AAC7B,SAAK,QAAQ,MAAA,GACb,KAAK,QAAQ,MAAA,GACb,KAAK,YAAY,MAAA,GACjB,KAAK,OAAO,MAAA,GACZ,KAAK,gBAAgB,MAAA,GACrB,KAAK,aAAa,MAAA,GAClB,MAAM,QAAA;AAAA,EACR;AACF;AA/RE0F,EAAgB,KAAK;AANhB,IAAMmC,IAANnC;"}