{"version":3,"file":"index.cjs","sources":["../src/lib/manifest.ts","../src/lib/reducer.ts","../src/lib/index.ts"],"sourcesContent":["import { PluginManifest } from '@embedpdf/core';\nimport { ScrollPluginConfig } from './types';\n\nexport const SCROLL_PLUGIN_ID = 'scroll';\n\nexport const manifest: PluginManifest<ScrollPluginConfig> = {\n  id: SCROLL_PLUGIN_ID,\n  name: 'Scroll Plugin',\n  version: '1.0.0',\n  provides: ['scroll'],\n  requires: ['viewport'],\n  optional: [],\n  defaultConfig: {\n    enabled: true,\n    pageGap: 10,\n  },\n};\n","import { Reducer, CoreState, SET_SCALE, SetScaleAction } from '@embedpdf/core';\nimport { ScrollState, ScrollStrategy, ScrollPluginConfig, ScrollMetrics } from './types';\nimport {\n  ScrollAction,\n  UPDATE_SCROLL_STATE,\n  SET_DESIRED_SCROLL_POSITION,\n  UPDATE_TOTAL_PAGES,\n} from './actions';\n\nexport const defaultScrollMetrics: ScrollMetrics = {\n  currentPage: 1,\n  visiblePages: [],\n  pageVisibilityMetrics: [],\n  renderedPageIndexes: [],\n  scrollOffset: { x: 0, y: 0 },\n  startSpacing: 0,\n  endSpacing: 0,\n};\n\nexport const initialState: (coreState: CoreState, config: ScrollPluginConfig) => ScrollState = (\n  coreState,\n  config,\n) => ({\n  virtualItems: [],\n  totalPages: coreState.pages.length,\n  totalContentSize: { width: 0, height: 0 },\n  desiredScrollPosition: { x: 0, y: 0 },\n  strategy: config.strategy ?? ScrollStrategy.Vertical,\n  pageGap: config.pageGap ?? 10,\n  scale: coreState.scale,\n  ...defaultScrollMetrics,\n});\n\nexport const scrollReducer: Reducer<ScrollState, ScrollAction | SetScaleAction> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case UPDATE_TOTAL_PAGES:\n      return { ...state, totalPages: action.payload };\n    case SET_SCALE:\n      return { ...state, scale: action.payload };\n    case UPDATE_SCROLL_STATE:\n      return { ...state, ...action.payload };\n    case SET_DESIRED_SCROLL_POSITION:\n      return { ...state, desiredScrollPosition: action.payload };\n    default:\n      return state;\n  }\n};\n","import { PluginPackage } from '@embedpdf/core';\nimport { ScrollPlugin } from './scroll-plugin';\nimport { manifest, SCROLL_PLUGIN_ID } from './manifest';\nimport { ScrollPluginConfig, ScrollState } from './types';\nimport { scrollReducer, initialState } from './reducer';\nimport { ScrollAction } from './actions';\n\nexport const ScrollPluginPackage: PluginPackage<\n  ScrollPlugin,\n  ScrollPluginConfig,\n  ScrollState,\n  ScrollAction\n> = {\n  manifest,\n  create: (registry, _engine, config) => new ScrollPlugin(SCROLL_PLUGIN_ID, registry, config),\n  reducer: scrollReducer,\n  initialState: (coreState, config) => initialState(coreState, config),\n};\n\nexport * from './scroll-plugin';\nexport * from './types';\nexport * from './manifest';\nexport * from './types/virtual-item';\n"],"names":["SCROLL_PLUGIN_ID","manifest","defaultScrollMetrics","initialState","coreState","config","ScrollStrategy","scrollReducer","state","action","UPDATE_TOTAL_PAGES","SET_SCALE","UPDATE_SCROLL_STATE","SET_DESIRED_SCROLL_POSITION","ScrollPluginPackage","registry","_engine","ScrollPlugin"],"mappings":"gIAGaA,EAAmB,SAEnBC,EAA+C,CAC1D,GAAID,EACJ,KAAM,gBACN,QAAS,QACT,SAAU,CAAC,QAAQ,EACnB,SAAU,CAAC,UAAU,EACrB,SAAU,CAAA,EACV,cAAe,CACb,QAAS,GACT,QAAS,EAAA,CAEb,ECPaE,EAAsC,CACjD,YAAa,EACb,aAAc,CAAA,EACd,sBAAuB,CAAA,EACvB,oBAAqB,CAAA,EACrB,aAAc,CAAE,EAAG,EAAG,EAAG,CAAA,EACzB,aAAc,EACd,WAAY,CACd,EAEaC,EAAkF,CAC7FC,EACAC,KACI,CACJ,aAAc,CAAA,EACd,WAAYD,EAAU,MAAM,OAC5B,iBAAkB,CAAE,MAAO,EAAG,OAAQ,CAAA,EACtC,sBAAuB,CAAE,EAAG,EAAG,EAAG,CAAA,EAClC,SAAUC,EAAO,UAAYC,EAAAA,eAAe,SAC5C,QAASD,EAAO,SAAW,GAC3B,MAAOD,EAAU,MACjB,GAAGF,CACL,GAEaK,EAAqE,CAChFC,EACAC,IACG,CACH,OAAQA,EAAO,KAAA,CACb,KAAKC,EAAAA,mBACH,MAAO,CAAE,GAAGF,EAAO,WAAYC,EAAO,OAAA,EACxC,KAAKE,EAAAA,EACH,MAAO,CAAE,GAAGH,EAAO,MAAOC,EAAO,OAAA,EACnC,KAAKG,EAAAA,oBACH,MAAO,CAAE,GAAGJ,EAAO,GAAGC,EAAO,OAAA,EAC/B,KAAKI,EAAAA,4BACH,MAAO,CAAE,GAAGL,EAAO,sBAAuBC,EAAO,OAAA,EACnD,QACE,OAAOD,CAAA,CAEb,EC1CaM,EAKT,CACF,SAAAb,EACA,OAAQ,CAACc,EAAUC,EAASX,IAAW,IAAIY,eAAajB,EAAkBe,EAAUV,CAAM,EAC1F,QAASE,EACT,aAAc,CAACH,EAAWC,IAAWF,EAAaC,EAAWC,CAAM,CACrE"}