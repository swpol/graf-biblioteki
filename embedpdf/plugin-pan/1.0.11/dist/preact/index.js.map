{"version":3,"sources":["../../src/preact/hooks/use-pan.ts","../../src/preact/components/pan-mode.tsx"],"sourcesContent":["import { useCapability, usePlugin } from '@embedpdf/core/preact';\nimport { useInteractionManagerCapability } from '@embedpdf/plugin-interaction-manager/preact';\nimport { PanPlugin } from '@embedpdf/plugin-pan';\nimport { useEffect, useState } from 'preact/hooks';\n\nexport const usePanPlugin = () => usePlugin<PanPlugin>(PanPlugin.id);\nexport const usePanCapability = () => useCapability<PanPlugin>(PanPlugin.id);\n\nexport const usePan = () => {\n  const { provides } = usePanCapability();\n  const { provides: interactionManager } = useInteractionManagerCapability();\n\n  const [isPanning, setIsPanning] = useState(false);\n\n  useEffect(() => {\n    if (!interactionManager) return;\n    return interactionManager.onStateChange((state) => {\n      setIsPanning(state.activeMode === 'panMode');\n    });\n  }, [interactionManager]);\n\n  return {\n    provides,\n    isPanning,\n  };\n};\n","/** @jsxImportSource preact */\nimport { useEffect, useMemo, useRef } from 'preact/hooks';\nimport type { PointerEventHandlers } from '@embedpdf/plugin-interaction-manager';\nimport { useCursor, usePointerHandlers } from '@embedpdf/plugin-interaction-manager/preact';\nimport { useViewportCapability } from '@embedpdf/plugin-viewport/preact';\n\nexport const PanMode = () => {\n  const { register } = usePointerHandlers({ modeId: 'panMode' });\n  const { setCursor, removeCursor } = useCursor();\n  const { provides: viewport } = useViewportCapability();\n\n  const dragRef = useRef<{\n    startX: number;\n    startY: number;\n    startLeft: number;\n    startTop: number;\n  } | null>(null);\n\n  const handlers = useMemo(\n    (): PointerEventHandlers => ({\n      onPointerDown: (_, pe) => {\n        if (!viewport) return;\n\n        const metrics = viewport.getMetrics();\n\n        dragRef.current = {\n          startX: pe.clientX,\n          startY: pe.clientY,\n          startLeft: metrics.scrollLeft,\n          startTop: metrics.scrollTop,\n        };\n\n        setCursor('panMode', 'grabbing', 10);\n      },\n      onPointerMove: (_, pe) => {\n        const drag = dragRef.current;\n        if (!drag || !viewport) return;\n\n        /* delta between current pointer position and where the drag started */\n        const dx = pe.clientX - drag.startX;\n        const dy = pe.clientY - drag.startY;\n\n        viewport.scrollTo({\n          x: drag.startLeft - dx,\n          y: drag.startTop - dy,\n        });\n      },\n      onPointerUp: () => {\n        const drag = dragRef.current;\n        if (!drag) return;\n\n        dragRef.current = null;\n        removeCursor('panMode');\n      },\n      onPointerLeave: () => {\n        const drag = dragRef.current;\n        if (!drag) return;\n\n        dragRef.current = null;\n        removeCursor('panMode');\n      },\n      onPointerCancel: () => {\n        const drag = dragRef.current;\n        if (!drag) return;\n\n        dragRef.current = null;\n        removeCursor('panMode');\n      },\n    }),\n    [viewport, setCursor, removeCursor],\n  );\n\n  useEffect(() => {\n    if (!register) return;\n    return register(handlers);\n  }, [register, handlers]);\n\n  return <></>;\n};\n"],"mappings":";AAAA,SAAS,eAAe,iBAAiB;AACzC,SAAS,uCAAuC;AAChD,SAAS,iBAAiB;AAC1B,SAAS,WAAW,gBAAgB;AAE7B,IAAM,eAAe,MAAM,UAAqB,UAAU,EAAE;AAC5D,IAAM,mBAAmB,MAAM,cAAyB,UAAU,EAAE;AAEpE,IAAM,SAAS,MAAM;AAC1B,QAAM,EAAE,SAAS,IAAI,iBAAiB;AACtC,QAAM,EAAE,UAAU,mBAAmB,IAAI,gCAAgC;AAEzE,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAEhD,YAAU,MAAM;AACd,QAAI,CAAC,mBAAoB;AACzB,WAAO,mBAAmB,cAAc,CAAC,UAAU;AACjD,mBAAa,MAAM,eAAe,SAAS;AAAA,IAC7C,CAAC;AAAA,EACH,GAAG,CAAC,kBAAkB,CAAC;AAEvB,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;;;ACxBA,SAAS,aAAAA,YAAW,SAAS,cAAc;AAE3C,SAAS,WAAW,0BAA0B;AAC9C,SAAS,6BAA6B;AAyE7B;AAvEF,IAAM,UAAU,MAAM;AAC3B,QAAM,EAAE,SAAS,IAAI,mBAAmB,EAAE,QAAQ,UAAU,CAAC;AAC7D,QAAM,EAAE,WAAW,aAAa,IAAI,UAAU;AAC9C,QAAM,EAAE,UAAU,SAAS,IAAI,sBAAsB;AAErD,QAAM,UAAU,OAKN,IAAI;AAEd,QAAM,WAAW;AAAA,IACf,OAA6B;AAAA,MAC3B,eAAe,CAAC,GAAG,OAAO;AACxB,YAAI,CAAC,SAAU;AAEf,cAAM,UAAU,SAAS,WAAW;AAEpC,gBAAQ,UAAU;AAAA,UAChB,QAAQ,GAAG;AAAA,UACX,QAAQ,GAAG;AAAA,UACX,WAAW,QAAQ;AAAA,UACnB,UAAU,QAAQ;AAAA,QACpB;AAEA,kBAAU,WAAW,YAAY,EAAE;AAAA,MACrC;AAAA,MACA,eAAe,CAAC,GAAG,OAAO;AACxB,cAAM,OAAO,QAAQ;AACrB,YAAI,CAAC,QAAQ,CAAC,SAAU;AAGxB,cAAM,KAAK,GAAG,UAAU,KAAK;AAC7B,cAAM,KAAK,GAAG,UAAU,KAAK;AAE7B,iBAAS,SAAS;AAAA,UAChB,GAAG,KAAK,YAAY;AAAA,UACpB,GAAG,KAAK,WAAW;AAAA,QACrB,CAAC;AAAA,MACH;AAAA,MACA,aAAa,MAAM;AACjB,cAAM,OAAO,QAAQ;AACrB,YAAI,CAAC,KAAM;AAEX,gBAAQ,UAAU;AAClB,qBAAa,SAAS;AAAA,MACxB;AAAA,MACA,gBAAgB,MAAM;AACpB,cAAM,OAAO,QAAQ;AACrB,YAAI,CAAC,KAAM;AAEX,gBAAQ,UAAU;AAClB,qBAAa,SAAS;AAAA,MACxB;AAAA,MACA,iBAAiB,MAAM;AACrB,cAAM,OAAO,QAAQ;AACrB,YAAI,CAAC,KAAM;AAEX,gBAAQ,UAAU;AAClB,qBAAa,SAAS;AAAA,MACxB;AAAA,IACF;AAAA,IACA,CAAC,UAAU,WAAW,YAAY;AAAA,EACpC;AAEA,EAAAA,WAAU,MAAM;AACd,QAAI,CAAC,SAAU;AACf,WAAO,SAAS,QAAQ;AAAA,EAC1B,GAAG,CAAC,UAAU,QAAQ,CAAC;AAEvB,SAAO,gCAAE;AACX;","names":["useEffect"]}