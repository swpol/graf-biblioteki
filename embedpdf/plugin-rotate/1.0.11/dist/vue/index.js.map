{"version":3,"file":"index.js","sources":["../../../core/dist/vue/index.js","../../src/vue/hooks/use-rotate.ts","../../src/vue/components/rotate.vue"],"sourcesContent":["import { inject as p, ref as u, onMounted as a, onBeforeUnmount as l, shallowRef as d, watch as v, computed as y, defineComponent as m, provide as w, renderSlot as P } from \"vue\";\nimport { arePropsEqual as h, PluginRegistry as S } from \"@embedpdf/core\";\nconst f = Symbol(\"pdfKey\");\nfunction c() {\n  const r = p(f);\n  if (!r) throw new Error(\"useRegistry must be used inside <EmbedPDF>\");\n  return r;\n}\nfunction b() {\n  const { registry: r } = c(), e = u();\n  return a(() => {\n    const o = r.value.getStore();\n    e.value = o.getState().core;\n    const t = o.subscribe((s, n, i) => {\n      o.isCoreAction(s) && !h(n.core, i.core) && (e.value = n.core);\n    });\n    l(t);\n  }), e;\n}\nfunction R(r) {\n  const { registry: e } = c(), o = d(null), t = u(!0), s = u(new Promise(() => {\n  })), n = () => {\n    var g;\n    if (!e.value) return;\n    const i = e.value.getPlugin(r);\n    if (!i) throw new Error(`Plugin ${r} not found`);\n    o.value = i, t.value = !1, s.value = ((g = i.ready) == null ? void 0 : g.call(i)) ?? Promise.resolve();\n  };\n  return a(n), v(e, n), { plugin: o, isLoading: t, ready: s };\n}\nfunction z(r) {\n  const { plugin: e, isLoading: o, ready: t } = R(r);\n  return { provides: y(() => {\n    if (!e.value) return null;\n    if (!e.value.provides)\n      throw new Error(`Plugin ${r} does not implement provides()`);\n    return e.value.provides();\n  }), isLoading: o, ready: t };\n}\nfunction C() {\n  const { registry: r } = c(), e = u();\n  function o() {\n    return r.value ? (e.value = r.value.getStore().getState(), r.value.getStore().subscribe((s, n) => e.value = n)) : () => {\n    };\n  }\n  let t = o();\n  return v(r, () => {\n    t == null || t(), t = o();\n  }), l(() => t == null ? void 0 : t()), e;\n}\nconst F = /* @__PURE__ */ m({\n  __name: \"embed-pdf\",\n  props: {\n    engine: {},\n    plugins: {},\n    onInitialized: { type: Function }\n  },\n  setup(r) {\n    const e = r, o = d(null), t = u(!0), s = u(!1);\n    return w(f, { registry: o, isInitializing: t, pluginsReady: s }), a(async () => {\n      var i;\n      const n = new S(e.engine);\n      n.registerPluginBatch(e.plugins), await n.initialize(), await ((i = e.onInitialized) == null ? void 0 : i.call(e, n)), o.value = n, t.value = !1, n.pluginsReady().then(() => s.value = !0);\n    }), l(() => {\n      var n;\n      return (n = o.value) == null ? void 0 : n.destroy();\n    }), (n, i) => P(n.$slots, \"default\", {\n      registry: o.value,\n      isInitializing: t.value,\n      pluginsReady: s.value\n    });\n  }\n});\nexport {\n  F as EmbedPDF,\n  z as useCapability,\n  b as useCoreState,\n  R as usePlugin,\n  c as useRegistry,\n  C as useStoreState\n};\n//# sourceMappingURL=index.js.map\n","import { useCapability, usePlugin } from '@embedpdf/core/vue';\nimport { RotatePlugin } from '@embedpdf/plugin-rotate';\n\n/**\n * Hook to get the raw rotate plugin instance.\n */\nexport const useRotatePlugin = () => usePlugin<RotatePlugin>(RotatePlugin.id);\n\n/**\n * Hook to get the rotate plugin's capability API.\n * This provides methods for rotating the document.\n */\nexport const useRotateCapability = () => useCapability<RotatePlugin>(RotatePlugin.id);\n","<script setup lang=\"ts\">\nimport { computed } from 'vue';\nimport type { Size } from '@embedpdf/models';\nimport { useRotateCapability } from '../hooks';\n\ninterface Props {\n  pageSize: Size;\n}\n\nconst props = defineProps<Props>();\n\nconst { provides: rotate } = useRotateCapability();\n\nconst transformMatrix = computed(() => {\n  // If the capability is not yet available, return an identity matrix.\n  if (!rotate.value) {\n    return 'matrix(1, 0, 0, 1, 0, 0)';\n  }\n\n  // Get the CSS transform matrix string from the capability.\n  return rotate.value.getMatrix({\n    w: props.pageSize.width,\n    h: props.pageSize.height,\n    asString: true,\n  }) as string;\n});\n</script>\n\n<template>\n  <div\n    :style=\"{\n      position: 'absolute',\n      transformOrigin: '0 0',\n      transform: transformMatrix,\n    }\"\n  >\n    <slot />\n  </div>\n</template>\n"],"names":["f","c","r","p","R","e","o","d","t","u","s","n","g","a","v","z","y","useRotatePlugin","usePlugin","RotatePlugin","useRotateCapability","useCapability","props","__props","rotate","transformMatrix","computed","_createElementBlock","_normalizeStyle","_renderSlot","_ctx"],"mappings":";;AAEA,MAAMA,IAAI,OAAO,QAAQ;AACzB,SAASC,IAAI;AACX,QAAMC,IAAIC,EAAEH,CAAC;AACb,MAAI,CAACE,EAAG,OAAM,IAAI,MAAM,4CAA4C;AACpE,SAAOA;AACT;AAYA,SAASE,EAAEF,GAAG;AACZ,QAAM,EAAE,UAAUG,EAAC,IAAKJ,EAAC,GAAIK,IAAIC,EAAE,IAAI,GAAGC,IAAIC,EAAE,EAAE,GAAGC,IAAID,EAAE,IAAI,QAAQ,MAAM;AAAA,EAC7E,CAAC,CAAC,GAAGE,IAAI,MAAM;AACb,QAAIC;AACJ,QAAI,CAACP,EAAE,MAAO;AACd,UAAM,IAAIA,EAAE,MAAM,UAAUH,CAAC;AAC7B,QAAI,CAAC,EAAG,OAAM,IAAI,MAAM,UAAUA,CAAC,YAAY;AAC/C,IAAAI,EAAE,QAAQ,GAAGE,EAAE,QAAQ,IAAIE,EAAE,UAAUE,IAAI,EAAE,UAAU,OAAO,SAASA,EAAE,KAAK,CAAC,MAAM,QAAQ,QAAO;AAAA,EACtG;AACA,SAAOC,EAAEF,CAAC,GAAGG,EAAET,GAAGM,CAAC,GAAG,EAAE,QAAQL,GAAG,WAAWE,GAAG,OAAOE,EAAC;AAC3D;AACA,SAASK,EAAEb,GAAG;AACZ,QAAM,EAAE,QAAQG,GAAG,WAAWC,GAAG,OAAOE,EAAC,IAAKJ,EAAEF,CAAC;AACjD,SAAO,EAAE,UAAUc,EAAE,MAAM;AACzB,QAAI,CAACX,EAAE,MAAO,QAAO;AACrB,QAAI,CAACA,EAAE,MAAM;AACX,YAAM,IAAI,MAAM,UAAUH,CAAC,gCAAgC;AAC7D,WAAOG,EAAE,MAAM,SAAQ;AAAA,EACzB,CAAC,GAAG,WAAWC,GAAG,OAAOE,EAAC;AAC5B;AChCO,MAAMS,IAAkB,MAAMC,EAAwBC,EAAa,EAAE,GAM/DC,IAAsB,MAAMC,EAA4BF,EAAa,EAAE;;;;;;ACHpF,UAAMG,IAAQC,GAER,EAAE,UAAUC,EAAA,IAAWJ,EAAA,GAEvBK,IAAkBC,EAAS,MAE1BF,EAAO,QAKLA,EAAO,MAAM,UAAU;AAAA,MAC5B,GAAGF,EAAM,SAAS;AAAA,MAClB,GAAGA,EAAM,SAAS;AAAA,MAClB,UAAU;AAAA,IAAA,CACX,IARQ,0BASV;2BAICK,EAQM,OAAA;AAAA,MAPH,OAAKC,EAAA;AAAA;;mBAA+EH,EAAA;AAAA,MAAA;;MAMrFI,EAAQC,EAAA,QAAA,SAAA;AAAA,IAAA;;;"}