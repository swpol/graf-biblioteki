{"version":3,"file":"rotate-plugin-BYCSul3M.js","sources":["../../models/dist/index.js","../../core/dist/index.js","../src/lib/utils.ts","../src/lib/rotate-plugin.ts"],"sourcesContent":["// src/geometry.ts\nvar Rotation = /* @__PURE__ */ ((Rotation2) => {\n  Rotation2[Rotation2[\"Degree0\"] = 0] = \"Degree0\";\n  Rotation2[Rotation2[\"Degree90\"] = 1] = \"Degree90\";\n  Rotation2[Rotation2[\"Degree180\"] = 2] = \"Degree180\";\n  Rotation2[Rotation2[\"Degree270\"] = 3] = \"Degree270\";\n  return Rotation2;\n})(Rotation || {});\nfunction toIntPos(p) {\n  return { x: Math.floor(p.x), y: Math.floor(p.y) };\n}\nfunction toIntSize(s) {\n  return { width: Math.ceil(s.width), height: Math.ceil(s.height) };\n}\nfunction toIntRect(r) {\n  return {\n    origin: toIntPos(r.origin),\n    size: toIntSize(r.size)\n  };\n}\nfunction calculateDegree(rotation) {\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return 0;\n    case 1 /* Degree90 */:\n      return 90;\n    case 2 /* Degree180 */:\n      return 180;\n    case 3 /* Degree270 */:\n      return 270;\n  }\n}\nfunction calculateAngle(rotation) {\n  return calculateDegree(rotation) * Math.PI / 180;\n}\nfunction swap(size) {\n  const { width, height } = size;\n  return {\n    width: height,\n    height: width\n  };\n}\nfunction transformSize(size, rotation, scaleFactor) {\n  size = rotation % 2 === 0 ? size : swap(size);\n  return {\n    width: size.width * scaleFactor,\n    height: size.height * scaleFactor\n  };\n}\nfunction quadToRect(q) {\n  const xs = [q.p1.x, q.p2.x, q.p3.x, q.p4.x];\n  const ys = [q.p1.y, q.p2.y, q.p3.y, q.p4.y];\n  return {\n    origin: { x: Math.min(...xs), y: Math.min(...ys) },\n    size: {\n      width: Math.max(...xs) - Math.min(...xs),\n      height: Math.max(...ys) - Math.min(...ys)\n    }\n  };\n}\nfunction rectToQuad(r) {\n  return {\n    p1: { x: r.origin.x, y: r.origin.y },\n    p2: { x: r.origin.x + r.size.width, y: r.origin.y },\n    p3: { x: r.origin.x + r.size.width, y: r.origin.y + r.size.height },\n    p4: { x: r.origin.x, y: r.origin.y + r.size.height }\n  };\n}\nfunction rotatePosition(containerSize, position, rotation) {\n  let x = position.x;\n  let y = position.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      x = position.x;\n      y = position.y;\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - position.y;\n      y = position.x;\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - position.x;\n      y = containerSize.height - position.y;\n      break;\n    case 3 /* Degree270 */:\n      x = position.y;\n      y = containerSize.width - position.x;\n      break;\n  }\n  return {\n    x,\n    y\n  };\n}\nfunction scalePosition(position, scaleFactor) {\n  return {\n    x: position.x * scaleFactor,\n    y: position.y * scaleFactor\n  };\n}\nfunction transformPosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(rotatePosition(containerSize, position, rotation), scaleFactor);\n}\nfunction restorePosition(containerSize, position, rotation, scaleFactor) {\n  return scalePosition(\n    rotatePosition(containerSize, position, (4 - rotation) % 4),\n    1 / scaleFactor\n  );\n}\nfunction rotateRect(containerSize, rect, rotation) {\n  let x = rect.origin.x;\n  let y = rect.origin.y;\n  let size = rect.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      break;\n    case 1 /* Degree90 */:\n      x = containerSize.height - rect.origin.y - rect.size.height;\n      y = rect.origin.x;\n      size = swap(rect.size);\n      break;\n    case 2 /* Degree180 */:\n      x = containerSize.width - rect.origin.x - rect.size.width;\n      y = containerSize.height - rect.origin.y - rect.size.height;\n      break;\n    case 3 /* Degree270 */:\n      x = rect.origin.y;\n      y = containerSize.width - rect.origin.x - rect.size.width;\n      size = swap(rect.size);\n      break;\n  }\n  return {\n    origin: {\n      x,\n      y\n    },\n    size: {\n      width: size.width,\n      height: size.height\n    }\n  };\n}\nfunction scaleRect(rect, scaleFactor) {\n  return {\n    origin: {\n      x: rect.origin.x * scaleFactor,\n      y: rect.origin.y * scaleFactor\n    },\n    size: {\n      width: rect.size.width * scaleFactor,\n      height: rect.size.height * scaleFactor\n    }\n  };\n}\nfunction transformRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, rotation), scaleFactor);\n}\nfunction restoreRect(containerSize, rect, rotation, scaleFactor) {\n  return scaleRect(rotateRect(containerSize, rect, (4 - rotation) % 4), 1 / scaleFactor);\n}\nfunction restoreOffset(offset, rotation, scaleFactor) {\n  let offsetX = offset.x;\n  let offsetY = offset.y;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      offsetX = offset.x / scaleFactor;\n      offsetY = offset.y / scaleFactor;\n      break;\n    case 1 /* Degree90 */:\n      offsetX = offset.y / scaleFactor;\n      offsetY = -offset.x / scaleFactor;\n      break;\n    case 2 /* Degree180 */:\n      offsetX = -offset.x / scaleFactor;\n      offsetY = -offset.y / scaleFactor;\n      break;\n    case 3 /* Degree270 */:\n      offsetX = -offset.y / scaleFactor;\n      offsetY = offset.x / scaleFactor;\n      break;\n  }\n  return {\n    x: offsetX,\n    y: offsetY\n  };\n}\nfunction boundingRect(rects) {\n  if (rects.length === 0) return null;\n  let minX = rects[0].origin.x, minY = rects[0].origin.y, maxX = rects[0].origin.x + rects[0].size.width, maxY = rects[0].origin.y + rects[0].size.height;\n  for (const r of rects) {\n    minX = Math.min(minX, r.origin.x);\n    minY = Math.min(minY, r.origin.y);\n    maxX = Math.max(maxX, r.origin.x + r.size.width);\n    maxY = Math.max(maxY, r.origin.y + r.size.height);\n  }\n  return {\n    origin: {\n      x: minX,\n      y: minY\n    },\n    size: {\n      width: maxX - minX,\n      height: maxY - minY\n    }\n  };\n}\nvar makeMatrix = (rectangle, rotation, scaleFactor) => {\n  const { width, height } = rectangle.size;\n  switch (rotation) {\n    case 0 /* Degree0 */:\n      return {\n        a: scaleFactor,\n        b: 0,\n        c: 0,\n        d: -scaleFactor,\n        e: 0,\n        f: height * scaleFactor\n      };\n    case 1 /* Degree90 */:\n      return {\n        a: 0,\n        b: scaleFactor,\n        c: scaleFactor,\n        d: 0,\n        e: 0,\n        f: 0\n      };\n    case 2 /* Degree180 */:\n      return {\n        a: -scaleFactor,\n        b: 0,\n        c: 0,\n        d: scaleFactor,\n        e: width * scaleFactor,\n        f: 0\n      };\n    case 3 /* Degree270 */:\n      return {\n        a: 0,\n        b: -scaleFactor,\n        c: -scaleFactor,\n        d: 0,\n        e: height * scaleFactor,\n        f: width * scaleFactor\n      };\n  }\n};\n\n// src/logger.ts\nvar NoopLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug() {\n  }\n  /** {@inheritDoc Logger.info} */\n  info() {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn() {\n  }\n  /** {@inheritDoc Logger.error} */\n  error() {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf() {\n  }\n};\nvar ConsoleLogger = class {\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    console.debug(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    console.info(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    console.warn(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    console.error(`${source}.${category}`, ...args);\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    console.info(`${source}.${category}.${event}.${phase}`, ...args);\n  }\n};\nvar LogLevel = /* @__PURE__ */ ((LogLevel2) => {\n  LogLevel2[LogLevel2[\"Debug\"] = 0] = \"Debug\";\n  LogLevel2[LogLevel2[\"Info\"] = 1] = \"Info\";\n  LogLevel2[LogLevel2[\"Warn\"] = 2] = \"Warn\";\n  LogLevel2[LogLevel2[\"Error\"] = 3] = \"Error\";\n  return LogLevel2;\n})(LogLevel || {});\nvar LevelLogger = class {\n  /**\n   * create new LevelLogger\n   * @param logger - the original logger\n   * @param level - log level that used for filtering, all logs lower than this level will be filtered out\n   */\n  constructor(logger, level) {\n    this.logger = logger;\n    this.level = level;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    if (this.level <= 0 /* Debug */) {\n      this.logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    if (this.level <= 1 /* Info */) {\n      this.logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    if (this.level <= 2 /* Warn */) {\n      this.logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    if (this.level <= 3 /* Error */) {\n      this.logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    this.logger.perf(source, category, event, phase, ...args);\n  }\n};\nvar PerfLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor() {\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, identifier, ...args) {\n    switch (phase) {\n      case \"Begin\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        break;\n      case \"End\":\n        window.performance.mark(`${source}.${category}.${event}.${phase}.${identifier}`, {\n          detail: args\n        });\n        window.performance.measure(\n          `${source}.${category}.${event}.Measure.${identifier}`,\n          `${source}.${category}.${event}.Begin.${identifier}`,\n          `${source}.${category}.${event}.End.${identifier}`\n        );\n        break;\n    }\n  }\n};\nvar AllLogger = class {\n  /**\n   * create new PerfLogger\n   */\n  constructor(loggers) {\n    this.loggers = loggers;\n  }\n  /** {@inheritDoc Logger.debug} */\n  debug(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.debug(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.info} */\n  info(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.info(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.warn} */\n  warn(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.warn(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.error} */\n  error(source, category, ...args) {\n    for (const logger of this.loggers) {\n      logger.error(source, category, ...args);\n    }\n  }\n  /** {@inheritDoc Logger.perf} */\n  perf(source, category, event, phase, ...args) {\n    for (const logger of this.loggers) {\n      logger.perf(source, category, event, phase, ...args);\n    }\n  }\n};\n\n// src/task.ts\nvar TaskStage = /* @__PURE__ */ ((TaskStage2) => {\n  TaskStage2[TaskStage2[\"Pending\"] = 0] = \"Pending\";\n  TaskStage2[TaskStage2[\"Resolved\"] = 1] = \"Resolved\";\n  TaskStage2[TaskStage2[\"Rejected\"] = 2] = \"Rejected\";\n  TaskStage2[TaskStage2[\"Aborted\"] = 3] = \"Aborted\";\n  return TaskStage2;\n})(TaskStage || {});\nvar TaskAbortedError = class extends Error {\n  constructor(reason) {\n    super(`Task aborted: ${JSON.stringify(reason)}`);\n    this.name = \"TaskAbortedError\";\n  }\n};\nvar TaskRejectedError = class extends Error {\n  constructor(reason) {\n    super(`Task rejected: ${JSON.stringify(reason)}`);\n    this.name = \"TaskRejectedError\";\n  }\n};\nvar Task = class _Task {\n  constructor() {\n    this.state = {\n      stage: 0 /* Pending */\n    };\n    /**\n     * callbacks that will be executed when task is resolved\n     */\n    this.resolvedCallbacks = [];\n    /**\n     * callbacks that will be executed when task is rejected\n     */\n    this.rejectedCallbacks = [];\n    /**\n     * Promise that will be resolved when task is settled\n     */\n    this._promise = null;\n  }\n  /**\n   * Convert task to promise\n   * @returns promise that will be resolved when task is settled\n   */\n  toPromise() {\n    if (!this._promise) {\n      this._promise = new Promise((resolve, reject) => {\n        this.wait(\n          (result) => resolve(result),\n          (error) => {\n            if (error.type === \"abort\") {\n              reject(new TaskAbortedError(error.reason));\n            } else {\n              reject(new TaskRejectedError(error.reason));\n            }\n          }\n        );\n      });\n    }\n    return this._promise;\n  }\n  /**\n   * wait for task to be settled\n   * @param resolvedCallback - callback for resolved value\n   * @param rejectedCallback - callback for rejected value\n   */\n  wait(resolvedCallback, rejectedCallback) {\n    switch (this.state.stage) {\n      case 0 /* Pending */:\n        this.resolvedCallbacks.push(resolvedCallback);\n        this.rejectedCallbacks.push(rejectedCallback);\n        break;\n      case 1 /* Resolved */:\n        resolvedCallback(this.state.result);\n        break;\n      case 2 /* Rejected */:\n        rejectedCallback({\n          type: \"reject\",\n          reason: this.state.reason\n        });\n        break;\n      case 3 /* Aborted */:\n        rejectedCallback({\n          type: \"abort\",\n          reason: this.state.reason\n        });\n        break;\n    }\n  }\n  /**\n   * resolve task with specific result\n   * @param result - result value\n   */\n  resolve(result) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 1 /* Resolved */,\n        result\n      };\n      for (const resolvedCallback of this.resolvedCallbacks) {\n        try {\n          resolvedCallback(result);\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * reject task with specific reason\n   * @param reason - abort reason\n   *\n   */\n  reject(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 2 /* Rejected */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"reject\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * abort task with specific reason\n   * @param reason - abort reason\n   */\n  abort(reason) {\n    if (this.state.stage === 0 /* Pending */) {\n      this.state = {\n        stage: 3 /* Aborted */,\n        reason\n      };\n      for (const rejectedCallback of this.rejectedCallbacks) {\n        try {\n          rejectedCallback({\n            type: \"abort\",\n            reason\n          });\n        } catch (e) {\n        }\n      }\n      this.resolvedCallbacks = [];\n      this.rejectedCallbacks = [];\n    }\n  }\n  /**\n   * fail task with a TaskError from another task\n   * This is a convenience method for error propagation between tasks\n   * @param error - TaskError from another task\n   */\n  fail(error) {\n    if (error.type === \"abort\") {\n      this.abort(error.reason);\n    } else {\n      this.reject(error.reason);\n    }\n  }\n  /**\n   * Static method to wait for all tasks to resolve\n   * Returns a new task that resolves with an array of all results\n   * Rejects immediately if any task fails\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static all(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let resolvedCount = 0;\n    let isSettled = false;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          results[index] = result;\n          resolvedCount++;\n          if (resolvedCount === tasks.length) {\n            isSettled = true;\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method to wait for all tasks to settle (resolve, reject, or abort)\n   * Always resolves with an array of settlement results\n   *\n   * @param tasks - array of tasks to wait for\n   * @returns new task that resolves when all input tasks settle\n   * @public\n   */\n  static allSettled(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.resolve([]);\n      return combinedTask;\n    }\n    const results = new Array(tasks.length);\n    let settledCount = 0;\n    tasks.forEach((task, index) => {\n      task.wait(\n        (result) => {\n          results[index] = { status: \"resolved\", value: result };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        },\n        (error) => {\n          results[index] = {\n            status: error.type === \"abort\" ? \"aborted\" : \"rejected\",\n            reason: error.reason\n          };\n          settledCount++;\n          if (settledCount === tasks.length) {\n            combinedTask.resolve(results);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Static method that resolves/rejects with the first task that settles\n   *\n   * @param tasks - array of tasks to race\n   * @returns new task that settles with the first input task that settles\n   * @public\n   */\n  static race(tasks) {\n    const combinedTask = new _Task();\n    if (tasks.length === 0) {\n      combinedTask.reject(\"No tasks provided\");\n      return combinedTask;\n    }\n    let isSettled = false;\n    tasks.forEach((task) => {\n      task.wait(\n        (result) => {\n          if (isSettled) return;\n          isSettled = true;\n          combinedTask.resolve(result);\n        },\n        (error) => {\n          if (isSettled) return;\n          isSettled = true;\n          if (error.type === \"abort\") {\n            combinedTask.abort(error.reason);\n          } else {\n            combinedTask.reject(error.reason);\n          }\n        }\n      );\n    });\n    return combinedTask;\n  }\n  /**\n   * Utility to track progress of multiple tasks\n   *\n   * @param tasks - array of tasks to track\n   * @param onProgress - callback called when any task completes\n   * @returns new task that resolves when all input tasks resolve\n   * @public\n   */\n  static withProgress(tasks, onProgress) {\n    const combinedTask = _Task.all(tasks);\n    if (onProgress) {\n      let completedCount = 0;\n      tasks.forEach((task) => {\n        task.wait(\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          },\n          () => {\n            completedCount++;\n            onProgress(completedCount, tasks.length);\n          }\n        );\n      });\n    }\n    return combinedTask;\n  }\n};\n\n// src/pdf.ts\nvar PdfSoftHyphenMarker = \"\\xAD\";\nvar PdfZeroWidthSpace = \"\\u200B\";\nvar PdfWordJoiner = \"\\u2060\";\nvar PdfBomOrZwnbsp = \"\\uFEFF\";\nvar PdfNonCharacterFFFE = \"\\uFFFE\";\nvar PdfNonCharacterFFFF = \"\\uFFFF\";\nvar PdfUnwantedTextMarkers = Object.freeze([\n  PdfSoftHyphenMarker,\n  PdfZeroWidthSpace,\n  PdfWordJoiner,\n  PdfBomOrZwnbsp,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF\n]);\nvar PdfUnwantedTextRegex = new RegExp(`[${PdfUnwantedTextMarkers.join(\"\")}]`, \"g\");\nfunction stripPdfUnwantedMarkers(text) {\n  return text.replace(PdfUnwantedTextRegex, \"\");\n}\nvar PdfZoomMode = /* @__PURE__ */ ((PdfZoomMode2) => {\n  PdfZoomMode2[PdfZoomMode2[\"Unknown\"] = 0] = \"Unknown\";\n  PdfZoomMode2[PdfZoomMode2[\"XYZ\"] = 1] = \"XYZ\";\n  PdfZoomMode2[PdfZoomMode2[\"FitPage\"] = 2] = \"FitPage\";\n  PdfZoomMode2[PdfZoomMode2[\"FitHorizontal\"] = 3] = \"FitHorizontal\";\n  PdfZoomMode2[PdfZoomMode2[\"FitVertical\"] = 4] = \"FitVertical\";\n  PdfZoomMode2[PdfZoomMode2[\"FitRectangle\"] = 5] = \"FitRectangle\";\n  return PdfZoomMode2;\n})(PdfZoomMode || {});\nvar PdfBlendMode = /* @__PURE__ */ ((PdfBlendMode2) => {\n  PdfBlendMode2[PdfBlendMode2[\"Normal\"] = 0] = \"Normal\";\n  PdfBlendMode2[PdfBlendMode2[\"Multiply\"] = 1] = \"Multiply\";\n  PdfBlendMode2[PdfBlendMode2[\"Screen\"] = 2] = \"Screen\";\n  PdfBlendMode2[PdfBlendMode2[\"Overlay\"] = 3] = \"Overlay\";\n  PdfBlendMode2[PdfBlendMode2[\"Darken\"] = 4] = \"Darken\";\n  PdfBlendMode2[PdfBlendMode2[\"Lighten\"] = 5] = \"Lighten\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorDodge\"] = 6] = \"ColorDodge\";\n  PdfBlendMode2[PdfBlendMode2[\"ColorBurn\"] = 7] = \"ColorBurn\";\n  PdfBlendMode2[PdfBlendMode2[\"HardLight\"] = 8] = \"HardLight\";\n  PdfBlendMode2[PdfBlendMode2[\"SoftLight\"] = 9] = \"SoftLight\";\n  PdfBlendMode2[PdfBlendMode2[\"Difference\"] = 10] = \"Difference\";\n  PdfBlendMode2[PdfBlendMode2[\"Exclusion\"] = 11] = \"Exclusion\";\n  PdfBlendMode2[PdfBlendMode2[\"Hue\"] = 12] = \"Hue\";\n  PdfBlendMode2[PdfBlendMode2[\"Saturation\"] = 13] = \"Saturation\";\n  PdfBlendMode2[PdfBlendMode2[\"Color\"] = 14] = \"Color\";\n  PdfBlendMode2[PdfBlendMode2[\"Luminosity\"] = 15] = \"Luminosity\";\n  return PdfBlendMode2;\n})(PdfBlendMode || {});\nvar MixedBlendMode = Symbol(\"mixed\");\nvar BLEND_MODE_INFOS = Object.freeze([\n  { id: 0 /* Normal */, label: \"Normal\", css: \"normal\" },\n  { id: 1 /* Multiply */, label: \"Multiply\", css: \"multiply\" },\n  { id: 2 /* Screen */, label: \"Screen\", css: \"screen\" },\n  { id: 3 /* Overlay */, label: \"Overlay\", css: \"overlay\" },\n  { id: 4 /* Darken */, label: \"Darken\", css: \"darken\" },\n  { id: 5 /* Lighten */, label: \"Lighten\", css: \"lighten\" },\n  { id: 6 /* ColorDodge */, label: \"Color Dodge\", css: \"color-dodge\" },\n  { id: 7 /* ColorBurn */, label: \"Color Burn\", css: \"color-burn\" },\n  { id: 8 /* HardLight */, label: \"Hard Light\", css: \"hard-light\" },\n  { id: 9 /* SoftLight */, label: \"Soft Light\", css: \"soft-light\" },\n  { id: 10 /* Difference */, label: \"Difference\", css: \"difference\" },\n  { id: 11 /* Exclusion */, label: \"Exclusion\", css: \"exclusion\" },\n  { id: 12 /* Hue */, label: \"Hue\", css: \"hue\" },\n  { id: 13 /* Saturation */, label: \"Saturation\", css: \"saturation\" },\n  { id: 14 /* Color */, label: \"Color\", css: \"color\" },\n  { id: 15 /* Luminosity */, label: \"Luminosity\", css: \"luminosity\" }\n]);\nvar enumToInfo = BLEND_MODE_INFOS.reduce(\n  (m, info) => {\n    m[info.id] = info;\n    return m;\n  },\n  {}\n);\nvar cssToEnum = BLEND_MODE_INFOS.reduce((m, info) => {\n  m[info.css] = info.id;\n  return m;\n}, {});\nfunction getBlendModeInfo(mode) {\n  return enumToInfo[mode] ?? enumToInfo[0 /* Normal */];\n}\nfunction blendModeToCss(mode) {\n  return getBlendModeInfo(mode).css;\n}\nfunction cssToBlendMode(value) {\n  return cssToEnum[value];\n}\nfunction blendModeLabel(mode) {\n  return getBlendModeInfo(mode).label;\n}\nfunction reduceBlendModes(modes) {\n  if (!modes.length) return 0 /* Normal */;\n  const first = modes[0];\n  return modes.every((m) => m === first) ? first : MixedBlendMode;\n}\nvar blendModeSelectOptions = BLEND_MODE_INFOS.map((info) => ({\n  value: info.id,\n  label: info.label\n}));\nfunction uiBlendModeDisplay(value) {\n  return value === MixedBlendMode ? \"(mixed)\" : blendModeLabel(value);\n}\nvar PdfActionType = /* @__PURE__ */ ((PdfActionType2) => {\n  PdfActionType2[PdfActionType2[\"Unsupported\"] = 0] = \"Unsupported\";\n  PdfActionType2[PdfActionType2[\"Goto\"] = 1] = \"Goto\";\n  PdfActionType2[PdfActionType2[\"RemoteGoto\"] = 2] = \"RemoteGoto\";\n  PdfActionType2[PdfActionType2[\"URI\"] = 3] = \"URI\";\n  PdfActionType2[PdfActionType2[\"LaunchAppOrOpenFile\"] = 4] = \"LaunchAppOrOpenFile\";\n  return PdfActionType2;\n})(PdfActionType || {});\nvar PdfAnnotationSubtype = /* @__PURE__ */ ((PdfAnnotationSubtype2) => {\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINK\"] = 2] = \"LINK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FREETEXT\"] = 3] = \"FREETEXT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"LINE\"] = 4] = \"LINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUARE\"] = 5] = \"SQUARE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CIRCLE\"] = 6] = \"CIRCLE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYGON\"] = 7] = \"POLYGON\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POLYLINE\"] = 8] = \"POLYLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"HIGHLIGHT\"] = 9] = \"HIGHLIGHT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"UNDERLINE\"] = 10] = \"UNDERLINE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SQUIGGLY\"] = 11] = \"SQUIGGLY\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STRIKEOUT\"] = 12] = \"STRIKEOUT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"STAMP\"] = 13] = \"STAMP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"CARET\"] = 14] = \"CARET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"INK\"] = 15] = \"INK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"POPUP\"] = 16] = \"POPUP\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"FILEATTACHMENT\"] = 17] = \"FILEATTACHMENT\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SOUND\"] = 18] = \"SOUND\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"MOVIE\"] = 19] = \"MOVIE\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WIDGET\"] = 20] = \"WIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"SCREEN\"] = 21] = \"SCREEN\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"PRINTERMARK\"] = 22] = \"PRINTERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"TRAPNET\"] = 23] = \"TRAPNET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"WATERMARK\"] = 24] = \"WATERMARK\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"THREED\"] = 25] = \"THREED\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"RICHMEDIA\"] = 26] = \"RICHMEDIA\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"XFAWIDGET\"] = 27] = \"XFAWIDGET\";\n  PdfAnnotationSubtype2[PdfAnnotationSubtype2[\"REDACT\"] = 28] = \"REDACT\";\n  return PdfAnnotationSubtype2;\n})(PdfAnnotationSubtype || {});\nvar PdfAnnotationSubtypeName = {\n  [0 /* UNKNOWN */]: \"unknow\",\n  [1 /* TEXT */]: \"text\",\n  [2 /* LINK */]: \"link\",\n  [3 /* FREETEXT */]: \"freetext\",\n  [4 /* LINE */]: \"line\",\n  [5 /* SQUARE */]: \"square\",\n  [6 /* CIRCLE */]: \"circle\",\n  [7 /* POLYGON */]: \"polygon\",\n  [8 /* POLYLINE */]: \"polyline\",\n  [9 /* HIGHLIGHT */]: \"highlight\",\n  [10 /* UNDERLINE */]: \"underline\",\n  [11 /* SQUIGGLY */]: \"squiggly\",\n  [12 /* STRIKEOUT */]: \"strikeout\",\n  [13 /* STAMP */]: \"stamp\",\n  [14 /* CARET */]: \"caret\",\n  [15 /* INK */]: \"ink\",\n  [16 /* POPUP */]: \"popup\",\n  [17 /* FILEATTACHMENT */]: \"fileattachment\",\n  [18 /* SOUND */]: \"sound\",\n  [19 /* MOVIE */]: \"movie\",\n  [20 /* WIDGET */]: \"widget\",\n  [21 /* SCREEN */]: \"screen\",\n  [22 /* PRINTERMARK */]: \"printermark\",\n  [23 /* TRAPNET */]: \"trapnet\",\n  [24 /* WATERMARK */]: \"watermark\",\n  [25 /* THREED */]: \"threed\",\n  [26 /* RICHMEDIA */]: \"richmedia\",\n  [27 /* XFAWIDGET */]: \"xfawidget\",\n  [28 /* REDACT */]: \"redact\"\n};\nvar PdfAnnotationObjectStatus = /* @__PURE__ */ ((PdfAnnotationObjectStatus2) => {\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Created\"] = 0] = \"Created\";\n  PdfAnnotationObjectStatus2[PdfAnnotationObjectStatus2[\"Committed\"] = 1] = \"Committed\";\n  return PdfAnnotationObjectStatus2;\n})(PdfAnnotationObjectStatus || {});\nvar AppearanceMode = /* @__PURE__ */ ((AppearanceMode2) => {\n  AppearanceMode2[AppearanceMode2[\"Normal\"] = 0] = \"Normal\";\n  AppearanceMode2[AppearanceMode2[\"Rollover\"] = 1] = \"Rollover\";\n  AppearanceMode2[AppearanceMode2[\"Down\"] = 2] = \"Down\";\n  return AppearanceMode2;\n})(AppearanceMode || {});\nvar PdfAnnotationState = /* @__PURE__ */ ((PdfAnnotationState2) => {\n  PdfAnnotationState2[\"Marked\"] = \"Marked\";\n  PdfAnnotationState2[\"Unmarked\"] = \"Unmarked\";\n  PdfAnnotationState2[\"Accepted\"] = \"Accepted\";\n  PdfAnnotationState2[\"Rejected\"] = \"Rejected\";\n  PdfAnnotationState2[\"Complete\"] = \"Complete\";\n  PdfAnnotationState2[\"Cancelled\"] = \"Cancelled\";\n  PdfAnnotationState2[\"None\"] = \"None\";\n  return PdfAnnotationState2;\n})(PdfAnnotationState || {});\nvar PdfAnnotationStateModel = /* @__PURE__ */ ((PdfAnnotationStateModel2) => {\n  PdfAnnotationStateModel2[\"Marked\"] = \"Marked\";\n  PdfAnnotationStateModel2[\"Reviewed\"] = \"Reviewed\";\n  return PdfAnnotationStateModel2;\n})(PdfAnnotationStateModel || {});\nvar PDF_FORM_FIELD_TYPE = /* @__PURE__ */ ((PDF_FORM_FIELD_TYPE2) => {\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"PUSHBUTTON\"] = 1] = \"PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"CHECKBOX\"] = 2] = \"CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"RADIOBUTTON\"] = 3] = \"RADIOBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"COMBOBOX\"] = 4] = \"COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"LISTBOX\"] = 5] = \"LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"TEXTFIELD\"] = 6] = \"TEXTFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"SIGNATURE\"] = 7] = \"SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA\"] = 8] = \"XFA\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_CHECKBOX\"] = 9] = \"XFA_CHECKBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_COMBOBOX\"] = 10] = \"XFA_COMBOBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_IMAGEFIELD\"] = 11] = \"XFA_IMAGEFIELD\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_LISTBOX\"] = 12] = \"XFA_LISTBOX\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_PUSHBUTTON\"] = 13] = \"XFA_PUSHBUTTON\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_SIGNATURE\"] = 14] = \"XFA_SIGNATURE\";\n  PDF_FORM_FIELD_TYPE2[PDF_FORM_FIELD_TYPE2[\"XFA_TEXTFIELD\"] = 15] = \"XFA_TEXTFIELD\";\n  return PDF_FORM_FIELD_TYPE2;\n})(PDF_FORM_FIELD_TYPE || {});\nvar PdfAnnotationColorType = /* @__PURE__ */ ((PdfAnnotationColorType2) => {\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"Color\"] = 0] = \"Color\";\n  PdfAnnotationColorType2[PdfAnnotationColorType2[\"InteriorColor\"] = 1] = \"InteriorColor\";\n  return PdfAnnotationColorType2;\n})(PdfAnnotationColorType || {});\nvar PdfAnnotationBorderStyle = /* @__PURE__ */ ((PdfAnnotationBorderStyle2) => {\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"SOLID\"] = 1] = \"SOLID\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"DASHED\"] = 2] = \"DASHED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"BEVELED\"] = 3] = \"BEVELED\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"INSET\"] = 4] = \"INSET\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"UNDERLINE\"] = 5] = \"UNDERLINE\";\n  PdfAnnotationBorderStyle2[PdfAnnotationBorderStyle2[\"CLOUDY\"] = 6] = \"CLOUDY\";\n  return PdfAnnotationBorderStyle2;\n})(PdfAnnotationBorderStyle || {});\nvar PdfAnnotationFlags = /* @__PURE__ */ ((PdfAnnotationFlags2) => {\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NONE\"] = 0] = \"NONE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"INVISIBLE\"] = 1] = \"INVISIBLE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"HIDDEN\"] = 2] = \"HIDDEN\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"PRINT\"] = 4] = \"PRINT\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ZOOM\"] = 8] = \"NO_ZOOM\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_ROTATE\"] = 16] = \"NO_ROTATE\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"NO_VIEW\"] = 32] = \"NO_VIEW\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"READ_ONLY\"] = 64] = \"READ_ONLY\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"LOCKED\"] = 128] = \"LOCKED\";\n  PdfAnnotationFlags2[PdfAnnotationFlags2[\"TOGGLE_NOVIEW\"] = 256] = \"TOGGLE_NOVIEW\";\n  return PdfAnnotationFlags2;\n})(PdfAnnotationFlags || {});\nvar PDF_FORM_FIELD_FLAG = /* @__PURE__ */ ((PDF_FORM_FIELD_FLAG2) => {\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NONE\"] = 0] = \"NONE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"READONLY\"] = 1] = \"READONLY\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"REQUIRED\"] = 2] = \"REQUIRED\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"NOEXPORT\"] = 4] = \"NOEXPORT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_MULTIPLINE\"] = 4096] = \"TEXT_MULTIPLINE\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"TEXT_PASSWORD\"] = 8192] = \"TEXT_PASSWORD\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_COMBO\"] = 131072] = \"CHOICE_COMBO\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_EDIT\"] = 262144] = \"CHOICE_EDIT\";\n  PDF_FORM_FIELD_FLAG2[PDF_FORM_FIELD_FLAG2[\"CHOICE_MULTL_SELECT\"] = 2097152] = \"CHOICE_MULTL_SELECT\";\n  return PDF_FORM_FIELD_FLAG2;\n})(PDF_FORM_FIELD_FLAG || {});\nvar PdfPageObjectType = /* @__PURE__ */ ((PdfPageObjectType2) => {\n  PdfPageObjectType2[PdfPageObjectType2[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  PdfPageObjectType2[PdfPageObjectType2[\"TEXT\"] = 1] = \"TEXT\";\n  PdfPageObjectType2[PdfPageObjectType2[\"PATH\"] = 2] = \"PATH\";\n  PdfPageObjectType2[PdfPageObjectType2[\"IMAGE\"] = 3] = \"IMAGE\";\n  PdfPageObjectType2[PdfPageObjectType2[\"SHADING\"] = 4] = \"SHADING\";\n  PdfPageObjectType2[PdfPageObjectType2[\"FORM\"] = 5] = \"FORM\";\n  return PdfPageObjectType2;\n})(PdfPageObjectType || {});\nvar PdfAnnotationFlagName = Object.freeze({\n  [1 /* INVISIBLE */]: \"invisible\",\n  [2 /* HIDDEN */]: \"hidden\",\n  [4 /* PRINT */]: \"print\",\n  [8 /* NO_ZOOM */]: \"noZoom\",\n  [16 /* NO_ROTATE */]: \"noRotate\",\n  [32 /* NO_VIEW */]: \"noView\",\n  [64 /* READ_ONLY */]: \"readOnly\",\n  [128 /* LOCKED */]: \"locked\",\n  [256 /* TOGGLE_NOVIEW */]: \"toggleNoView\"\n});\nvar PdfAnnotationFlagValue = Object.entries(\n  PdfAnnotationFlagName\n).reduce(\n  (acc, [bit, name]) => {\n    acc[name] = Number(bit);\n    return acc;\n  },\n  {}\n);\nfunction flagsToNames(raw) {\n  return Object.keys(PdfAnnotationFlagName).filter((flag) => (raw & flag) !== 0).map((flag) => PdfAnnotationFlagName[flag]);\n}\nfunction namesToFlags(names) {\n  return names.reduce(\n    (mask, name) => mask | PdfAnnotationFlagValue[name],\n    0 /* NONE */\n  );\n}\nvar PdfSegmentObjectType = /* @__PURE__ */ ((PdfSegmentObjectType2) => {\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"UNKNOWN\"] = -1] = \"UNKNOWN\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"LINETO\"] = 0] = \"LINETO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"BEZIERTO\"] = 1] = \"BEZIERTO\";\n  PdfSegmentObjectType2[PdfSegmentObjectType2[\"MOVETO\"] = 2] = \"MOVETO\";\n  return PdfSegmentObjectType2;\n})(PdfSegmentObjectType || {});\nvar PdfEngineFeature = /* @__PURE__ */ ((PdfEngineFeature2) => {\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPage\"] = 0] = \"RenderPage\";\n  PdfEngineFeature2[PdfEngineFeature2[\"RenderPageRect\"] = 1] = \"RenderPageRect\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Thumbnails\"] = 2] = \"Thumbnails\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Bookmarks\"] = 3] = \"Bookmarks\";\n  PdfEngineFeature2[PdfEngineFeature2[\"Annotations\"] = 4] = \"Annotations\";\n  return PdfEngineFeature2;\n})(PdfEngineFeature || {});\nvar PdfEngineOperation = /* @__PURE__ */ ((PdfEngineOperation2) => {\n  PdfEngineOperation2[PdfEngineOperation2[\"Create\"] = 0] = \"Create\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Read\"] = 1] = \"Read\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Update\"] = 2] = \"Update\";\n  PdfEngineOperation2[PdfEngineOperation2[\"Delete\"] = 3] = \"Delete\";\n  return PdfEngineOperation2;\n})(PdfEngineOperation || {});\nvar MatchFlag = /* @__PURE__ */ ((MatchFlag2) => {\n  MatchFlag2[MatchFlag2[\"None\"] = 0] = \"None\";\n  MatchFlag2[MatchFlag2[\"MatchCase\"] = 1] = \"MatchCase\";\n  MatchFlag2[MatchFlag2[\"MatchWholeWord\"] = 2] = \"MatchWholeWord\";\n  MatchFlag2[MatchFlag2[\"MatchConsecutive\"] = 4] = \"MatchConsecutive\";\n  return MatchFlag2;\n})(MatchFlag || {});\nfunction unionFlags(flags) {\n  return flags.reduce((flag, currFlag) => {\n    return flag | currFlag;\n  }, 0 /* None */);\n}\nfunction compareSearchTarget(targetA, targetB) {\n  const flagA = unionFlags(targetA.flags);\n  const flagB = unionFlags(targetB.flags);\n  return flagA === flagB && targetA.keyword === targetB.keyword;\n}\nvar PdfPermission = /* @__PURE__ */ ((PdfPermission2) => {\n  PdfPermission2[PdfPermission2[\"PrintDocument\"] = 8] = \"PrintDocument\";\n  PdfPermission2[PdfPermission2[\"ModifyContent\"] = 16] = \"ModifyContent\";\n  PdfPermission2[PdfPermission2[\"CopyOrExtract\"] = 32] = \"CopyOrExtract\";\n  PdfPermission2[PdfPermission2[\"AddOrModifyTextAnnot\"] = 64] = \"AddOrModifyTextAnnot\";\n  PdfPermission2[PdfPermission2[\"FillInExistingForm\"] = 512] = \"FillInExistingForm\";\n  PdfPermission2[PdfPermission2[\"ExtractTextOrGraphics\"] = 1024] = \"ExtractTextOrGraphics\";\n  PdfPermission2[PdfPermission2[\"AssembleDocument\"] = 2048] = \"AssembleDocument\";\n  PdfPermission2[PdfPermission2[\"PrintHighQuality\"] = 4096] = \"PrintHighQuality\";\n  return PdfPermission2;\n})(PdfPermission || {});\nvar PdfPageFlattenFlag = /* @__PURE__ */ ((PdfPageFlattenFlag2) => {\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Display\"] = 0] = \"Display\";\n  PdfPageFlattenFlag2[PdfPageFlattenFlag2[\"Print\"] = 1] = \"Print\";\n  return PdfPageFlattenFlag2;\n})(PdfPageFlattenFlag || {});\nvar PdfPageFlattenResult = /* @__PURE__ */ ((PdfPageFlattenResult2) => {\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Fail\"] = 0] = \"Fail\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"Success\"] = 1] = \"Success\";\n  PdfPageFlattenResult2[PdfPageFlattenResult2[\"NothingToDo\"] = 2] = \"NothingToDo\";\n  return PdfPageFlattenResult2;\n})(PdfPageFlattenResult || {});\nvar PdfErrorCode = /* @__PURE__ */ ((PdfErrorCode2) => {\n  PdfErrorCode2[PdfErrorCode2[\"Ok\"] = 0] = \"Ok\";\n  PdfErrorCode2[PdfErrorCode2[\"Unknown\"] = 1] = \"Unknown\";\n  PdfErrorCode2[PdfErrorCode2[\"NotFound\"] = 2] = \"NotFound\";\n  PdfErrorCode2[PdfErrorCode2[\"WrongFormat\"] = 3] = \"WrongFormat\";\n  PdfErrorCode2[PdfErrorCode2[\"Password\"] = 4] = \"Password\";\n  PdfErrorCode2[PdfErrorCode2[\"Security\"] = 5] = \"Security\";\n  PdfErrorCode2[PdfErrorCode2[\"PageError\"] = 6] = \"PageError\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALoad\"] = 7] = \"XFALoad\";\n  PdfErrorCode2[PdfErrorCode2[\"XFALayout\"] = 8] = \"XFALayout\";\n  PdfErrorCode2[PdfErrorCode2[\"Cancelled\"] = 9] = \"Cancelled\";\n  PdfErrorCode2[PdfErrorCode2[\"Initialization\"] = 10] = \"Initialization\";\n  PdfErrorCode2[PdfErrorCode2[\"NotReady\"] = 11] = \"NotReady\";\n  PdfErrorCode2[PdfErrorCode2[\"NotSupport\"] = 12] = \"NotSupport\";\n  PdfErrorCode2[PdfErrorCode2[\"LoadDoc\"] = 13] = \"LoadDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"DocNotOpen\"] = 14] = \"DocNotOpen\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCloseDoc\"] = 15] = \"CantCloseDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateNewDoc\"] = 16] = \"CantCreateNewDoc\";\n  PdfErrorCode2[PdfErrorCode2[\"CantImportPages\"] = 17] = \"CantImportPages\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCreateAnnot\"] = 18] = \"CantCreateAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotRect\"] = 19] = \"CantSetAnnotRect\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSetAnnotContent\"] = 20] = \"CantSetAnnotContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantRemoveInkList\"] = 21] = \"CantRemoveInkList\";\n  PdfErrorCode2[PdfErrorCode2[\"CantAddInkStoke\"] = 22] = \"CantAddInkStoke\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentSize\"] = 23] = \"CantReadAttachmentSize\";\n  PdfErrorCode2[PdfErrorCode2[\"CantReadAttachmentContent\"] = 24] = \"CantReadAttachmentContent\";\n  PdfErrorCode2[PdfErrorCode2[\"CantFocusAnnot\"] = 25] = \"CantFocusAnnot\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectText\"] = 26] = \"CantSelectText\";\n  PdfErrorCode2[PdfErrorCode2[\"CantSelectOption\"] = 27] = \"CantSelectOption\";\n  PdfErrorCode2[PdfErrorCode2[\"CantCheckField\"] = 28] = \"CantCheckField\";\n  return PdfErrorCode2;\n})(PdfErrorCode || {});\nvar PdfTaskHelper = class {\n  /**\n   * Create a task\n   * @returns new task\n   */\n  static create() {\n    return new Task();\n  }\n  /**\n   * Create a task that has been resolved with value\n   * @param result - resolved value\n   * @returns resolved task\n   */\n  static resolve(result) {\n    const task = new Task();\n    task.resolve(result);\n    return task;\n  }\n  /**\n   * Create a task that has been rejected with error\n   * @param reason - rejected error\n   * @returns rejected task\n   */\n  static reject(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n  /**\n   * Create a task that has been aborted with error\n   * @param reason - aborted error\n   * @returns aborted task\n   */\n  static abort(reason) {\n    const task = new Task();\n    task.reject(reason);\n    return task;\n  }\n};\n\n// src/color.ts\nfunction pdfAlphaColorToWebAlphaColor(c) {\n  const clamp = (n) => Math.max(0, Math.min(255, n));\n  const toHex = (n) => clamp(n).toString(16).padStart(2, \"0\");\n  const color = `#${toHex(c.red)}${toHex(c.green)}${toHex(c.blue)}`;\n  const opacity = clamp(c.alpha) / 255;\n  return { color, opacity };\n}\nfunction webAlphaColorToPdfAlphaColor({ color, opacity }) {\n  if (/^#?[0-9a-f]{3}$/i.test(color)) {\n    color = color.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, \"#$1$1$2$2$3$3\").toLowerCase();\n  }\n  const [, r, g, b] = /^#?([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color) ?? (() => {\n    throw new Error(`Invalid hex colour: \\u201C${color}\\u201D`);\n  })();\n  const clamp = (n, hi = 255) => Math.max(0, Math.min(hi, n));\n  return {\n    red: parseInt(r, 16),\n    green: parseInt(g, 16),\n    blue: parseInt(b, 16),\n    alpha: clamp(Math.round(opacity * 255))\n  };\n}\n\n// src/date.ts\nfunction pdfDateToDate(pdf) {\n  if (!pdf?.startsWith(\"D:\") || pdf.length < 16) return;\n  const y = +pdf.slice(2, 6);\n  const mo = +pdf.slice(6, 8) - 1;\n  const d = +pdf.slice(8, 10);\n  const H = +pdf.slice(10, 12);\n  const M = +pdf.slice(12, 14);\n  const S = +pdf.slice(14, 16);\n  return new Date(Date.UTC(y, mo, d, H, M, S));\n}\nfunction dateToPdfDate(date = /* @__PURE__ */ new Date()) {\n  const z = (n, len = 2) => n.toString().padStart(len, \"0\");\n  const YYYY = date.getUTCFullYear();\n  const MM = z(date.getUTCMonth() + 1);\n  const DD = z(date.getUTCDate());\n  const HH = z(date.getUTCHours());\n  const mm = z(date.getUTCMinutes());\n  const SS = z(date.getUTCSeconds());\n  return `D:${YYYY}${MM}${DD}${HH}${mm}${SS}`;\n}\n\n// src/index.ts\nfunction ignore() {\n}\nexport {\n  AllLogger,\n  AppearanceMode,\n  ConsoleLogger,\n  LevelLogger,\n  LogLevel,\n  MatchFlag,\n  MixedBlendMode,\n  NoopLogger,\n  PDF_FORM_FIELD_FLAG,\n  PDF_FORM_FIELD_TYPE,\n  PdfActionType,\n  PdfAnnotationBorderStyle,\n  PdfAnnotationColorType,\n  PdfAnnotationFlagName,\n  PdfAnnotationFlags,\n  PdfAnnotationObjectStatus,\n  PdfAnnotationState,\n  PdfAnnotationStateModel,\n  PdfAnnotationSubtype,\n  PdfAnnotationSubtypeName,\n  PdfBlendMode,\n  PdfBomOrZwnbsp,\n  PdfEngineFeature,\n  PdfEngineOperation,\n  PdfErrorCode,\n  PdfNonCharacterFFFE,\n  PdfNonCharacterFFFF,\n  PdfPageFlattenFlag,\n  PdfPageFlattenResult,\n  PdfPageObjectType,\n  PdfPermission,\n  PdfSegmentObjectType,\n  PdfSoftHyphenMarker,\n  PdfTaskHelper,\n  PdfUnwantedTextMarkers,\n  PdfUnwantedTextRegex,\n  PdfWordJoiner,\n  PdfZeroWidthSpace,\n  PdfZoomMode,\n  PerfLogger,\n  Rotation,\n  Task,\n  TaskAbortedError,\n  TaskRejectedError,\n  TaskStage,\n  blendModeLabel,\n  blendModeSelectOptions,\n  blendModeToCss,\n  boundingRect,\n  calculateAngle,\n  calculateDegree,\n  compareSearchTarget,\n  cssToBlendMode,\n  dateToPdfDate,\n  flagsToNames,\n  getBlendModeInfo,\n  ignore,\n  makeMatrix,\n  namesToFlags,\n  pdfAlphaColorToWebAlphaColor,\n  pdfDateToDate,\n  quadToRect,\n  rectToQuad,\n  reduceBlendModes,\n  restoreOffset,\n  restorePosition,\n  restoreRect,\n  rotatePosition,\n  rotateRect,\n  scalePosition,\n  scaleRect,\n  stripPdfUnwantedMarkers,\n  swap,\n  toIntPos,\n  toIntRect,\n  toIntSize,\n  transformPosition,\n  transformRect,\n  transformSize,\n  uiBlendModeDisplay,\n  unionFlags,\n  webAlphaColorToPdfAlphaColor\n};\n//# sourceMappingURL=index.js.map","import { Rotation as T, transformSize as A } from \"@embedpdf/models\";\nclass C {\n  constructor() {\n    this.dependencyGraph = /* @__PURE__ */ new Map();\n  }\n  addNode(t, e = []) {\n    this.dependencyGraph.set(t, new Set(e));\n  }\n  hasCircularDependencies() {\n    const t = /* @__PURE__ */ new Set(), e = /* @__PURE__ */ new Set(), i = (r) => {\n      t.add(r), e.add(r);\n      const n = this.dependencyGraph.get(r) || /* @__PURE__ */ new Set();\n      for (const o of n)\n        if (t.has(o)) {\n          if (e.has(o))\n            return !0;\n        } else if (i(o)) return !0;\n      return e.delete(r), !1;\n    };\n    for (const r of this.dependencyGraph.keys())\n      if (!t.has(r) && i(r))\n        return !0;\n    return !1;\n  }\n  resolveLoadOrder() {\n    if (this.hasCircularDependencies())\n      throw new Error(\"Circular dependencies detected\");\n    const t = [], e = /* @__PURE__ */ new Set(), i = /* @__PURE__ */ new Set(), r = (n) => {\n      if (i.has(n)) throw new Error(\"Circular dependency\");\n      if (e.has(n)) return;\n      i.add(n);\n      const o = this.dependencyGraph.get(n) || /* @__PURE__ */ new Set();\n      for (const a of o)\n        r(a);\n      i.delete(n), e.add(n), t.push(n);\n    };\n    for (const n of this.dependencyGraph.keys())\n      e.has(n) || r(n);\n    return t;\n  }\n}\nclass u extends Error {\n  constructor(t) {\n    super(t), this.name = \"PluginRegistrationError\";\n  }\n}\nclass d extends Error {\n  constructor(t) {\n    super(t), this.name = \"PluginNotFoundError\";\n  }\n}\nclass z extends Error {\n  constructor(t) {\n    super(t), this.name = \"CircularDependencyError\";\n  }\n}\nclass j extends Error {\n  constructor(t) {\n    super(t), this.name = \"CapabilityNotFoundError\";\n  }\n}\nclass G extends Error {\n  constructor(t) {\n    super(t), this.name = \"CapabilityConflictError\";\n  }\n}\nclass x extends Error {\n  constructor(t) {\n    super(t), this.name = \"PluginInitializationError\";\n  }\n}\nclass O extends Error {\n  constructor(t) {\n    super(t), this.name = \"PluginConfigurationError\";\n  }\n}\nclass M {\n  /**\n   * Initializes the PluginStore with the main store and plugin ID.\n   * @param store The main store instance.\n   * @param pluginId The unique identifier for the plugin.\n   */\n  constructor(t, e) {\n    this.store = t, this.pluginId = e;\n  }\n  /**\n   * Gets the current state of the plugin.\n   * @returns The plugin's state.\n   */\n  getState() {\n    return this.store.getState().plugins[this.pluginId];\n  }\n  /**\n   * Dispatches an action for the plugin and returns the *new* global state.\n   * If you only need the plugin’s updated state, call `getState()` afterward.\n   * @param action The action to dispatch.\n   * @returns The updated global store state (after plugin reducer).\n   */\n  dispatch(t) {\n    return this.store.dispatchToPlugin(this.pluginId, t);\n  }\n  /**\n   * Subscribes to state changes only for this specific plugin.\n   * You now receive (action, newPluginState, oldPluginState) in the callback.\n   *\n   * @param listener The callback to invoke when plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToState(t) {\n    return this.store.subscribeToPlugin(this.pluginId, (e, i, r) => {\n      t(\n        e,\n        i,\n        r\n      );\n    });\n  }\n  /**\n   * Subscribes to a specific action type for the plugin.\n   * This still uses the main store's `onAction`, so you get the *global*\n   * old/new store states there. If you specifically want old/new plugin state,\n   * use `subscribeToState` instead.\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction(t, e) {\n    return this.store.onAction(t, (i, r, n) => {\n      e(\n        i,\n        r.plugins[this.pluginId],\n        n.plugins[this.pluginId]\n      );\n    });\n  }\n}\nconst S = \"LOAD_DOCUMENT\", m = \"SET_DOCUMENT\", b = \"SET_DOCUMENT_ERROR\", E = \"SET_SCALE\", P = \"SET_ROTATION\", R = \"SET_PAGES\", D = [\n  S,\n  m,\n  b,\n  E,\n  P,\n  R\n], K = () => ({ type: S }), B = (s) => ({\n  type: m,\n  payload: s\n}), W = (s) => ({\n  type: b,\n  payload: s\n}), Y = (s) => ({ type: E, payload: s }), H = (s) => ({\n  type: P,\n  payload: s\n}), J = (s) => ({\n  type: R,\n  payload: s\n});\nclass $ {\n  /**\n   * Initializes the store with the provided core state.\n   * @param reducer          The core reducer function\n   * @param initialCoreState The initial core state\n   */\n  constructor(t, e) {\n    this.initialCoreState = e, this.pluginReducers = {}, this.listeners = [], this.pluginListeners = {}, this.state = { core: e, plugins: {} }, this.coreReducer = t;\n  }\n  /**\n   * Adds a reducer for a plugin-specific state.\n   * @param pluginId The unique identifier for the plugin.\n   * @param reducer The reducer function for the plugin state.\n   * @param initialState The initial state for the plugin.\n   */\n  addPluginReducer(t, e, i) {\n    this.state.plugins[t] = i, this.pluginReducers[t] = e;\n  }\n  /**\n   * Dispatches an action *only* to the core reducer.\n   * Notifies the global store listeners with (action, newState, oldState).\n   *\n   * @param action The action to dispatch, typed as CoreAction\n   * @returns The updated *global* store state\n   */\n  dispatchToCore(t) {\n    if (!this.coreReducer)\n      return this.getState();\n    const e = this.getState();\n    this.state.core = this.coreReducer(this.state.core, t);\n    const i = this.getState();\n    return this.listeners.forEach((r) => r(t, i, e)), i;\n  }\n  /**\n   * Dispatches an action *only* to a specific plugin.\n   * Optionally notifies global store listeners if `notifyGlobal` is true.\n   * Always notifies plugin-specific listeners with (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId   The plugin identifier\n   * @param action     The plugin action to dispatch\n   * @param notifyGlobal Whether to also notify global store listeners\n   * @returns The updated *global* store state\n   */\n  dispatchToPlugin(t, e, i = !0) {\n    const r = this.getState(), n = this.pluginReducers[t];\n    if (!n)\n      return r;\n    const o = r.plugins[t], a = n(o, e);\n    this.state.plugins[t] = a;\n    const l = this.getState();\n    return i && this.listeners.forEach((h) => h(e, l, r)), this.pluginListeners[t] && this.pluginListeners[t].forEach((h) => {\n      h(e, a, o);\n    }), a;\n  }\n  /**\n   * Dispatches an action to update the state using:\n   * - the core reducer (if it's a CoreAction)\n   * - *all* plugin reducers (regardless of action type), with no global notify for each plugin\n   *\n   * Returns the new *global* store state after all reducers have processed the action.\n   *\n   * @param action The action to dispatch (can be CoreAction or any Action).\n   */\n  dispatch(t) {\n    const e = this.getState();\n    this.isCoreAction(t) && (this.state.core = this.coreReducer(this.state.core, t));\n    for (const r in this.pluginReducers) {\n      const n = this.pluginReducers[r], o = e.plugins[r];\n      n && (this.state.plugins[r] = n(o, t));\n    }\n    const i = this.getState();\n    return this.listeners.forEach((r) => r(t, i, e)), i;\n  }\n  /**\n   * Returns a shallow copy of the current state.\n   * @returns The current store state.\n   */\n  getState() {\n    return {\n      core: { ...this.state.core },\n      plugins: { ...this.state.plugins }\n    };\n  }\n  /**\n   * Subscribes a listener to *global* state changes.\n   * The callback signature is now (action, newState, oldState).\n   *\n   * @param listener The callback to invoke on state changes\n   * @returns A function to unsubscribe the listener\n   */\n  subscribe(t) {\n    return this.listeners.push(t), () => {\n      this.listeners = this.listeners.filter((e) => e !== t);\n    };\n  }\n  /**\n   * Subscribes a listener to *plugin-specific* state changes.\n   * The callback signature is now (action, newPluginState, oldPluginState).\n   *\n   * @param pluginId The unique identifier for the plugin.\n   * @param listener The callback to invoke on plugin state changes.\n   * @returns A function to unsubscribe the listener.\n   */\n  subscribeToPlugin(t, e) {\n    if (!(t in this.state.plugins))\n      throw new Error(\n        `Plugin state not found for plugin \"${t}\". Did you forget to call addPluginReducer?`\n      );\n    return this.pluginListeners[t] || (this.pluginListeners[t] = []), this.pluginListeners[t].push(e), () => {\n      this.pluginListeners[t] = this.pluginListeners[t].filter((i) => i !== e), this.pluginListeners[t].length === 0 && delete this.pluginListeners[t];\n    };\n  }\n  /**\n   * Subscribes to a specific action type (only from the core's action union).\n   * The callback signature is (action, newState, oldState).\n   *\n   * @param type The action type to listen for.\n   * @param handler The callback to invoke when the action occurs.\n   * @returns A function to unsubscribe the handler.\n   */\n  onAction(t, e) {\n    return this.subscribe((i, r, n) => {\n      i.type === t && e(i, r, n);\n    });\n  }\n  /**\n   * Gets a PluginStore handle for a specific plugin.\n   * @param pluginId The unique identifier for the plugin.\n   * @returns A PluginStore instance for the plugin.\n   */\n  getPluginStore(t) {\n    if (!(t in this.state.plugins))\n      throw new Error(\n        `Plugin state not found for plugin \"${t}\". Did you forget to call addPluginReducer?`\n      );\n    return new M(this, t);\n  }\n  /**\n   * Helper method to check if an action is a CoreAction.\n   * Adjust if you have a more refined way to differentiate CoreAction vs. any other Action.\n   */\n  isCoreAction(t) {\n    return D.includes(t.type);\n  }\n  /**\n   * Destroy the store: drop every listener and plugin reducer\n   */\n  destroy() {\n    var t, e;\n    this.listeners.length = 0;\n    for (const i in this.pluginListeners)\n      (e = (t = this.pluginListeners[i]) == null ? void 0 : t.splice) == null || e.call(t, 0);\n    this.pluginListeners = {}, this.pluginReducers = {}, this.state.plugins = {}, this.state.core = { ...this.initialCoreState };\n  }\n}\nconst _ = (s) => ({\n  scale: (s == null ? void 0 : s.scale) ?? 1,\n  rotation: (s == null ? void 0 : s.rotation) ?? T.Degree0,\n  document: null,\n  pages: [],\n  loading: !1,\n  error: null\n}), Q = (s) => s.pages.map(\n  (t) => t.map((e) => ({\n    ...e,\n    rotatedSize: A(e.size, s.rotation, 1)\n  }))\n), L = (s, t) => {\n  switch (t.type) {\n    case S:\n      return {\n        ...s,\n        loading: !0,\n        error: null\n      };\n    case m:\n      return {\n        ...s,\n        document: t.payload,\n        pages: t.payload.pages.map((e) => [e]),\n        loading: !1,\n        error: null\n      };\n    case P:\n      return {\n        ...s,\n        rotation: t.payload\n      };\n    case R:\n      return {\n        ...s,\n        pages: t.payload\n      };\n    case b:\n      return {\n        ...s,\n        loading: !1,\n        error: t.payload\n      };\n    case E:\n      return {\n        ...s,\n        scale: t.payload\n      };\n    default:\n      return s;\n  }\n};\nclass V {\n  constructor(t, e) {\n    this.plugins = /* @__PURE__ */ new Map(), this.manifests = /* @__PURE__ */ new Map(), this.capabilities = /* @__PURE__ */ new Map(), this.status = /* @__PURE__ */ new Map(), this.configurations = /* @__PURE__ */ new Map(), this.engineInitialized = !1, this.initPromise = null, this.pendingRegistrations = [], this.processingRegistrations = [], this.initialized = !1, this.isInitializing = !1, this.pluginsReadyPromise = null, this.destroyed = !1, this.resolver = new C(), this.engine = t, this.initialCoreState = _(e), this.store = new $(L, this.initialCoreState);\n  }\n  /**\n   * Ensure engine is initialized before proceeding\n   */\n  async ensureEngineInitialized() {\n    this.engineInitialized || (this.engine.initialize ? (await this.engine.initialize().toPromise(), this.engineInitialized = !0) : this.engineInitialized = !0);\n  }\n  /**\n   * Register a plugin without initializing it\n   */\n  registerPlugin(t, e) {\n    if (this.initialized && !this.isInitializing)\n      throw new u(\"Cannot register plugins after initialization\");\n    this.validateManifest(t.manifest), this.store.addPluginReducer(\n      t.manifest.id,\n      // We need one type assertion here since we can't fully reconcile TAction with Action\n      // due to TypeScript's type system limitations with generic variance\n      t.reducer,\n      typeof t.initialState == \"function\" ? t.initialState(\n        this.initialCoreState,\n        {\n          ...t.manifest.defaultConfig,\n          ...e\n        }\n      ) : t.initialState\n    ), this.pendingRegistrations.push({\n      package: t,\n      config: e\n    });\n  }\n  /**\n   * Get the central store instance\n   */\n  getStore() {\n    return this.store;\n  }\n  /**\n   * Get the engine instance\n   */\n  getEngine() {\n    return this.engine;\n  }\n  /**\n   * Get a promise that resolves when all plugins are ready\n   */\n  pluginsReady() {\n    return this.pluginsReadyPromise ? this.pluginsReadyPromise : (this.pluginsReadyPromise = (async () => {\n      this.initialized || await this.initialize();\n      const t = Array.from(this.plugins.values()).map(\n        (e) => typeof e.ready == \"function\" ? e.ready() : Promise.resolve()\n      );\n      await Promise.all(t);\n    })(), this.pluginsReadyPromise);\n  }\n  /**\n   * INITIALISE THE REGISTRY – runs once no-matter-how-many calls   *\n   */\n  async initialize() {\n    if (this.destroyed)\n      throw new u(\"Registry has been destroyed\");\n    return this.initPromise ? this.initPromise : (this.initPromise = (async () => {\n      var t;\n      if (this.initialized)\n        throw new u(\"Registry is already initialized\");\n      this.isInitializing = !0;\n      try {\n        if (await this.ensureEngineInitialized(), this.destroyed)\n          return;\n        for (; this.pendingRegistrations.length > 0; ) {\n          if (this.destroyed)\n            return;\n          this.processingRegistrations = [...this.pendingRegistrations], this.pendingRegistrations = [];\n          for (const i of this.processingRegistrations) {\n            const r = /* @__PURE__ */ new Set(), n = [...i.package.manifest.requires, ...i.package.manifest.optional];\n            for (const o of n) {\n              const a = this.processingRegistrations.find(\n                (l) => l.package.manifest.provides.includes(o)\n              );\n              a && r.add(a.package.manifest.id);\n            }\n            this.resolver.addNode(i.package.manifest.id, [...r]);\n          }\n          const e = this.resolver.resolveLoadOrder();\n          for (const i of e) {\n            const r = this.processingRegistrations.find((n) => n.package.manifest.id === i);\n            await this.initializePlugin(r.package.manifest, r.package.create, r.config);\n          }\n          this.processingRegistrations = [], this.resolver = new C();\n        }\n        for (const e of this.plugins.values())\n          await ((t = e.postInitialize) == null ? void 0 : t.call(e).catch((i) => {\n            console.error(`Error in postInitialize for plugin ${e.id}`, i), this.status.set(e.id, \"error\");\n          }));\n        this.initialized = !0;\n      } catch (e) {\n        throw e instanceof Error ? new z(\n          `Failed to resolve plugin dependencies: ${e.message}`\n        ) : e;\n      } finally {\n        this.isInitializing = !1;\n      }\n    })(), this.initPromise);\n  }\n  /**\n   * Initialize a single plugin with all necessary checks\n   */\n  async initializePlugin(t, e, i) {\n    const r = {\n      ...t.defaultConfig,\n      ...i\n    };\n    this.validateConfig(t.id, r, t.defaultConfig);\n    const n = e(this, this.engine, r);\n    this.validatePlugin(n);\n    for (const o of t.requires)\n      if (!this.capabilities.has(o))\n        throw new u(\n          `Missing required capability: ${o} for plugin ${t.id}`\n        );\n    for (const o of t.optional)\n      this.capabilities.has(o) && console.debug(`Optional capability ${o} is available for plugin ${t.id}`);\n    console.log(\"initializePlugin\", t.id, t.provides);\n    for (const o of t.provides) {\n      if (this.capabilities.has(o))\n        throw new u(\n          `Capability ${o} is already provided by plugin ${this.capabilities.get(o)}`\n        );\n      this.capabilities.set(o, t.id);\n    }\n    this.plugins.set(t.id, n), this.manifests.set(t.id, t), this.status.set(t.id, \"registered\"), this.configurations.set(t.id, r);\n    try {\n      n.initialize && await n.initialize(r), this.status.set(t.id, \"active\");\n    } catch (o) {\n      throw this.plugins.delete(t.id), this.manifests.delete(t.id), console.log(\"initializePlugin failed\", t.id, t.provides), t.provides.forEach((a) => this.capabilities.delete(a)), o;\n    }\n  }\n  getPluginConfig(t) {\n    const e = this.configurations.get(t);\n    if (!e)\n      throw new d(`Configuration for plugin ${t} not found`);\n    return e;\n  }\n  validateConfig(t, e, i) {\n    const n = Object.keys(i).filter((o) => !e.hasOwnProperty(o));\n    if (n.length > 0)\n      throw new O(\n        `Missing required configuration keys for plugin ${t}: ${n.join(\", \")}`\n      );\n  }\n  async updatePluginConfig(t, e) {\n    const i = this.getPlugin(t);\n    if (!i)\n      throw new d(`Plugin ${t} not found`);\n    const r = this.manifests.get(t), n = this.configurations.get(t);\n    if (!r || !n)\n      throw new d(`Plugin ${t} not found`);\n    const o = {\n      ...n,\n      ...e\n    };\n    this.validateConfig(t, o, r.defaultConfig), this.configurations.set(t, o), i.initialize && await i.initialize(o);\n  }\n  /**\n   * Register multiple plugins at once\n   */\n  registerPluginBatch(t) {\n    for (const e of t)\n      this.registerPlugin(e.package, e.config);\n  }\n  /**\n   * Unregister a plugin\n   */\n  async unregisterPlugin(t) {\n    const e = this.plugins.get(t);\n    if (!e)\n      throw new d(`Plugin ${t} is not registered`);\n    const i = this.manifests.get(t);\n    if (!i)\n      throw new d(`Manifest for plugin ${t} not found`);\n    for (const [r, n] of this.manifests.entries()) {\n      if (r === t) continue;\n      if ([...n.requires, ...n.optional].some(\n        (a) => i.provides.includes(a)\n      ))\n        throw new u(\n          `Cannot unregister plugin ${t}: plugin ${r} depends on it`\n        );\n    }\n    try {\n      e.destroy && await e.destroy();\n      for (const r of i.provides)\n        this.capabilities.delete(r);\n      this.plugins.delete(t), this.manifests.delete(t), this.status.delete(t);\n    } catch (r) {\n      throw r instanceof Error ? new Error(`Failed to unregister plugin ${t}: ${r.message}`) : r;\n    }\n  }\n  /**\n   * Get a plugin instance\n   * @param pluginId The ID of the plugin to get\n   * @returns The plugin instance or null if not found\n   */\n  getPlugin(t) {\n    const e = this.plugins.get(t);\n    return e || null;\n  }\n  /**\n   * Get a plugin that provides a specific capability\n   * @param capability The capability to get a provider for\n   * @returns The plugin providing the capability or null if not found\n   */\n  getCapabilityProvider(t) {\n    const e = this.capabilities.get(t);\n    return e ? this.getPlugin(e) : null;\n  }\n  /**\n   * Check if a capability is available\n   */\n  hasCapability(t) {\n    return this.capabilities.has(t);\n  }\n  /**\n   * Get all registered plugins\n   */\n  getAllPlugins() {\n    return Array.from(this.plugins.values());\n  }\n  /**\n   * Get plugin status\n   */\n  getPluginStatus(t) {\n    const e = this.status.get(t);\n    if (!e)\n      throw new d(`Plugin ${t} not found`);\n    return e;\n  }\n  /**\n   * Validate plugin object\n   */\n  validatePlugin(t) {\n    if (!t.id)\n      throw new u(\"Plugin must have an id\");\n  }\n  /**\n   * Validate plugin manifest\n   */\n  validateManifest(t) {\n    if (!t.id)\n      throw new u(\"Manifest must have an id\");\n    if (!t.name)\n      throw new u(\"Manifest must have a name\");\n    if (!t.version)\n      throw new u(\"Manifest must have a version\");\n    if (!Array.isArray(t.provides))\n      throw new u(\"Manifest must have a provides array\");\n    if (!Array.isArray(t.requires))\n      throw new u(\"Manifest must have a requires array\");\n    if (!Array.isArray(t.optional))\n      throw new u(\"Manifest must have an optional array\");\n  }\n  isDestroyed() {\n    return this.destroyed;\n  }\n  /**\n   * DESTROY EVERYTHING – waits for any ongoing initialise(), once  *\n   */\n  async destroy() {\n    var t;\n    if (this.destroyed) throw new u(\"Registry has already been destroyed\");\n    this.destroyed = !0;\n    try {\n      await this.initPromise;\n    } catch {\n    }\n    for (const e of Array.from(this.plugins.values()).reverse())\n      await ((t = e.destroy) == null ? void 0 : t.call(e));\n    this.store.destroy(), this.plugins.clear(), this.manifests.clear(), this.capabilities.clear(), this.status.clear(), this.pendingRegistrations.length = 0, this.processingRegistrations.length = 0;\n  }\n}\nfunction X(s, t) {\n  return {\n    package: s,\n    config: t\n  };\n}\nclass Z {\n  constructor(t, e) {\n    if (this.id = t, this.registry = e, this.debouncedActions = {}, this.unsubscribeFromState = null, this.unsubscribeFromCoreStore = null, t !== this.constructor.id)\n      throw new Error(\n        `Plugin ID mismatch: ${t} !== ${this.constructor.id}`\n      );\n    this.coreStore = this.registry.getStore(), this.pluginStore = this.coreStore.getPluginStore(this.id), this.unsubscribeFromState = this.pluginStore.subscribeToState((i, r, n) => {\n      this.onStoreUpdated(n, r);\n    }), this.unsubscribeFromCoreStore = this.coreStore.subscribe((i, r, n) => {\n      this.onCoreStoreUpdated(n, r);\n    }), this.readyPromise = new Promise((i) => {\n      this.readyResolve = i;\n    }), this.readyResolve();\n  }\n  provides() {\n    if (!this._capability) {\n      const t = this.buildCapability();\n      this._capability = Object.freeze(t);\n    }\n    return this._capability;\n  }\n  /**\n   *  Get a copy of the current state\n   */\n  get state() {\n    return this.pluginStore.getState();\n  }\n  /**\n   *  Get a copy of the current core state\n   */\n  get coreState() {\n    return this.coreStore.getState();\n  }\n  /**\n   * @deprecated  use `this.state` Get a copy of the current state\n   */\n  getState() {\n    return this.pluginStore.getState();\n  }\n  /**\n   * @deprecated  use `this.coreState` Get a copy of the current core state\n   */\n  getCoreState() {\n    return this.coreStore.getState();\n  }\n  /**\n   * Core Dispatch\n   */\n  dispatchCoreAction(t) {\n    return this.coreStore.dispatchToCore(t);\n  }\n  /**\n   * Dispatch an action to all plugins\n   */\n  dispatchToAllPlugins(t) {\n    return this.coreStore.dispatch(t);\n  }\n  /**\n   * Dispatch an action\n   */\n  dispatch(t) {\n    return this.pluginStore.dispatch(t);\n  }\n  /**\n   * Dispatch an action with debouncing to prevent rapid repeated calls\n   * @param action The action to dispatch\n   * @param debounceTime Time in ms to debounce (default: 100ms)\n   * @returns boolean indicating whether the action was dispatched or debounced\n   */\n  debouncedDispatch(t, e = 100) {\n    const i = Date.now(), r = this.debouncedActions[t.type] || 0;\n    return i - r >= e ? (this.debouncedActions[t.type] = i, this.dispatch(t), !0) : !1;\n  }\n  /**\n   * Subscribe to state changes\n   */\n  subscribe(t) {\n    return this.pluginStore.subscribeToState(t);\n  }\n  /**\n   * Subscribe to core store changes\n   */\n  subscribeToCoreStore(t) {\n    return this.coreStore.subscribe(t);\n  }\n  /**\n   * Called when the plugin store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  onStoreUpdated(t, e) {\n  }\n  /**\n   * Called when the core store state is updated\n   * @param oldState Previous state\n   * @param newState New state\n   */\n  onCoreStoreUpdated(t, e) {\n  }\n  /**\n   * Cleanup method to be called when plugin is being destroyed\n   */\n  destroy() {\n    this.unsubscribeFromState && (this.unsubscribeFromState(), this.unsubscribeFromState = null), this.unsubscribeFromCoreStore && (this.unsubscribeFromCoreStore(), this.unsubscribeFromCoreStore = null);\n  }\n  /**\n   * Returns a promise that resolves when the plugin is ready\n   */\n  ready() {\n    return this.readyPromise;\n  }\n  /**\n   * Mark the plugin as ready\n   */\n  markReady() {\n    this.readyResolve();\n  }\n  /**\n   * Reset the ready state (useful for plugins that need to reinitialize)\n   */\n  resetReady() {\n    this.readyPromise = new Promise((t) => {\n      this.readyResolve = t;\n    });\n  }\n}\nclass N {\n  constructor(t, e) {\n    this.handler = t, this.options = e, this.lastRun = 0, this.handle = (i) => {\n      this.options.mode === \"debounce\" ? this.debounce(i) : this.throttle(i);\n    };\n  }\n  debounce(t) {\n    this.timeoutId && window.clearTimeout(this.timeoutId), this.timeoutId = window.setTimeout(() => {\n      this.handler(t), this.timeoutId = void 0;\n    }, this.options.wait);\n  }\n  throttle(t) {\n    if (this.options.mode === \"debounce\") return;\n    const e = Date.now(), i = this.options.throttleMode || \"leading-trailing\";\n    e - this.lastRun >= this.options.wait && (i === \"leading-trailing\" && this.handler(t), this.lastRun = e), this.timeoutId && window.clearTimeout(this.timeoutId), this.timeoutId = window.setTimeout(\n      () => {\n        this.handler(t), this.lastRun = Date.now(), this.timeoutId = void 0;\n      },\n      this.options.wait - (e - this.lastRun)\n    );\n  }\n  destroy() {\n    this.timeoutId && window.clearTimeout(this.timeoutId);\n  }\n}\nfunction tt(s, t, e) {\n  return s < t ? t : s > e ? e : s;\n}\nfunction f(s, t, e) {\n  if (s === t)\n    return !0;\n  if (s == null || t == null)\n    return s === t;\n  const i = typeof s;\n  if (i !== typeof t) return !1;\n  if (i === \"object\") {\n    e || (e = /* @__PURE__ */ new Set());\n    const n = F(s, t);\n    if (e.has(n))\n      return !0;\n    e.add(n);\n    const o = Array.isArray(s), a = Array.isArray(t);\n    return o && a ? q(s, t, e) : !o && !a ? I(s, t, e) : !1;\n  }\n  return !1;\n}\nfunction F(s, t) {\n  return `${v(s)}__${v(t)}`;\n}\nlet k = 0;\nconst w = /* @__PURE__ */ new WeakMap();\nfunction v(s) {\n  return w.has(s) || w.set(s, ++k), w.get(s);\n}\nfunction q(s, t, e) {\n  if (s.length !== t.length) return !1;\n  const i = new Array(t.length).fill(!1);\n  t: for (let r = 0; r < s.length; r++) {\n    const n = s[r];\n    for (let o = 0; o < t.length; o++)\n      if (!i[o] && f(n, t[o], e)) {\n        i[o] = !0;\n        continue t;\n      }\n    return !1;\n  }\n  return !0;\n}\nfunction I(s, t, e) {\n  const i = Object.keys(s).sort(), r = Object.keys(t).sort();\n  if (i.length !== r.length) return !1;\n  for (let n = 0; n < i.length; n++)\n    if (i[n] !== r[n]) return !1;\n  for (const n of i) {\n    const o = s[n], a = t[n];\n    if (!f(o, a, e))\n      return !1;\n  }\n  return !0;\n}\nfunction et() {\n  const s = /* @__PURE__ */ new Set();\n  return {\n    emit: (e = void 0) => s.forEach((i) => i(e)),\n    on: (e) => (s.add(e), () => s.delete(e)),\n    off: (e) => s.delete(e),\n    clear: () => s.clear()\n  };\n}\nfunction it(s, t = f) {\n  const e = /* @__PURE__ */ new Set(), i = /* @__PURE__ */ new Map();\n  let r = s;\n  const n = (a) => e.forEach((l) => l(a)), o = (a, l) => {\n    let h = a, g = () => {\n    };\n    if (l) {\n      const c = new N(a, l);\n      h = c.handle, g = () => c.destroy(), i.set(a, { wrapped: h, destroy: g });\n    }\n    return r !== void 0 && h(r), e.add(h), () => {\n      e.delete(h), g(), i.delete(a);\n    };\n  };\n  return {\n    /* emitter behaviour ---------------------------------------- */\n    get value() {\n      return r;\n    },\n    emit(a = void 0) {\n      (r === void 0 || !t(r, a)) && (r = a, n(a));\n    },\n    on: o,\n    off(a) {\n      const l = i.get(a);\n      l ? (e.delete(l.wrapped), l.destroy(), i.delete(a)) : e.delete(a);\n    },\n    clear() {\n      e.clear(), i.forEach((a) => a.destroy()), i.clear();\n    },\n    /* derived hook --------------------------------------------- */\n    select(a, l = f) {\n      return (h, g) => {\n        let c;\n        if (r !== void 0) {\n          const p = a(r);\n          c = p, h(p);\n        }\n        return o(\n          (p) => {\n            const y = a(p);\n            (c === void 0 || !l(c, y)) && (c = y, h(y));\n          },\n          g\n        );\n      };\n    }\n  };\n}\nfunction st(s) {\n  return Object.entries(s).map(([t, e]) => {\n    const i = Number(t);\n    return [Number.isFinite(i) && t.trim() !== \"\" ? i : t, e];\n  });\n}\nexport {\n  Z as BasePlugin,\n  D as CORE_ACTION_TYPES,\n  G as CapabilityConflictError,\n  j as CapabilityNotFoundError,\n  z as CircularDependencyError,\n  C as DependencyResolver,\n  N as EventControl,\n  S as LOAD_DOCUMENT,\n  O as PluginConfigurationError,\n  x as PluginInitializationError,\n  d as PluginNotFoundError,\n  u as PluginRegistrationError,\n  V as PluginRegistry,\n  m as SET_DOCUMENT,\n  b as SET_DOCUMENT_ERROR,\n  R as SET_PAGES,\n  P as SET_ROTATION,\n  E as SET_SCALE,\n  f as arePropsEqual,\n  tt as clamp,\n  it as createBehaviorEmitter,\n  et as createEmitter,\n  X as createPluginRegistration,\n  st as enumEntries,\n  Q as getPagesWithRotatedSize,\n  _ as initialCoreState,\n  K as loadDocument,\n  B as setDocument,\n  W as setDocumentError,\n  J as setPages,\n  H as setRotation,\n  Y as setScale\n};\n//# sourceMappingURL=index.js.map\n","import { Rotation } from '@embedpdf/models';\n\n/**\n * Returns the 6-tuple you can drop straight into\n * `matrix(a,b,c,d,e,f)` or a ready-made CSS string.\n * Rotation is clockwise, origin = top-left (0 0).\n *\n * ── Note on e,f ───────────────────────────────\n * For 0°/180° no translation is needed.\n * For 90°/270° you may want to pass the page\n * height / width so the page stays in positive\n * coordinates.  Keep them 0 and handle layout\n * elsewhere if that’s what you do today.\n */\nexport function rotationMatrix(\n  rotation: Rotation,\n  w: number,\n  h: number,\n  asString = true,\n): [number, number, number, number, number, number] | string {\n  let a = 1,\n    b = 0,\n    c = 0,\n    d = 1,\n    e = 0,\n    f = 0;\n\n  switch (rotation) {\n    case 1: // 90°\n      a = 0;\n      b = 1;\n      c = -1;\n      d = 0;\n      e = h;\n      break;\n    case 2: // 180°\n      a = -1;\n      b = 0;\n      c = 0;\n      d = -1;\n      e = w;\n      f = h;\n      break;\n    case 3: // 270°\n      a = 0;\n      b = -1;\n      c = 1;\n      d = 0;\n      f = w;\n      break;\n  }\n  return asString ? `matrix(${a},${b},${c},${d},${e},${f})` : [a, b, c, d, e, f];\n}\n","import { BasePlugin, createBehaviorEmitter, PluginRegistry, setRotation } from '@embedpdf/core';\nimport { Rotation } from '@embedpdf/models';\nimport { RotateCapability, RotatePluginConfig } from './types';\nimport { rotationMatrix } from './utils';\n\nfunction getNextRotation(current: Rotation): Rotation {\n  return ((current + 1) % 4) as Rotation;\n}\n\nfunction getPreviousRotation(current: Rotation): Rotation {\n  return ((current + 3) % 4) as Rotation; // +3 is equivalent to -1 in modulo 4\n}\n\nexport class RotatePlugin extends BasePlugin<RotatePluginConfig, RotateCapability> {\n  static readonly id = 'rotate' as const;\n  private readonly rotate$ = createBehaviorEmitter<Rotation>();\n\n  constructor(id: string, registry: PluginRegistry, cfg: RotatePluginConfig) {\n    super(id, registry);\n    this.resetReady();\n    const rotation = cfg.defaultRotation ?? this.coreState.core.rotation;\n    this.setRotation(rotation);\n    this.markReady();\n  }\n\n  async initialize(_config: RotatePluginConfig): Promise<void> {}\n\n  private setRotation(rotation: Rotation): void {\n    const pages = this.coreState.core.pages;\n    if (!pages) {\n      throw new Error('Pages not loaded');\n    }\n\n    this.dispatchCoreAction(setRotation(rotation));\n  }\n\n  private rotateForward(): void {\n    const rotation = getNextRotation(this.coreState.core.rotation);\n    this.setRotation(rotation);\n  }\n\n  private rotateBackward(): void {\n    const rotation = getPreviousRotation(this.coreState.core.rotation);\n    this.setRotation(rotation);\n  }\n\n  protected buildCapability(): RotateCapability {\n    return {\n      onRotateChange: this.rotate$.on,\n      setRotation: (rotation) => this.setRotation(rotation),\n      getRotation: () => this.coreState.core.rotation,\n      rotateForward: () => this.rotateForward(),\n      rotateBackward: () => this.rotateBackward(),\n      getMatrix: ({ w = 0, h = 0, asString = true } = {}) =>\n        rotationMatrix(this.coreState.core.rotation, w, h, asString),\n    };\n  }\n\n  async destroy(): Promise<void> {\n    this.rotate$.clear();\n    super.destroy();\n  }\n}\n"],"names":["PdfSoftHyphenMarker","PdfZeroWidthSpace","PdfWordJoiner","PdfBomOrZwnbsp","PdfNonCharacterFFFE","PdfNonCharacterFFFF","PdfUnwantedTextMarkers","BLEND_MODE_INFOS","m","info","PdfAnnotationFlagName","acc","bit","name","P","H","s","Z","e","i","r","N","f","n","F","o","q","I","v","k","w","a","it","l","h","g","c","p","y","rotationMatrix","rotation","asString","b","d","getNextRotation","current","getPreviousRotation","_RotatePlugin","BasePlugin","id","registry","cfg","createBehaviorEmitter","_config","setRotation","RotatePlugin"],"mappings":"AAmtBA,IAAIA,IAAsB,KACtBC,IAAoB,KACpBC,IAAgB,KAChBC,IAAiB,UACjBC,IAAsB,KACtBC,IAAsB,KACtBC,IAAyB,OAAO,OAAO;AAAA,EACzCN;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AAAA,EACAC;AACF,CAAC;AAC0B,IAAI,OAAO,IAAIC,EAAuB,KAAK,EAAE,CAAC,KAAK,GAAG;AAiCjF,IAAIC,IAAmB,OAAO,OAAO;AAAA,EACnC,EAAE,IAAI,GAAgB,OAAO,UAAU,KAAK,SAAQ;AAAA,EACpD,EAAE,IAAI,GAAkB,OAAO,YAAY,KAAK,WAAU;AAAA,EAC1D,EAAE,IAAI,GAAgB,OAAO,UAAU,KAAK,SAAQ;AAAA,EACpD,EAAE,IAAI,GAAiB,OAAO,WAAW,KAAK,UAAS;AAAA,EACvD,EAAE,IAAI,GAAgB,OAAO,UAAU,KAAK,SAAQ;AAAA,EACpD,EAAE,IAAI,GAAiB,OAAO,WAAW,KAAK,UAAS;AAAA,EACvD,EAAE,IAAI,GAAoB,OAAO,eAAe,KAAK,cAAa;AAAA,EAClE,EAAE,IAAI,GAAmB,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/D,EAAE,IAAI,GAAmB,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/D,EAAE,IAAI,GAAmB,OAAO,cAAc,KAAK,aAAY;AAAA,EAC/D,EAAE,IAAI,IAAqB,OAAO,cAAc,KAAK,aAAY;AAAA,EACjE,EAAE,IAAI,IAAoB,OAAO,aAAa,KAAK,YAAW;AAAA,EAC9D,EAAE,IAAI,IAAc,OAAO,OAAO,KAAK,MAAK;AAAA,EAC5C,EAAE,IAAI,IAAqB,OAAO,cAAc,KAAK,aAAY;AAAA,EACjE,EAAE,IAAI,IAAgB,OAAO,SAAS,KAAK,QAAO;AAAA,EAClD,EAAE,IAAI,IAAqB,OAAO,cAAc,KAAK,aAAY;AACnE,CAAC;AACgBA,EAAiB;AAAA,EAChC,CAACC,GAAGC,OACFD,EAAEC,EAAK,EAAE,IAAIA,GACND;AAAA,EAET,CAAA;AACF;AACgBD,EAAiB,OAAO,CAACC,GAAGC,OAC1CD,EAAEC,EAAK,GAAG,IAAIA,EAAK,IACZD,IACN,CAAA,CAAE;AAkBwBD,EAAiB,IAAI,CAACE,OAAU;AAAA,EAC3D,OAAOA,EAAK;AAAA,EACZ,OAAOA,EAAK;AACd,EAAE;AAyKF,IAAIC,IAAwB,OAAO,OAAO;AAAA,EACvC,GAAoB;AAAA,EACpB,GAAiB;AAAA,EACjB,GAAgB;AAAA,EAChB,GAAkB;AAAA,EAClB,IAAqB;AAAA,EACrB,IAAmB;AAAA,EACnB,IAAqB;AAAA,EACrB,KAAmB;AAAA,EACnB,KAA0B;AAC7B,CAAC;AAC4B,OAAO;AAAA,EAClCA;AACF,EAAE;AAAA,EACA,CAACC,GAAK,CAACC,GAAKC,CAAI,OACdF,EAAIE,CAAI,IAAI,OAAOD,CAAG,GACfD;AAAA,EAET,CAAA;AACF;ACt2BK,MAAqFG,IAAI,gBAapDC,IAAI,CAACC,OAAO;AAAA,EACpD,MAAMF;AAAA,EACN,SAASE;AACX;AAofA,MAAMC,EAAE;AAAA,EACN,YAAY,GAAGC,GAAG;AAChB,QAAI,KAAK,KAAK,GAAG,KAAK,WAAWA,GAAG,KAAK,mBAAmB,CAAA,GAAI,KAAK,uBAAuB,MAAM,KAAK,2BAA2B,MAAM,MAAM,KAAK,YAAY;AAC7J,YAAM,IAAI;AAAA,QACR,uBAAuB,CAAC,QAAQ,KAAK,YAAY,EAAE;AAAA,MAC3D;AACI,SAAK,YAAY,KAAK,SAAS,YAAY,KAAK,cAAc,KAAK,UAAU,eAAe,KAAK,EAAE,GAAG,KAAK,uBAAuB,KAAK,YAAY,iBAAiB,CAACC,GAAGC,GAAG,MAAM;AAC/K,WAAK,eAAe,GAAGA,CAAC;AAAA,IAC1B,CAAC,GAAG,KAAK,2BAA2B,KAAK,UAAU,UAAU,CAACD,GAAGC,GAAG,MAAM;AACxE,WAAK,mBAAmB,GAAGA,CAAC;AAAA,IAC9B,CAAC,GAAG,KAAK,eAAe,IAAI,QAAQ,CAACD,MAAM;AACzC,WAAK,eAAeA;AAAA,IACtB,CAAC,GAAG,KAAK,aAAY;AAAA,EACvB;AAAA,EACA,WAAW;AACT,QAAI,CAAC,KAAK,aAAa;AACrB,YAAM,IAAI,KAAK,gBAAe;AAC9B,WAAK,cAAc,OAAO,OAAO,CAAC;AAAA,IACpC;AACA,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,QAAQ;AACV,WAAO,KAAK,YAAY,SAAQ;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,IAAI,YAAY;AACd,WAAO,KAAK,UAAU,SAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,WAAW;AACT,WAAO,KAAK,YAAY,SAAQ;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,eAAe;AACb,WAAO,KAAK,UAAU,SAAQ;AAAA,EAChC;AAAA;AAAA;AAAA;AAAA,EAIA,mBAAmB,GAAG;AACpB,WAAO,KAAK,UAAU,eAAe,CAAC;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB,GAAG;AACtB,WAAO,KAAK,UAAU,SAAS,CAAC;AAAA,EAClC;AAAA;AAAA;AAAA;AAAA,EAIA,SAAS,GAAG;AACV,WAAO,KAAK,YAAY,SAAS,CAAC;AAAA,EACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,kBAAkB,GAAGD,IAAI,KAAK;AAC5B,UAAMC,IAAI,KAAK,OAAOC,IAAI,KAAK,iBAAiB,EAAE,IAAI,KAAK;AAC3D,WAAOD,IAAIC,KAAKF,KAAK,KAAK,iBAAiB,EAAE,IAAI,IAAIC,GAAG,KAAK,SAAS,CAAC,GAAG,MAAM;AAAA,EAClF;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU,GAAG;AACX,WAAO,KAAK,YAAY,iBAAiB,CAAC;AAAA,EAC5C;AAAA;AAAA;AAAA;AAAA,EAIA,qBAAqB,GAAG;AACtB,WAAO,KAAK,UAAU,UAAU,CAAC;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,eAAe,GAAGD,GAAG;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,mBAAmB,GAAGA,GAAG;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA,EAIA,UAAU;AACR,SAAK,yBAAyB,KAAK,qBAAoB,GAAI,KAAK,uBAAuB,OAAO,KAAK,6BAA6B,KAAK,yBAAwB,GAAI,KAAK,2BAA2B;AAAA,EACnM;AAAA;AAAA;AAAA;AAAA,EAIA,QAAQ;AACN,WAAO,KAAK;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAIA,YAAY;AACV,SAAK,aAAY;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa;AACX,SAAK,eAAe,IAAI,QAAQ,CAAC,MAAM;AACrC,WAAK,eAAe;AAAA,IACtB,CAAC;AAAA,EACH;AACF;AACA,MAAMG,EAAE;AAAA,EACN,YAAY,GAAGH,GAAG;AAChB,SAAK,UAAU,GAAG,KAAK,UAAUA,GAAG,KAAK,UAAU,GAAG,KAAK,SAAS,CAACC,MAAM;AACzE,WAAK,QAAQ,SAAS,aAAa,KAAK,SAASA,CAAC,IAAI,KAAK,SAASA,CAAC;AAAA,IACvE;AAAA,EACF;AAAA,EACA,SAAS,GAAG;AACV,SAAK,aAAa,OAAO,aAAa,KAAK,SAAS,GAAG,KAAK,YAAY,OAAO,WAAW,MAAM;AAC9F,WAAK,QAAQ,CAAC,GAAG,KAAK,YAAY;AAAA,IACpC,GAAG,KAAK,QAAQ,IAAI;AAAA,EACtB;AAAA,EACA,SAAS,GAAG;AACV,QAAI,KAAK,QAAQ,SAAS,WAAY;AACtC,UAAMD,IAAI,KAAK,IAAG,GAAIC,IAAI,KAAK,QAAQ,gBAAgB;AACvD,IAAAD,IAAI,KAAK,WAAW,KAAK,QAAQ,SAASC,MAAM,sBAAsB,KAAK,QAAQ,CAAC,GAAG,KAAK,UAAUD,IAAI,KAAK,aAAa,OAAO,aAAa,KAAK,SAAS,GAAG,KAAK,YAAY,OAAO;AAAA,MACvL,MAAM;AACJ,aAAK,QAAQ,CAAC,GAAG,KAAK,UAAU,KAAK,IAAG,GAAI,KAAK,YAAY;AAAA,MAC/D;AAAA,MACA,KAAK,QAAQ,QAAQA,IAAI,KAAK;AAAA,IACpC;AAAA,EACE;AAAA,EACA,UAAU;AACR,SAAK,aAAa,OAAO,aAAa,KAAK,SAAS;AAAA,EACtD;AACF;AAIA,SAASI,EAAEN,GAAG,GAAGE,GAAG;AAClB,MAAIF,MAAM;AACR,WAAO;AACT,MAAIA,KAAK,QAAQ,KAAK;AACpB,WAAOA,MAAM;AACf,QAAMG,IAAI,OAAOH;AACjB,MAAIG,MAAM,OAAO,EAAG,QAAO;AAC3B,MAAIA,MAAM,UAAU;AAClB,IAAAD,MAAMA,IAAoB,oBAAI;AAC9B,UAAMK,IAAIC,EAAER,GAAG,CAAC;AAChB,QAAIE,EAAE,IAAIK,CAAC;AACT,aAAO;AACT,IAAAL,EAAE,IAAIK,CAAC;AACP,UAAME,IAAI,MAAM,QAAQT,CAAC,GAAG,IAAI,MAAM,QAAQ,CAAC;AAC/C,WAAOS,KAAK,IAAIC,EAAEV,GAAG,GAAGE,CAAC,IAAI,CAACO,KAAK,CAAC,IAAIE,EAAEX,GAAG,GAAGE,CAAC,IAAI;AAAA,EACvD;AACA,SAAO;AACT;AACA,SAASM,EAAER,GAAG,GAAG;AACf,SAAO,GAAGY,EAAEZ,CAAC,CAAC,KAAKY,EAAE,CAAC,CAAC;AACzB;AACA,IAAIC,IAAI;AACR,MAAMC,IAAoB,oBAAI,QAAO;AACrC,SAASF,EAAEZ,GAAG;AACZ,SAAOc,EAAE,IAAId,CAAC,KAAKc,EAAE,IAAId,GAAG,EAAEa,CAAC,GAAGC,EAAE,IAAId,CAAC;AAC3C;AACA,SAASU,EAAEV,GAAG,GAAGE,GAAG;AAClB,MAAIF,EAAE,WAAW,EAAE,OAAQ,QAAO;AAClC,QAAMG,IAAI,IAAI,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACrC,IAAG,UAASC,IAAI,GAAGA,IAAIJ,EAAE,QAAQI,KAAK;AACpC,UAAM,IAAIJ,EAAEI,CAAC;AACb,aAASK,IAAI,GAAGA,IAAI,EAAE,QAAQA;AAC5B,UAAI,CAACN,EAAEM,CAAC,KAAKH,EAAE,GAAG,EAAEG,CAAC,GAAGP,CAAC,GAAG;AAC1B,QAAAC,EAAEM,CAAC,IAAI;AACP,iBAAS;AAAA,MACX;AACF,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACA,SAASE,EAAEX,GAAG,GAAGE,GAAG;AAClB,QAAMC,IAAI,OAAO,KAAKH,CAAC,EAAE,QAAQI,IAAI,OAAO,KAAK,CAAC,EAAE,KAAI;AACxD,MAAID,EAAE,WAAWC,EAAE,OAAQ,QAAO;AAClC,WAAS,IAAI,GAAG,IAAID,EAAE,QAAQ;AAC5B,QAAIA,EAAE,CAAC,MAAMC,EAAE,CAAC,EAAG,QAAO;AAC5B,aAAW,KAAKD,GAAG;AACjB,UAAMM,IAAIT,EAAE,CAAC,GAAGe,IAAI,EAAE,CAAC;AACvB,QAAI,CAACT,EAAEG,GAAGM,GAAGb,CAAC;AACZ,aAAO;AAAA,EACX;AACA,SAAO;AACT;AAUA,SAASc,EAAGhB,GAAG,IAAIM,GAAG;AACpB,QAAMJ,IAAoB,oBAAI,IAAG,GAAIC,IAAoB,oBAAI,IAAG;AAChE,MAAIC,IAAIJ;AACR,QAAM,IAAI,CAACe,MAAMb,EAAE,QAAQ,CAACe,MAAMA,EAAEF,CAAC,CAAC,GAAGN,IAAI,CAACM,GAAGE,MAAM;AACrD,QAAIC,IAAIH,GAAGI,IAAI,MAAM;AAAA,IACrB;AACA,QAAIF,GAAG;AACL,YAAMG,IAAI,IAAIf,EAAEU,GAAGE,CAAC;AACpB,MAAAC,IAAIE,EAAE,QAAQD,IAAI,MAAMC,EAAE,QAAO,GAAIjB,EAAE,IAAIY,GAAG,EAAE,SAASG,GAAG,SAASC,GAAG;AAAA,IAC1E;AACA,WAAOf,MAAM,UAAUc,EAAEd,CAAC,GAAGF,EAAE,IAAIgB,CAAC,GAAG,MAAM;AAC3C,MAAAhB,EAAE,OAAOgB,CAAC,GAAGC,EAAC,GAAIhB,EAAE,OAAOY,CAAC;AAAA,IAC9B;AAAA,EACF;AACA,SAAO;AAAA;AAAA,IAEL,IAAI,QAAQ;AACV,aAAOX;AAAA,IACT;AAAA,IACA,KAAKW,IAAI,QAAQ;AACf,OAACX,MAAM,UAAU,CAAC,EAAEA,GAAGW,CAAC,OAAOX,IAAIW,GAAG,EAAEA,CAAC;AAAA,IAC3C;AAAA,IACA,IAAIN;AAAA,IACJ,IAAIM,GAAG;AACL,YAAME,IAAId,EAAE,IAAIY,CAAC;AACjB,MAAAE,KAAKf,EAAE,OAAOe,EAAE,OAAO,GAAGA,EAAE,QAAO,GAAId,EAAE,OAAOY,CAAC,KAAKb,EAAE,OAAOa,CAAC;AAAA,IAClE;AAAA,IACA,QAAQ;AACN,MAAAb,EAAE,MAAK,GAAIC,EAAE,QAAQ,CAACY,MAAMA,EAAE,QAAO,CAAE,GAAGZ,EAAE,MAAK;AAAA,IACnD;AAAA;AAAA,IAEA,OAAOY,GAAGE,IAAIX,GAAG;AACf,aAAO,CAACY,GAAGC,MAAM;AACf,YAAIC;AACJ,YAAIhB,MAAM,QAAQ;AAChB,gBAAMiB,IAAIN,EAAEX,CAAC;AACb,UAAAgB,IAAIC,GAAGH,EAAEG,CAAC;AAAA,QACZ;AACA,eAAOZ;AAAA,UACL,CAACY,MAAM;AACL,kBAAMC,IAAIP,EAAEM,CAAC;AACb,aAACD,MAAM,UAAU,CAACH,EAAEG,GAAGE,CAAC,OAAOF,IAAIE,GAAGJ,EAAEI,CAAC;AAAA,UAC3C;AAAA,UACAH;AAAA,QACV;AAAA,MACM;AAAA,IACF;AAAA,EACJ;AACA;ACt4BO,SAASI,EACdC,GACAV,GACAI,GACAO,IAAW,IACgD;AAC3D,MAAIV,IAAI,GACNW,IAAI,GACJN,IAAI,GACJO,IAAI,GACJzB,IAAI,GACJI,IAAI;AAEN,UAAQkB,GAAA;AAAA,IACN,KAAK;AACH,MAAAT,IAAI,GACJW,IAAI,GACJN,IAAI,IACJO,IAAI,GACJzB,IAAIgB;AACJ;AAAA,IACF,KAAK;AACH,MAAAH,IAAI,IACJW,IAAI,GACJN,IAAI,GACJO,IAAI,IACJzB,IAAIY,GACJR,IAAIY;AACJ;AAAA,IACF,KAAK;AACH,MAAAH,IAAI,GACJW,IAAI,IACJN,IAAI,GACJO,IAAI,GACJrB,IAAIQ;AACJ;AAAA,EAAA;AAEJ,SAAOW,IAAW,UAAUV,CAAC,IAAIW,CAAC,IAAIN,CAAC,IAAIO,CAAC,IAAIzB,CAAC,IAAII,CAAC,MAAM,CAACS,GAAGW,GAAGN,GAAGO,GAAGzB,GAAGI,CAAC;AAC/E;AC/CA,SAASsB,EAAgBC,GAA6B;AACpD,UAASA,IAAU,KAAK;AAC1B;AAEA,SAASC,EAAoBD,GAA6B;AACxD,UAASA,IAAU,KAAK;AAC1B;AAEO,MAAME,IAAN,MAAMA,UAAqBC,EAAiD;AAAA,EAIjF,YAAYC,GAAYC,GAA0BC,GAAyB;AACzE,UAAMF,GAAIC,CAAQ,GAHpB,KAAiB,UAAUE,EAAA,GAIzB,KAAK,WAAA;AACL,UAAMZ,IAAWW,EAAI,mBAAmB,KAAK,UAAU,KAAK;AAC5D,SAAK,YAAYX,CAAQ,GACzB,KAAK,UAAA;AAAA,EACP;AAAA,EAEA,MAAM,WAAWa,GAA4C;AAAA,EAAC;AAAA,EAEtD,YAAYb,GAA0B;AAE5C,QAAI,CADU,KAAK,UAAU,KAAK;AAEhC,YAAM,IAAI,MAAM,kBAAkB;AAGpC,SAAK,mBAAmBc,EAAYd,CAAQ,CAAC;AAAA,EAC/C;AAAA,EAEQ,gBAAsB;AAC5B,UAAMA,IAAWI,EAAgB,KAAK,UAAU,KAAK,QAAQ;AAC7D,SAAK,YAAYJ,CAAQ;AAAA,EAC3B;AAAA,EAEQ,iBAAuB;AAC7B,UAAMA,IAAWM,EAAoB,KAAK,UAAU,KAAK,QAAQ;AACjE,SAAK,YAAYN,CAAQ;AAAA,EAC3B;AAAA,EAEU,kBAAoC;AAC5C,WAAO;AAAA,MACL,gBAAgB,KAAK,QAAQ;AAAA,MAC7B,aAAa,CAACA,MAAa,KAAK,YAAYA,CAAQ;AAAA,MACpD,aAAa,MAAM,KAAK,UAAU,KAAK;AAAA,MACvC,eAAe,MAAM,KAAK,cAAA;AAAA,MAC1B,gBAAgB,MAAM,KAAK,eAAA;AAAA,MAC3B,WAAW,CAAC,EAAE,GAAAV,IAAI,GAAG,GAAAI,IAAI,GAAG,UAAAO,IAAW,GAAA,IAAS,CAAA,MAC9CF,EAAe,KAAK,UAAU,KAAK,UAAUT,GAAGI,GAAGO,CAAQ;AAAA,IAAA;AAAA,EAEjE;AAAA,EAEA,MAAM,UAAyB;AAC7B,SAAK,QAAQ,MAAA,GACb,MAAM,QAAA;AAAA,EACR;AACF;AAhDEM,EAAgB,KAAK;AADhB,IAAMQ,IAANR;"}